repository_name,repository_url,commit_id,parent_commit_id,commit_url,commit_message,commit_date,commit_author,commit_file
dbeaver/dbeaver,https://github.com/dbeaver/dbeaver,e4b5d5bfe46a2757f94244095dbe680186d78d73,8fb90a69c8279bfa3d5cfe630bfb81658a188616,https://github.com/dbeaver/dbeaver/commit/e4b5d5bfe46a2757f94244095dbe680186d78d73,"#20155 Refactor LSM to rely on SQLDialect (#20196)

* #20155 Refactor lsm, add analyzer to sql dialect

* #20155 Use semantic predicates instead of grammar extension for square brackets quotation

* #20155 Fix code style

* #20155 Add README, fix prefix for syntax support classes

* #20155 Fix build

* #20155 Fix code style

* #20155 Fix test

* #20155 Refactoring the provision of the analyzer using dialect, use DBeaver Log

* #20155 Update README, fix code style

---------

Co-authored-by: Serge Rider <serge@jkiss.org>",2023-06-15 13:43:01,Elizabeth,"['plugins/org.jkiss.dbeaver.model.lsm/src/org/jkiss/dbeaver/model/lsm/sql/impl/syntax/SyntaxParserTest.java', 'test/org.jkiss.dbeaver.model.lsm.test/src/org/jkiss/dbeaver/model/lsm/test/ParseSelectStmtTest.java']"
dbeaver/dbeaver,https://github.com/dbeaver/dbeaver,a5b038331c0a9d927ff9bc2a31313332a06c784e,0b898702492b480d8b71580490c1303bc1539da5,https://github.com/dbeaver/dbeaver/commit/a5b038331c0a9d927ff9bc2a31313332a06c784e,dbeaver/dbeaver#19031 LSM refactoring + engine test,2023-04-08 12:57:00,serge-rider,['plugins/org.jkiss.dbeaver.model.sql.lsm/src/org/jkiss/dbeaver/model/lsm/sql/impl/syntax/Test.java']
dbeaver/dbeaver,https://github.com/dbeaver/dbeaver,2fd93e057a1893ab7c3905390b3dba530d6a9ac5,e3744a049e3f677953779d3d7ea11ea356832ea6,https://github.com/dbeaver/dbeaver/commit/2fd93e057a1893ab7c3905390b3dba530d6a9ac5,"#19031 antlr (#19546)

* #19031 Add plugin and grammars

* #19031 Refactor grammar

* #19031 Add grammar extension for mysql dialect, switch to dbeaver repo for antlr dependencies

* #19031 Add syntax tree to model mapping and select statement model partially

* #19031 Rename package

* #19031 Add tests

* #19031 Add select quantifier mapping and test

* #19031 Refactor SyntaxModel internals out and switch from parallel syntax tree structure to ANTLR tree nodes overrides

* #19031 Fix code style

* #19031 Fix code style

* #19031 Refactor model mapping and add error handling to model

* #19031 Fix code style

* #19031 Fix code style

* #19031 Rename bundle and packages

* #19031 Fix test reference in pom

* #19031 Rename package

* #19031 Fix duplicated header in generated resources

* #19031 Remove unnecessary bundle version",2023-04-07 11:41:38,Elizabeth,"['plugins/org.jkiss.dbeaver.model.sql.lsm/src/org/jkiss/dbeaver/model/sql/lsm/syntax/Test.java', 'test/org.jkiss.dbeaver.model.sql.lsm.test/src/org/jkiss/dbeaver/antlr/sql/test/ParseSelectStmtTest.java']"
dbeaver/dbeaver,https://github.com/dbeaver/dbeaver,2b3b4366040c9a8ca493aa96e1528e0f7b3fa126,3dc8d96a41e12a0c748f5a2ec95bc3f36353006f,https://github.com/dbeaver/dbeaver/commit/2b3b4366040c9a8ca493aa96e1528e0f7b3fa126,"#15524 Parser (#15481)

* #11656 Work in progress on parser

* #15524 Work in progress on parser

* #15524 add common test for parser

* #15524 add unambiguity check to test and string literal escaping

* #15524 add skip rules like whitespaces and test, delayed tree construction; refactoring

* #11656 refactoring

* #11656 add words boundary

* #11656 add readme and rename package

* #11656 add case sensitivity and end positions to parse tree",2022-03-02 06:03:31,Elizabeth,['test/org.jkiss.dbeaver.parser.test/src/org/jkiss/dbeaver/parser/common/test/ParserTest.java']
dbeaver/dbeaver,https://github.com/dbeaver/dbeaver,1921b24fca0b042c8ccd6625792b6cf1568d865a,5d812e5f7a88fe63e33d0541b0a27a16b937b48c,https://github.com/dbeaver/dbeaver/commit/1921b24fca0b042c8ccd6625792b6cf1568d865a,"#13581 add ability to match dialect specific token predicates (#15264)

* #13581 add ability to match dialect specific token predicates

* #13581 add missed annotations about null possibility and refactor

* #13581 refactor dialect-specific predicates to OracleSQLDialect and add debug logging

* #13581 fix dialect initialization for parser test

* #13581 add token actions

* #13581 cleanup code

* #13581 add cli parameter to disable token predicate evaluation and rename fabric to factory

* #13581 cleanup code",2022-01-31 07:37:21,Elizabeth,"['test/org.jkiss.dbeaver.test.platform/src/org/jkiss/dbeaver/model/sql/parser/SQLScriptParserTest.java', 'test/org.jkiss.dbeaver.test.platform/src/org/jkiss/dbeaver/model/sql/parser/TokenPredicatesConditionTest.java', 'test/org.jkiss.dbeaver.test.platform/src/org/jkiss/dbeaver/model/sql/parser/TrieTest.java']"
dbeaver/dbeaver,https://github.com/dbeaver/dbeaver,d666ae5b2c1496edf2913865a98f0540280183d0,14239b9352a7ca206891ab931c6681a0989ec38c,https://github.com/dbeaver/dbeaver/commit/d666ae5b2c1496edf2913865a98f0540280183d0,"#12246 add create/rename/drop table test cases, some refactoring",2021-06-10 22:17:58,Anastasiya Volkova,"['test/org.jkiss.dbeaver.ext.oracle.test/src/org/jkiss/dbeaver/ext/oracle/model/OracleAlterTableColumnTest.java', 'test/org.jkiss.dbeaver.ext.oracle.test/src/org/jkiss/dbeaver/ext/oracle/model/OracleBaseTableTest.java']"
dbeaver/dbeaver,https://github.com/dbeaver/dbeaver,23d944939b6215fb38088d80b731788375e86ddd,f6bb6996996ca061ea70ce3a5b90892e20e664ab,https://github.com/dbeaver/dbeaver/commit/23d944939b6215fb38088d80b731788375e86ddd,#12413 Refactor tests model,2021-05-27 12:05:27,ShadelessFox,['test/org.jkiss.dbeaver.test.platform/src/org/jkiss/dbeaver/model/sql/analyzer/SQLCompletionAnalyzerTest.java']
dbeaver/dbeaver,https://github.com/dbeaver/dbeaver,1ef6beb1e9734c1561ed8c89b88fc1b6cf40c3e2,11e7115efaa20fdc88e16ed8fe626e87fcaba92e,https://github.com/dbeaver/dbeaver/commit/1ef6beb1e9734c1561ed8c89b88fc1b6cf40c3e2,"#11116 Refactor utility method, add test


Former-commit-id: 60d3ecb47e7caddbc86cad9ee7bc5b354273e58e",2021-04-06 12:03:25,ShadelessFox,['test/org.jkiss.dbeaver.test.platform/src/org/jkiss/utils/BeanUtilsTest.java']
dbeaver/dbeaver,https://github.com/dbeaver/dbeaver,1b0c2eca4aa5176482f0db2606006b840afca5f6,013a6be70ef9521e26c150761abaaabf7cfe719c,https://github.com/dbeaver/dbeaver/commit/1b0c2eca4aa5176482f0db2606006b840afca5f6,"#5467 Refactor tests


Former-commit-id: cc97ee6630ec62595c3c49acb8a58937f4124a85",2020-11-06 08:46:38,ShadelessFox,['test/org.jkiss.dbeaver.test.platform/src/org/jkiss/dbeaver/model/sql/parser/SQLScriptParserTest.java']
dbeaver/dbeaver,https://github.com/dbeaver/dbeaver,5630da749c1dadab1f6f855cc29d8db9deb59782,0193cac280e8d7a0f7a5babe5eca873b7bf24cdd,https://github.com/dbeaver/dbeaver/commit/5630da749c1dadab1f6f855cc29d8db9deb59782,"Refactor GreenplumTable tests so that Powermock no longer needed


Former-commit-id: dba43a8bf24e004021631f057bac4ecf4c00509d",2019-01-11 19:05:42,Dmitriy Dubson and Gavin Shaw,['plugins/org.jkiss.dbeaver.ext.greenplum/tests/org/jkiss/dbeaver/ext/greenplum/model/GreenplumTableTest.java']
dbeaver/dbeaver,https://github.com/dbeaver/dbeaver,0193cac280e8d7a0f7a5babe5eca873b7bf24cdd,0c8b1ed0d41f0948ef70ae793a0b33f0a892175c,https://github.com/dbeaver/dbeaver/commit/0193cac280e8d7a0f7a5babe5eca873b7bf24cdd,"Refactor and cleanup of GreenplumTable tests


Former-commit-id: 5cfe4b157190b56640db4b6a3b52168337e68b2e",2019-01-10 14:40:38,Gavin Shaw and Nikhil Pawar,['plugins/org.jkiss.dbeaver.ext.greenplum/tests/org/jkiss/dbeaver/ext/greenplum/model/GreenplumTableTest.java']
dbeaver/dbeaver,https://github.com/dbeaver/dbeaver,16b76add1d609a550d5cf90385acaccad4b60ea5,ba0bef6ce28569411955f87a4d213597e862201b,https://github.com/dbeaver/dbeaver/commit/16b76add1d609a550d5cf90385acaccad4b60ea5,"Remove commented out tests missed during refactor


Former-commit-id: 08466c5fd9d21a0cfae8ce391d8d29468f59ac81",2018-12-15 20:40:04,gshaw-pivotal,['plugins/org.jkiss.dbeaver.ext.postgresql/tests/org/jkiss/dbeaver/ext/postgresql/model/impls/greenplum/GreenplumWithClauseBuilderTest.java']
dbeaver/dbeaver,https://github.com/dbeaver/dbeaver,3dcdc501ca9619521038d784e4ca792e3a5f0009,7caf09ffc8d0c2c2cd167bd81cf70e420f1e5ec3,https://github.com/dbeaver/dbeaver/commit/3dcdc501ca9619521038d784e4ca792e3a5f0009,"Refactor unit tests for PostgreWithClauseAppender

[#162594529]


Former-commit-id: b9e1b57ac3a01b9cc963ccd503c442299d69117e",2018-12-13 17:57:33,Gavin Shaw,['plugins/org.jkiss.dbeaver.ext.postgresql/tests/org/jkiss/dbeaver/ext/postgresql/model/PostgreWithClauseAppenderTest.java']
dbeaver/dbeaver,https://github.com/dbeaver/dbeaver,04091a3656cac1d5ea89031f9d15755d514f860d,d173e5bb6e5153019a8edef90da6f567a13e3944,https://github.com/dbeaver/dbeaver/commit/04091a3656cac1d5ea89031f9d15755d514f860d,"Refactor SQLFormatterTokenized. Extracted new class for indent formatting. Added unit tests.


Former-commit-id: 86e4fd84b732aff048c90f5e41869b8c827c8836",2018-11-05 19:43:10,Alexey Chibisov,['plugins/org.jkiss.dbeaver.model/tests/org/jkiss/dbeaver/model/sql/format/tokenized/SQLFormatterTokenizedTest.java']
alibaba/Sentinel,https://github.com/alibaba/Sentinel,bb281042cb25533a4b97f4618a391ac0a2f6b5d6,061371b30f254b4db92f55581a504ec5331cd8b0,https://github.com/alibaba/Sentinel/commit/bb281042cb25533a4b97f4618a391ac0a2f6b5d6,"Refactor and refine implementation of default circuit breaker rule

* Rename: DefaultDegradeSlot -> DefaultCircuitBreakerSlot
* Refine DefaultCircuitBreakerRuleManager
* Add test cases

Signed-off-by: Eric Zhao <sczyh16@gmail.com>",2022-11-08 03:57:52,Eric Zhao,"['sentinel-core/src/test/java/com/alibaba/csp/sentinel/slots/DefaultSlotChainBuilderTest.java', 'sentinel-core/src/test/java/com/alibaba/csp/sentinel/slots/block/degrade/CircuitBreakingIntegrationTest.java', 'sentinel-core/src/test/java/com/alibaba/csp/sentinel/slots/block/degrade/DefaultCircuitBreakerRuleManagerTest.java', 'sentinel-core/src/test/java/com/alibaba/csp/sentinel/slots/block/degrade/DefaultCircuitBreakerSlotTest.java', 'sentinel-core/src/test/java/com/alibaba/csp/sentinel/spi/SpiLoaderTest.java']"
alibaba/Sentinel,https://github.com/alibaba/Sentinel,069f6182abe32e2e82d3630d0256f5334df0642a,4aaf8e909387f7a91d5dd73cb33404b352dc2543,https://github.com/alibaba/Sentinel/commit/069f6182abe32e2e82d3630d0256f5334df0642a,"dashboard: Improve support for customizing auth-related implementations (#2059)

* refactor(dashboard): use AuthConfiguration to manage the bean of auth
* refactor(dashboard): change AuthorizationInterceptor to an interface
* refactor(dashboard): change LoginAuthenticationFilter to an interface
* refactor(dashboard): use AuthProperties to manage auth config
* test(dashboard): use NoAuthConfigurationTest to create no auth configuration for testing",2021-03-08 10:32:22,wxq,"['sentinel-dashboard/src/test/java/com/alibaba/csp/sentinel/dashboard/config/NoAuthConfigurationTest.java', 'sentinel-dashboard/src/test/java/com/alibaba/csp/sentinel/dashboard/controller/gateway/GatewayApiControllerTest.java', 'sentinel-dashboard/src/test/java/com/alibaba/csp/sentinel/dashboard/controller/gateway/GatewayFlowRuleControllerTest.java']"
alibaba/Sentinel,https://github.com/alibaba/Sentinel,62efb78d4e26d568d726e27ed833a3a8adea724a,a343873c813fc6fdb0404ca80b43ca9da83fa393,https://github.com/alibaba/Sentinel/commit/62efb78d4e26d568d726e27ed833a3a8adea724a,"Refactor SpiLoader and enhance SPI mechanism (#1383)

* Add `@Spi` annotation as the general annotation for SPI definition.
* Add isDefault in @Spi, add loadDefaultInstance and improve loadFirstInstanceOrDefault method, improve test cases
* Add SpiLoaderException class for thrown when something goes wrong while loading Provider
* Rearrange packages of base SPI mechanism

NOTE: this PR contains breaking changes regarding API.",2021-01-27 01:45:56,cdfive,"['sentinel-core/src/test/java/com/alibaba/csp/sentinel/spi/SpiLoaderTest.java', 'sentinel-core/src/test/java/com/alibaba/csp/sentinel/util/SpiLoaderTest.java']"
alibaba/Sentinel,https://github.com/alibaba/Sentinel,8b40981fca838649db7b7398d679fed2998382a4,9ff6e47bb0a0f279046e5401f700eb4449f53e1c,https://github.com/alibaba/Sentinel/commit/8b40981fca838649db7b7398d679fed2998382a4,"Improve SystemRuleManager and refactor checking logic of maxCpuUsage strategy (#1050)

- The BBR period for maxCpuUsage strategy is deprecated. Now Sentinel will just check the CPU usage value, which could avert surge of CPU usage quickly
- Improve SystemRuleManager and SystemStatusListener
- Add some test cases

Signed-off-by: Eric Zhao <sczyh16@gmail.com>",2019-09-19 08:36:12,Eric Zhao,['sentinel-core/src/test/java/com/alibaba/csp/sentinel/slots/system/SystemRuleManagerTest.java']
alibaba/Sentinel,https://github.com/alibaba/Sentinel,82578e1fdf07ee4694fde973820056bdb9ff69e1,268c5502ed358c9653e45492479e6ced91ec9239,https://github.com/alibaba/Sentinel/commit/82578e1fdf07ee4694fde973820056bdb9ff69e1,"Refactor and improve fallback support for @SentinelResource annotation (#693)

- Refactor the semantics and logic for blockHandler and fallback
- Add `fallbackClass` support for fallback in global classes
- Add `defaultFallback` support
- Update test cases and demo

Signed-off-by: Eric Zhao <sczyh16@gmail.com>",2019-04-23 15:17:03,Eric Zhao,['sentinel-extension/sentinel-annotation-aspectj/src/test/java/com/alibaba/csp/sentinel/annotation/aspectj/integration/SentinelAnnotationIntegrationTest.java']
alibaba/Sentinel,https://github.com/alibaba/Sentinel,4b1ccd93e2a439352e04e7975c9368398bc0c0e9,63d7c9d207a0c474152b04cabe04e590c22893ba,https://github.com/alibaba/Sentinel/commit/4b1ccd93e2a439352e04e7975c9368398bc0c0e9,"Refactor Node interface: change return type of `xxxQps` method from long to double (#564)

- Update test cases (use assertEquals(e, a, delta) instead)
- Also add `totalPass` method in Node interface

Signed-off-by: Eric Zhao <sczyh16@gmail.com>",2019-03-13 14:10:20,Eric Zhao,"['sentinel-adapter/sentinel-reactor-adapter/src/test/java/com/alibaba/csp/sentinel/adapter/reactor/FluxSentinelOperatorTestIntegrationTest.java', 'sentinel-adapter/sentinel-spring-webflux-adapter/src/test/java/com/alibaba/csp/sentinel/adapter/spring/webflux/SentinelWebFluxIntegrationTest.java', 'sentinel-adapter/sentinel-web-servlet/src/test/java/com/alibaba/csp/sentinel/adapter/servlet/CommonFilterTest.java', 'sentinel-adapter/sentinel-web-servlet/src/test/java/com/alibaba/csp/sentinel/adapter/servletmethod/CommonFilterMethodTest.java', 'sentinel-core/src/test/java/com/alibaba/csp/sentinel/node/ClusterNodeTest.java', 'sentinel-core/src/test/java/com/alibaba/csp/sentinel/node/StatisticNodeTest.java', 'sentinel-core/src/test/java/com/alibaba/csp/sentinel/slots/block/degrade/DegradeTest.java', 'sentinel-core/src/test/java/com/alibaba/csp/sentinel/slots/block/flow/FlowPartialIntegrationTest.java', 'sentinel-core/src/test/java/com/alibaba/csp/sentinel/slots/block/flow/FlowRuleTest.java', 'sentinel-core/src/test/java/com/alibaba/csp/sentinel/slots/block/flow/controller/DefaultControllerTest.java', 'sentinel-core/src/test/java/com/alibaba/csp/sentinel/slots/block/flow/controller/WarmUpControllerTest.java', 'sentinel-core/src/test/java/com/alibaba/csp/sentinel/slots/block/flow/controller/WarmUpRateLimiterControllerTest.java']"
alibaba/Sentinel,https://github.com/alibaba/Sentinel,5aad448191a594611e6000c65597f4063b86d955,078df9db4faca7f61b16f0939f9bc061c3906b00,https://github.com/alibaba/Sentinel/commit/5aad448191a594611e6000c65597f4063b86d955,"Refactor logic of getting resource name in Sentinel annotation

- Enhance resolve name logic in MethodUtil
- Add test case for MethodUtil

Signed-off-by: Eric Zhao <sczyh16@gmail.com>",2018-10-24 06:46:42,Eric Zhao,['sentinel-core/src/test/java/com/alibaba/csp/sentinel/util/MethodUtilTest.java']
alibaba/Sentinel,https://github.com/alibaba/Sentinel,b61be268a3c0ce8a364ac81f02fc8b9c6c3ce63a,2772f189abaa77a11867f58c0364ec6b47bab5c0,https://github.com/alibaba/Sentinel/commit/b61be268a3c0ce8a364ac81f02fc8b9c6c3ce63a,"Refactor test cases for Sentinel gRPC Adapter (#101)

- Added a GrpcTestServer to abstract common server logic
- Refactor with new added `GrpcTestServer`",2018-08-30 15:57:23,refactormachine,"['sentinel-adapter/sentinel-grpc-adapter/src/test/java/com/alibaba/csp/sentinel/adapter/grpc/SentinelGrpcClientInterceptorTest.java', 'sentinel-adapter/sentinel-grpc-adapter/src/test/java/com/alibaba/csp/sentinel/adapter/grpc/SentinelGrpcServerInterceptorTest.java']"
dianping/cat,https://github.com/dianping/cat,8282a1ead2fdab7a3fb984167d7f915e64d7f0c4,70cabd91f1ab7965a28fa43781f3026bd9072a19,https://github.com/dianping/cat/commit/8282a1ead2fdab7a3fb984167d7f915e64d7f0c4,refactor code and fix test error,2015-02-10 08:04:58,youyong205,"['cat-consumer/src/test/java/com/dianping/cat/consumer/cross/CrossInfoTest.java', 'cat-home/src/test/java/com/dianping/cat/report/alert/AlertReportBuilderTest.java', 'cat-home/src/test/java/com/dianping/cat/report/alert/AlertTest.java', 'cat-home/src/test/java/com/dianping/cat/report/alert/ExtractDataTest.java', 'cat-home/src/test/java/com/dianping/cat/report/alert/MetricIdAndRuleMappingTest.java', 'cat-home/src/test/java/com/dianping/cat/report/alert/RuleConfigTest.java', 'cat-home/src/test/java/com/dianping/cat/report/alert/SenderManagerTest.java', 'cat-home/src/test/java/com/dianping/cat/report/alert/SplitManagerTest.java', 'cat-home/src/test/java/com/dianping/cat/report/alert/SuspendTest.java', 'cat-home/src/test/java/com/dianping/cat/report/alert/TopReportVisitorTest.java', 'cat-home/src/test/java/com/dianping/cat/report/alert/UserDefineRuleTest.java', 'cat-home/src/test/java/com/dianping/cat/report/alert/sender/SenderManagerTest.java', 'cat-home/src/test/java/com/dianping/cat/report/alert/sender/SenderTest.java', 'cat-home/src/test/java/com/dianping/cat/report/task/alert/UserDefineRuleTest.java', 'cat-home/src/test/java/com/dianping/cat/report/task/metric/AlertConfigTest.java']"
dianping/cat,https://github.com/dianping/cat,3ee0e450821da792bd1bfeabfffe42c96672987f,5129b67d062d51f2a7e6100def3f55133d29c9a4,https://github.com/dianping/cat/commit/3ee0e450821da792bd1bfeabfffe42c96672987f,ABTest refactor and Bug fix,2013-12-10 09:41:28,ainilife,"['cat-home/src/test/java/com/dianping/cat/abtest/conditions/TrafficFilterCodeGenerationTest.java', 'cat-home/src/test/java/com/dianping/cat/abtest/groupstrategy/GroupStrategyParserTest.java', 'cat-home/src/test/java/com/dianping/cat/abtest/groupstrategy/GsonBuilderManagerTest.java']"
dianping/cat,https://github.com/dianping/cat,d288d90328bbad2fb6eb442b2dd994b671916c0e,ddb3a02b8627bf3eb3a21760f92956cbd8367b12,https://github.com/dianping/cat/commit/d288d90328bbad2fb6eb442b2dd994b671916c0e,Refactor the unit tests and LICENSE,2013-11-19 07:52:54,ainilife,"['cat-client/src/test/java/com/dianping/cat/message/internal/MessageIdFactoryTest.java', 'cat-core/src/test/java/com/dianping/cat/message/spi/core/MessagePathBuilderTest.java', 'cat-home/src/test/java/com/dianping/cat/report/task/problem/ProblemDailyGraphTest.java']"
dianping/cat,https://github.com/dianping/cat,d1c44804cb21121066dce41617f46c19e89679e0,050b5f8d166a07379a24cfc82b263702f9a4abf5,https://github.com/dianping/cat/commit/d1c44804cb21121066dce41617f46c19e89679e0,refactor abtest unit tests,2013-11-19 03:13:21,ainilife,"['cat-home/src/test/java/com/dianping/cat/abtest/ABTestCaculatorTest.java', 'cat-home/src/test/java/com/dianping/cat/abtest/ABTestReportDateImporterTest.java', 'cat-home/src/test/java/com/dianping/cat/abtest/MetricReportForABTestVisitorTest.java', 'cat-home/src/test/java/com/dianping/cat/abtest/groupstrategy/GsonBuilderManagerTest.java', 'cat-home/src/test/java/com/dianping/cat/abtest/report/RetinaImgBusinessReportTest.java', 'cat-home/src/test/java/com/dianping/cat/abtest/service/ABTestServiceImplTest.java', 'cat-home/src/test/java/com/dianping/cat/report/task/abtest/MetricReportForABTestVisitorTest.java', 'cat-home/src/test/java/com/dianping/cat/report/task/abtest/ReportHandlerTest.java']"
dianping/cat,https://github.com/dianping/cat,050b5f8d166a07379a24cfc82b263702f9a4abf5,40276648e957370c9db798973f32ad233fc6c452,https://github.com/dianping/cat/commit/050b5f8d166a07379a24cfc82b263702f9a4abf5,Delete duplicate AllTest.java file and refactor abtest package name,2013-11-19 02:52:28,ainilife,"['cat-home/src/test/java/com/dianping/cat/abtest/ABTestCaculatorTest.java', 'cat-home/src/test/java/com/dianping/cat/abtest/conditions/TrafficFilterCodeGenerationTest.java', 'cat-home/src/test/java/com/dianping/cat/abtest/conditions/TrafficFilterTest.java', 'cat-home/src/test/java/com/dianping/cat/abtest/groupstrategy/GroupStrategyParserTest.java', 'cat-home/src/test/java/com/dianping/cat/abtest/groupstrategy/GsonBuilderManagerTest.java', 'cat-home/src/test/java/com/dianping/cat/abtest/report/RetinaImgBusinessReportTest.java', 'cat-home/src/test/java/com/dianping/cat/abtest/service/ABTestServiceImplTest.java']"
dianping/cat,https://github.com/dianping/cat,ca70d003253483bd2ec339025f39d0ff15f902d5,06d12eb849780411a3cec61aaaa507e4a1010d61,https://github.com/dianping/cat/commit/ca70d003253483bd2ec339025f39d0ff15f902d5,refactor tests package,2013-11-12 09:10:50,ainilife,"['cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/cross/CrossInfoTest.java', 'cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/matrix/MatrixModelTest.java', 'cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/sql/DatabaseParserTest.java', 'cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/sql/SqlParsersTest.java']"
dianping/cat,https://github.com/dianping/cat,9004a1f09c6353053671ab1860661b745af17b71,892636b6d576e415e7710eee033303038be62306,https://github.com/dianping/cat/commit/9004a1f09c6353053671ab1860661b745af17b71,Refactor test and add unit test for TopAnalyzer,2013-10-29 10:05:52,ainilife,['cat-consumer/src/test/java/com/dianping/cat/consumer/top/TopAnalyzerTest.java']
dianping/cat,https://github.com/dianping/cat,d0b004eb13d8dbd13d05af4c91b090d7793860f1,bba67ecd232fabc607446d420c3aa5cf160bf0b4,https://github.com/dianping/cat/commit/d0b004eb13d8dbd13d05af4c91b090d7793860f1,refactor the unit tests for problem analyzer,2013-10-25 07:01:20,ainilife,"['cat-consumer/src/test/java/com/dianping/cat/consumer/problem/ProblemHandlerTest.java', 'cat-consumer/src/test/java/com/dianping/cat/consumer/problem/ProblemReportAggregationTest.java', 'cat-consumer/src/test/java/com/dianping/cat/consumer/problem/ProblemReportTest.java']"
dianping/cat,https://github.com/dianping/cat,c6c79306a8ece27630352cf6eca3dadcc939c62a,2e3133b94bb326a381ec5c73cf9fccb2afefc743,https://github.com/dianping/cat/commit/c6c79306a8ece27630352cf6eca3dadcc939c62a,Refactor unit tests for transaction and event,2013-10-24 08:00:00,ainilife,"['cat-consumer/src/test/java/com/dianping/cat/consumer/event/EventAnalyzerTest.java', 'cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionAnalyzerTest.java', 'cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportFilterTest.java', 'cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportTest.java']"
dianping/cat,https://github.com/dianping/cat,281e20477cc0e1e963d87e2d64454e4ad2153740,72b30ee3c80bcd2b8ecf73b6abf428a20f06efea,https://github.com/dianping/cat/commit/281e20477cc0e1e963d87e2d64454e4ad2153740,ABTest traffic distribution refactor,2013-08-22 04:03:57,ainilife,"['cat-client/src/test/java/com/dianping/cat/abtest/spi/internal/ABTestContextManagerTest.java', 'cat-client/src/test/java/com/dianping/cat/abtest/spi/internal/ABTestFilterManagerTest.java', 'cat-client/src/test/java/com/dianping/cat/abtest/spi/internal/AbtestModelTest.java', 'cat-home/src/test/java/com/dianping/cat/home/abtest/ABTestCaculatorTest.java', 'cat-home/src/test/java/com/dianping/cat/home/abtest/ScriptFragementTest.java']"
dianping/cat,https://github.com/dianping/cat,76983f43e4d653232a8dd868bf03b1f73e671877,3b98c97936113fb6cb585886f25c415d079f5006,https://github.com/dianping/cat/commit/76983f43e4d653232a8dd868bf03b1f73e671877,refactor and add unit test,2013-07-10 07:25:41,sunryuan,"['cat-home/src/test/java/com/dianping/cat/report/analyzer/OpDataCollectTest.java', 'cat-home/src/test/java/com/dianping/cat/report/baseline/BaselineCreatorTest.java', 'cat-home/src/test/java/com/dianping/cat/report/task/metric/MetricAlertTest.java', 'cat-home/src/test/java/com/dianping/cat/report/task/metric/MetricBaselineReportBuilderTest.java']"
dianping/cat,https://github.com/dianping/cat,60f337effe521d1496f8510571d2fc22df7b78d8,9ebf6bf3c24d18dea641bc0e18bd32a77281fdbe,https://github.com/dianping/cat/commit/60f337effe521d1496f8510571d2fc22df7b78d8,refactor cat-core according to the change of abtest model,2013-05-14 12:31:43,ainilife,['cat-core/src/test/java/com/dianping/cat/abtest/spi/internal/AbtestModelTest.java']
dianping/cat,https://github.com/dianping/cat,e083b6aaf2fc32e24af4a7f6566545f0510aadab,aa698c70db051259f45f6c0736e2478b6299a6a9,https://github.com/dianping/cat/commit/e083b6aaf2fc32e24af4a7f6566545f0510aadab,"refactor test environment, and add logger support",2012-09-13 03:44:50,Yiming Liu,"['bee-engine/src/test/java/com/dianping/bee/engine/QueryServiceTest.java', 'bee-engine/src/test/java/com/dianping/bee/jdbc/DCLtatementTest.java']"
dianping/cat,https://github.com/dianping/cat,86708ddce5c6b95cb0216b336753075a1425743c,5a773f6aaeba066b15b38f8a9731928a9201a8ae,https://github.com/dianping/cat/commit/86708ddce5c6b95cb0216b336753075a1425743c,refactor command handler and add more jdbc test,2012-08-28 07:29:19,Yiming Liu,['bee-engine/src/test/java/com/dianping/bee/jdbc/JDBCTest.java']
dianping/cat,https://github.com/dianping/cat,bc221d6253f4aeecb3754cd7150255210a46e24e,06f03b7c00af86f6a61b9bffb4aeca03cd0ac386,https://github.com/dianping/cat/commit/bc221d6253f4aeecb3754cd7150255210a46e24e,refactor and integrate test,2012-08-23 07:47:13,Yiming Liu,['bee-engine/src/test/java/com/dianping/bee/engine/spi/SpiTest.java']
redis/jedis,https://github.com/redis/jedis,9e21013dbfd1cebee5f373849359bb2c23dfb4d3,1da50e08180663b9bea506974caf4cc4dbf02101,https://github.com/redis/jedis/commit/9e21013dbfd1cebee5f373849359bb2c23dfb4d3,"Introduce PipelineBase for Pipeline and multi node pipeline classes (#3437)

* Remove Queable

* Introduce PipelineBase for Pipeline and multi node pipeline classes

* refactor imports

* fix xrevrange test

* breaking doc",2023-05-25 12:39:19,M Sazzadul Hoque,['src/test/java/redis/clients/jedis/ClusterPipeliningTest.java']
redis/jedis,https://github.com/redis/jedis,538c6566ba1d231ae778a57004f9d1cfa83eb3f7,70179cc2aca3e6db32baa0726801195e143083a5,https://github.com/redis/jedis/commit/538c6566ba1d231ae778a57004f9d1cfa83eb3f7,"Abstraction for JSON object mapper (#3319)

* Edited gson dependency as optional and add jackson dependency only for tests purpose

* Created exception for config error purpose

* Classes and interfaces created to gain code decoupling from json convertion implementation

* Class is no longer needed

* Interfaces created as contract for all redis command json operations to set an implementation of a json convertion by polymorphism

* Changed json engine implementation to an interface to decouple code and make it interchangeable

* Implemented contract to define a json engine encoding/decoding

* classes created for json conversion with different json engines for testing purposes and junit tests for them

* Removed import that is no longer used

* Removed the optional statement for gson lib to not break the change

* Just removed unused exception

* Edited to use a plain jedis exception instead of a custom one

* setting gson as default json parser automatically when none set

* Removed unnecessary interface but kept setters for json serializer/deserializer engine configuration

* Unused imports removed

* Classes, interfaces, methods and other comment references renamed from word 'parser' to 'object mapper'.

* Classes and interfaces moved to 'json' package because it's not need a separate package

* Made some tweaks to the custom object mapper for jackson which throws a jedi's Exception instead of just printing stack trace.

* Refactored method to get json object mapper reference using double checked lock approach as suggestion in review code

* Removed unit test no longer occurs jedis exception after refactoring json object mapper instance in 'command object class'

* Unused imports removed",2023-03-15 04:56:36,clebersonp,['src/test/java/redis/clients/jedis/modules/json/RedisJsonV1Test.java']
redis/jedis,https://github.com/redis/jedis,e166fb55c62e88a600b57045c6d528d085326af6,ec6ad55f9fced08a9f168a6e94271f4939559815,https://github.com/redis/jedis/commit/e166fb55c62e88a600b57045c6d528d085326af6,"Test: Address ACL error messaging changes (#3170)

- Address ""Unify ACL failure error messaging.""
  - PR: https://github.com/redis/redis/pull/11160
  - Commit: https://github.com/redis/redis/commit/3193f086ca0e167e89b6c5cf14133c03213b8378

- Refactor AccessControlListCommandsTest",2022-10-17 07:35:39,M Sazzadul Hoque,['src/test/java/redis/clients/jedis/commands/jedis/AccessControlListCommandsTest.java']
redis/jedis,https://github.com/redis/jedis,9e6cddfb7ca556ea398c3d945e5a94f80f81e11a,d7583a471c832393b7fef34461880cab040442f1,https://github.com/redis/jedis/commit/9e6cddfb7ca556ea398c3d945e5a94f80f81e11a,RedisJsonV2Test: Refactor creating JSONArray for assert operations,2022-05-28 15:21:05,M Sazzadul Hoque,"['src/test/java/redis/clients/jedis/modules/json/RedisJsonV1Test.java', 'src/test/java/redis/clients/jedis/modules/json/RedisJsonV2Test.java']"
redis/jedis,https://github.com/redis/jedis,db23057b6284744bca8dd3f8a301f628817ffddd,42588f4eddf53cc6dc46bd02d59a6c0f80415573,https://github.com/redis/jedis/commit/db23057b6284744bca8dd3f8a301f628817ffddd,"Cluster EPOCH commands and refactor tests (#2927)

* Support CLUSTER SET-CONFIG-EPOCH and CLUSTER BUMPEPOCH

* javadoc

* Modify/Refactor Cluster (commands) tests

Co-authored-by: Avital-Fine <avital.fine@redis.com>",2022-02-28 02:11:03,M Sazzadul Hoque,"['src/test/java/redis/clients/jedis/JedisClusterTest.java', 'src/test/java/redis/clients/jedis/SSLACLJedisClusterTest.java', 'src/test/java/redis/clients/jedis/SSLJedisClusterTest.java', 'src/test/java/redis/clients/jedis/commands/jedis/ClusterBinaryValuesCommandsTest.java', 'src/test/java/redis/clients/jedis/commands/jedis/ClusterCommandsTest.java', 'src/test/java/redis/clients/jedis/commands/jedis/ClusterScriptingCommandsTest.java', 'src/test/java/redis/clients/jedis/commands/jedis/ClusterValuesCommandsTest.java']"
redis/jedis,https://github.com/redis/jedis,270bb713d206a401384b1021289f6b02c8b1e2a2,71dac3696a0b5e7af483b0d7dc467a4d5651caa9,https://github.com/redis/jedis/commit/270bb713d206a401384b1021289f6b02c8b1e2a2,"Retry with backoff on cluster connection failures (#2358)

* Split JedisClusterCommand into multiple methods

No behavior changes, just a refactoring.

Changes:
* Replaces recursion with a for loop
* Extract redirection handling into its own method
* Extract connection-failed handling into its own method

Note that `tryWithRandomNode` is gone, it was never `true` so it and its
code didn't survive the refactoring.

* Drop redundant null check

* Bump JDK version to 1.8

Inspired by #1334 where this went real easy :).

Would have made #2355 shorter.

Free public updates for JDK 7 ended in 2015:
<https://en.wikipedia.org/wiki/Java_version_history>

For JDK 8, free public support is available from non-Orace vendors until
at least 2026 according to the same table.

And JDK 8 is what Jedis is being tested on anyway:
<https://github.com/redis/jedis/blob/ac0969315655180c09b8139c16bded09c068d498/.circleci/config.yml#L67-L74>

* Replace ConnectionGetters with lambdas

* Retrigger CI

* Add backoff to Redis connections

* Add unit tests for backoff logic

* Add retries logging

* Always use the user requested timeout

* Remedy review feedback

* Consider connection exceptions and disregard random nodes

* consider connection exceptions and disregard random nodes

* reset redirection

* Revert ""Consider connection exceptions and disregard random nodes""

This reverts commit 67a062aa231b24f9f6d0b5baa7f555e83b73e961.

Lots of tests in JedisClusterCommandTests started failing, need to be
fixed before trying again.

* Add another backoff test case

1. We try to contact master => JedisConnectionException
2. We try to contact replica => It refers us to master, hasn't failed over yet
3. We try to contact master => JedisConnectionException
4. We try to contact replica => Success, because it has now failed over

* consider connection exceptions and disregard random nodes

* reset redirection

* Fix test failure

* Apply suggestions from code review

Co-authored-by: Jens Green Olander <jensgreen@users.noreply.github.com>

* update documentation

* Improve a comment

* Update src/main/java/redis/clients/jedis/DefaultJedisSocketFactory.java

* Add change from another branch

Source (all of these point to the same place):
* walles/retries-split
* 4f80d7398c6210d189f9cf70749baf31c8dc55e9
* https://github.com/redis/jedis/pull/2355

* Move JedisClusterCommandTest out of commands package

* Use JedisClusterOperationException

* Reduce sleep time, especially when few attempts left

* Update src/main/java/redis/clients/jedis/JedisClusterCommand.java

* merge fix

* merge fix

* Use maxAttempts

* format import

* Re-add missing codes due to merge

* avoid NPE while zero max attempts

* Remove zero attempts test

* More cluster constructors and customizability

* Use maxTotalRetriesDuration everywhere

* more missing maxTotalRetriesDuration after merge

Co-authored-by: M Sazzadul Hoque <7600764+sazzad16@users.noreply.github.com>
Co-authored-by: Jens Green Olander <jgreen@spotify.com>
Co-authored-by: Jens Green Olander <jensgreen@users.noreply.github.com>",2021-03-31 02:08:56,Johan Walles,['src/test/java/redis/clients/jedis/tests/JedisClusterCommandTest.java']
redis/jedis,https://github.com/redis/jedis,8896fea978b49510b917c432695a476737ae44f8,def09ea881f1d47ba98a1b23b105c07e69e0a7a5,https://github.com/redis/jedis/commit/8896fea978b49510b917c432695a476737ae44f8,"Introduce and extend Config pattern (III/2) (#2368)

* Introduce Config pattern

* Handle broken status while JedisConnectionException

* polishing catch in connect

* resolve errors after rebasing

* expand jedis socket config

* Extend Config pattern

* JedisClientConfig extends JedisSocketConfig

* polishing, JedisShardInfo, etc

* address change requests

* address change requests

* correct test

* refactor/format

* copy config params

* Unify JedisSocketConfig into JedisClientConfig

* address review

* remove anti-logical tests for sharded pool

* modify uriWithDBindexShouldUseTimeout test

* more logging

* review: suggest alternate for deprecated

* removed unused imports

* clarify deprecation

* remove deprecation for method that won't be removed",2021-03-05 13:32:09,M Sazzadul Hoque,"['src/test/java/redis/clients/jedis/tests/ConnectionTest.java', 'src/test/java/redis/clients/jedis/tests/JedisClusterTest.java', 'src/test/java/redis/clients/jedis/tests/JedisPoolTest.java', 'src/test/java/redis/clients/jedis/tests/JedisPoolWithCompleteCredentialsTest.java', 'src/test/java/redis/clients/jedis/tests/JedisTest.java', 'src/test/java/redis/clients/jedis/tests/JedisWithCompleteCredentialsTest.java', 'src/test/java/redis/clients/jedis/tests/SSLJedisClusterTest.java', 'src/test/java/redis/clients/jedis/tests/SSLJedisClusterWithCompleteCredentialsTest.java', 'src/test/java/redis/clients/jedis/tests/SSLJedisTest.java', 'src/test/java/redis/clients/jedis/tests/SSLJedisWithCompleteCredentialsTest.java', 'src/test/java/redis/clients/jedis/tests/ShardedJedisPoolTest.java', 'src/test/java/redis/clients/jedis/tests/ShardedJedisPoolWithCompleteCredentialsTest.java', 'src/test/java/redis/clients/jedis/tests/ShardedJedisTest.java', 'src/test/java/redis/clients/jedis/tests/UdsTest.java', 'src/test/java/redis/clients/jedis/tests/commands/AccessControlListCommandsTest.java', 'src/test/java/redis/clients/jedis/tests/commands/ControlCommandsTest.java']"
redis/jedis,https://github.com/redis/jedis,06025937f9c2db7de9dd7d3449c976d1f4568214,2504f23bdf7229fd7e10be72eafecbf75b99f70c,https://github.com/redis/jedis/commit/06025937f9c2db7de9dd7d3449c976d1f4568214,"Throw an exception when trying to read from a broken connection (#1923)

- When attempting to read from a broken connection, Jedis could potentially try to read some corrupt data and interpret it according to the Redis protocol, this makes it throw an exception instead of trying that.
- https://github.com/xetorthio/jedis/issues/1747 describes that possible misinterpretations of the protocol can lead to trying to create very large arrays
- Also refactor clientPause test, it was testing that clients fail, CLIENT PAUSE command pauses all clients, so they should be expected to be delayed rather than failed",2019-03-26 17:21:10,Mina Asham,"['src/test/java/redis/clients/jedis/tests/ConnectionTest.java', 'src/test/java/redis/clients/jedis/tests/commands/ControlCommandsTest.java']"
redis/jedis,https://github.com/redis/jedis,687716902d4ca8e9bb5a306a8af3a4ab1ba0b4bf,56d179894362de07c647e37666d835aea1cb426d,https://github.com/redis/jedis/commit/687716902d4ca8e9bb5a306a8af3a4ab1ba0b4bf,Add support for cluster reset command. Some tests were refactored per the inclusion of the new command,2014-09-14 18:43:18,Marcos Nils,['src/test/java/redis/clients/jedis/tests/commands/ClusterCommandsTest.java']
redis/jedis,https://github.com/redis/jedis,a50cf3b15e36c78023baf85894c721fc612f041e,01842e4731cc7e7e05c47b275f2aafc49571ac69,https://github.com/redis/jedis/commit/a50cf3b15e36c78023baf85894c721fc612f041e,"Apply Sentinel runtime configuration API introduced on Redis 2.8.4

* Implements new sentinel commands (failover, monitor, remove, set) 
* unit test included
** added 2 redis-server and 1 sentinel for failover test
* with some refactoring
** SentinelCommands : refactor to have interface
** HostAndPortUtil : same format to cluster setup",2014-01-21 15:23:40,Jungtaek Lim,['src/test/java/redis/clients/jedis/tests/JedisSentinelTest.java']
redis/jedis,https://github.com/redis/jedis,46733c5d5a081d3397e05e3027e89435b7859035,2f9564e1d331a2cfad400eea17fdf4058e98dd48,https://github.com/redis/jedis/commit/46733c5d5a081d3397e05e3027e89435b7859035,Add test for redis cluster max redirections and refactor JedisClusterCommand exception handling,2014-01-16 21:04:27,Marcos Nils,['src/test/java/redis/clients/jedis/tests/JedisClusterTest.java']
redis/jedis,https://github.com/redis/jedis,2f9564e1d331a2cfad400eea17fdf4058e98dd48,ccf93714e67057a1b8951713ec1986d236e4fe06,https://github.com/redis/jedis/commit/2f9564e1d331a2cfad400eea17fdf4058e98dd48,Variable refactor in JedisClusterTest,2014-01-15 00:20:33,Marcos Nils,['src/test/java/redis/clients/jedis/tests/JedisClusterTest.java']
redis/jedis,https://github.com/redis/jedis,dd0bbdaf9182f5d32c43ce0902b1a99f366c238e,1b268157999abf69367fd2b6de7c7aed7b649896,https://github.com/redis/jedis/commit/dd0bbdaf9182f5d32c43ce0902b1a99f366c238e,"Several changes have been added to this commit:

- Add asking to cluster commands
- Make jedis cluster return connection to original pool
- Add tests for MOVED and ASK cluster responses
- Refactor connection handler to recalculate connections based on slots

This commit makes the first usable version of Jedis along with Redis Cluster",2014-01-03 19:42:21,Marcos Nils,['src/test/java/redis/clients/jedis/tests/JedisClusterTest.java']
redis/jedis,https://github.com/redis/jedis,a2b3417fce4373f1d2563089c5690de02f187e1c,47a39cb520d4dc7e7868357712b8a4f740da435c,https://github.com/redis/jedis/commit/a2b3417fce4373f1d2563089c5690de02f187e1c,"Fix some more U tests ...

Now only PubSub are still broken ... (little refactoring required)",2010-11-05 09:30:02,Yaourt,['src/test/java/redis/clients/jedis/tests/commands/TransactionCommandsTest.java']
cryptomator/cryptomator,https://github.com/cryptomator/cryptomator,d814c1cfca84d9d5184767418b9ad964bc876b34,50413ca9d8b28c5654f79be82966563ddfa95b29,https://github.com/cryptomator/cryptomator/commit/d814c1cfca84d9d5184767418b9ad964bc876b34,"Update integrations-win lib (#2331)

* update to integrations-win 1.1.2

* refactor environment class to reduce maintenance

* fix test

Co-authored-by: Sebastian Stenzel <overheadhunter@users.noreply.github.com>",2022-07-11 13:59:54,Armin Schrenk,['src/test/java/org/cryptomator/common/EnvironmentTest.java']
cryptomator/cryptomator,https://github.com/cryptomator/cryptomator,e15b68fc9be800d250739520849c6544668f4bb8,3ff3b1c63e69c5ecc7752f60ce9a2f94de7ebb6b,https://github.com/cryptomator/cryptomator/commit/e15b68fc9be800d250739520849c6544668f4bb8,Refactor winfsp mount preps and add unit tests,2022-02-28 17:54:01,Armin Schrenk,['src/test/java/org/cryptomator/common/mountpoint/CustomMountPointChooserTest.java']
cryptomator/cryptomator,https://github.com/cryptomator/cryptomator,eb6ade49f680e0767816163fe74df0dacda3564c,6553c04256c33a80db8a1a9d891c863e6f01f292,https://github.com/cryptomator/cryptomator/commit/eb6ade49f680e0767816163fe74df0dacda3564c,refactor to use parameterized test,2020-08-27 14:02:28,Armin Schrenk,['main/commons/src/test/java/org/cryptomator/common/settings/VaultSettingsTest.java']
cryptomator/cryptomator,https://github.com/cryptomator/cryptomator,f081e7d3eae6830ce51a66f87b4d019ad572b38b,e241c5ba05e02abc1001be103d47002680b5e336,https://github.com/cryptomator/cryptomator/commit/f081e7d3eae6830ce51a66f87b4d019ad572b38b,"Removed SharedFileChannel transferTo and corresponding methods

* Removed from SharedFileChannel and Test
* Refactored Copier#copy(File,File) to sequence of truncated, followed
by looping read and write till EOF
* Changed tests accordingly
* Implemented CryptoWritableFile#truncate to make things work",2016-01-24 21:14:06,Markus Kreusch,"['main/filesystem-api/src/test/java/org/cryptomator/filesystem/CopierTest.java', 'main/filesystem-api/src/test/java/org/cryptomator/filesystem/delegating/DelegatingReadableFileTest.java', 'main/filesystem-inmemory/src/test/java/org/cryptomator/filesystem/inmem/InMemoryFileSystemTest.java', 'main/filesystem-nio/src/test/java/org/cryptomator/filesystem/nio/DefaultInstanceFactoryTest.java', 'main/filesystem-nio/src/test/java/org/cryptomator/filesystem/nio/NioFileTest.java', 'main/filesystem-nio/src/test/java/org/cryptomator/filesystem/nio/ReadableNioFileTest.java', 'main/filesystem-nio/src/test/java/org/cryptomator/filesystem/nio/SharedFileChannelTest.java']"
cryptomator/cryptomator,https://github.com/cryptomator/cryptomator,e1b74ce312930014a07961e173685109733fe1cb,3971d3afd569d6009499de246068b329ef4a6b41,https://github.com/cryptomator/cryptomator/commit/e1b74ce312930014a07961e173685109733fe1cb,first tests with refactored io layers,2015-12-14 03:37:29,Sebastian Stenzel,"['main/crypto-layer/src/test/java/org/cryptomator/crypto/CryptoFileSystemTest.java', 'main/filesystem-api/src/test/java/org/cryptomator/filesystem/inmem/InMemoryFileSystemTest.java']"
OpenRefine/OpenRefine,https://github.com/OpenRefine/OpenRefine,002310972764fbf34105764f18cfec44b520df96,370ee1fc4b8294e3e2793eb74a7600a51cbf46f1,https://github.com/OpenRefine/OpenRefine/commit/002310972764fbf34105764f18cfec44b520df96,"Refactor where project row count is updated - fixes #1380, #5387

Fixes #1380 Fixes #5387 probably fixes #3475

Move maintenance of row count in ProjectMetadata from
GetRows (ick!) to the History class where changes are applied.

Update metadata for legacy projects which were created before
row count was added, but do it in a way which doesn't change
the Modified date. (#1380)

Set the row count on project registration instead of waiting
until the first time it's opened (#5387)

Adjust HistoryTest (which seems to be testing the internal
implementation more than the external behavior) to work with
the new implementation.",2023-03-14 21:49:06,Tom Morris,['main/tests/server/src/com/google/refine/RefineTest.java']
OpenRefine/OpenRefine,https://github.com/OpenRefine/OpenRefine,21fc4375bdb0217782a5443696559b73ad9ee333,bd23966b09e6ad98756bdb0b057462c62f0976e0,https://github.com/OpenRefine/OpenRefine/commit/21fc4375bdb0217782a5443696559b73ad9ee333,"Make Wikibase extension compatible with other entity types than Items (#4289)

* Document clone command, and Java requirements

* Make extension compatible with other types

Fixes #4268: Refactor Wikibase extension methods for editing other entity
types than Items.
Add test case for property updates on existing entities.",2021-11-16 16:35:01,Joey,"['extensions/wikidata/tests/src/org/openrefine/wikidata/editing/EditBatchProcessorTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/editing/ReconEntityRewriterTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/exporters/QuickStatementsExporterTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/CommonDescriptionScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/ConflictsWithScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/DifferenceWithinScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/DistinctValuesScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/EnglishDescriptionScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/EntityTypeScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/FormatScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/InverseConstraintScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/ItemRequiresScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/MultiValueScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/NewItemScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QualifierCompatibilityScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/RestrictedPositionScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/ScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/SingleValueScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/StatementScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/UnsourcedScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/UseAsQualifierScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbItemDocumentExprTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WikibaseSchemaTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/updates/ItemUpdateTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/updates/scheduler/QuickStatementsUpdateSchedulerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/updates/scheduler/UpdateSchedulerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/updates/scheduler/WikibaseAPIUpdateSchedulerTest.java']"
OpenRefine/OpenRefine,https://github.com/OpenRefine/OpenRefine,aa43445c994e5700c74acc6805d2ffaf2fd36cb5,ad0d30aed8d429739d0219c25ef04d0d9b0606b5,https://github.com/OpenRefine/OpenRefine/commit/aa43445c994e5700c74acc6805d2ffaf2fd36cb5,"Extend forEach() to support JSON objects (#3150)

* Refactor GREL Get tests

- move helper up to RefineTest
- move tests to the correct module

* Extend forEach() to support JSON objects - fixes #3149

Also add tests for existing forEach forms in addition to the new one

* Add a couple more tests",2020-08-30 06:40:17,Tom Morris,['main/tests/server/src/com/google/refine/RefineTest.java']
OpenRefine/OpenRefine,https://github.com/OpenRefine/OpenRefine,392a64b25e64425a290d27003528ae89ad22927c,9ac54edbba2fd0876b3f2f99c8bc1588799ecb3b,https://github.com/OpenRefine/OpenRefine/commit/392a64b25e64425a290d27003528ae89ad22927c,"Refactor tests to hoist common methods into RefineTest

Moves the invoke() method and the associated fields into
the super class and deletes the redundant implementations.",2020-08-22 21:33:40,Tom Morris,['main/tests/server/src/com/google/refine/RefineTest.java']
OpenRefine/OpenRefine,https://github.com/OpenRefine/OpenRefine,259705ad5f33b185bfa4bb0384787e68d31095b3,42e840dec62e454cb252748b482311238fb5f293,https://github.com/OpenRefine/OpenRefine/commit/259705ad5f33b185bfa4bb0384787e68d31095b3,"assertEqualAsJson test helper refactor (#3113)

* Refactor test helper

Create a version of the assert that uses the standard parameter
order and deprecate the version that uses inverted order.

* Use consistent Assert class and parameter ordering",2020-08-23 09:04:44,Tom Morris,['main/tests/server/src/com/google/refine/commands/row/GetRowsCommandTest.java']
OpenRefine/OpenRefine,https://github.com/OpenRefine/OpenRefine,83ed9ffdaf3304eaec935c59ed5a60c6a2cd1117,d5abaac6dfee2a29d3a16982c7403d4448cc3713,https://github.com/OpenRefine/OpenRefine/commit/83ed9ffdaf3304eaec935c59ed5a60c6a2cd1117,"Refactor importer APIs - Fixes #2963 (#2978)

* Make sure data directory is directory, not a file

* Add a test for zip archive import

Also tests the saving of the archive file name and source filename

* Add TODOs - no functional changes

* Cosmetic cleanups

* Revert importer API changes for archive file name parameter

Fixes #2963
- restore binary compatibility to the API
- hoist the handling of both fileSource and archiveFileName from
TabularImportingParserBase and TreeImportingParserBase to
ImportingParserBase so that there's only one copy. These 3 classes are
all part of the internal implementation, so there should be no
compatibility issue.

* Revert weird flow of control for import options metadata

This reverts the very convoluted control flow that was introduced
when adding the input options to the project metadata. Instead
the metadata is all handled in the importer framework rather than
having to change APIs are have individual importers worry about
it.

The feature never had test coverage, so that is still to be added.

* Add test for import options in project metadata & fix bug

Fixes bug where same options object was being reused and overwritten,
so all copies in the list ended up the same.",2020-07-23 16:36:14,Tom Morris,"['extensions/wikidata/tests/src/org/openrefine/wikidata/testing/WikidataRefineTest.java', 'main/tests/server/src/com/google/refine/RefineTest.java', 'main/tests/server/src/com/google/refine/importers/ImporterTest.java']"
OpenRefine/OpenRefine,https://github.com/OpenRefine/OpenRefine,6ab6bacd137910df5b5395486cc1580a1cdf68d7,fa682d0e224c0b3f460b9a3ff1e85d262c8ac499,https://github.com/OpenRefine/OpenRefine/commit/6ab6bacd137910df5b5395486cc1580a1cdf68d7,fixed some minor typos and refactoring in scrutinizer test files (#2958),2020-07-20 18:58:15,Ekta Mishra,"['extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/ConflictsWithScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/DistinctValuesScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/EntityTypeScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/FormatScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/InverseConstaintScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/MultiValueScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QualifierCompatibilityScrutinizerTest.java', 'extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java']"
OpenRefine/OpenRefine,https://github.com/OpenRefine/OpenRefine,b48c78a617fefc774f83bc1567ff577e2674fa26,1837926cb14c757837872e5302685b1b0d31457c,https://github.com/OpenRefine/OpenRefine/commit/b48c78a617fefc774f83bc1567ff577e2674fa26,Refactor and test QS value printing,2018-02-26 16:36:46,Antonin Delpeuch,['extensions/wikidata/tests/src/org/openrefine/wikidata/exporters/QSValuePrinterTest.java']
OpenRefine/OpenRefine,https://github.com/OpenRefine/OpenRefine,c4b0ff6bea1278032855c56bb8c6393619c42acd,cd58557424b1429634c3ab19b302675ecd008a08,https://github.com/OpenRefine/OpenRefine/commit/c4b0ff6bea1278032855c56bb8c6393619c42acd,"data package metadata  (#1398)

* fix the appbundle issue #1209

* fix #1162

allow the JRE 9

* fix the package declarations

* remove the _ from the method name

* use the explicit scoping

* remote extra ;

* fix issued from codacy

* fix issued from codacy

* add preferences link to the index page

* handle the empty user metadata

* fix 'last modified' sorting issue #1307

* prevent overflow of the table. issue #1306

* add isoDateParser to sort the date

* prevent overflow of the project index

* remove sorter arrow for action columns

* disable editing the internal metadata

* adjust the width of the table

* change MetaData to Metadata

* change the filed name from rowNumber to rowCount

* put back the incidently deleted gitignore

* add double quote to prevent word splitting

* UI improvement on metadata view and project list view

* remove the date field in metadata

* message notification of the free RAM. Issue #1295

* UI tuning for metadata view

* shorten the ISO date to locale date format

* Added translation using Weblate (Portuguese (Brazil))

* remove the rename link

* Ignore empty language files introduced by Weblate

* Add UI for Invert text filter

* Backend support for Inverting Text search facets

* Fix reset on text search facet

* More succinct return statements

* add tests for SetProjectMetadataCommand

* Tidying up for Codacy

* Added Tests for TextSearchFilter

* Corrections for Codacy

* More code tidy up

* let the browser auto fit the table cell when resizing/zooming

* fix import multiple excel with mulitple sheets issue #1328

* check if the project has the userMetadata

* fix the unit test
support multi files with multi tables for open office

* prevent the same key for user metadata

* replace _ with variable for exception

* fix the no-undef issue

* to adjust the width of transform dialog. issue #1332

* fix the row count refresh issue

* extract method

* move the log message

* cosmatic changes for codacy

* fix typo

* bump to version 2.8

* .gitignore is now working

* preview stage won't have the metadata populated, so protect NPE

* Update README.md

No more direct link to the last version tag, which will avoid having to think of updating the readme

* refacotring the ProjectMetadata class

* introduce the IMetadata interface

* create submodule of dataschema

* add back

* setup lib for dataschema; upgrade the apache lang to lang3

* replace escape* functions from apache lang3

* replace the ProjectMetadata with IMetadata interface

* add missing jars

* set the IMetadata a field of Project

* remove PreferenceStore out of Project model

* fix test SetProjectMetadataCommandTests by casting

* introdcue the AbstractMetadata

* introdcue the AbstractMetadata

* reorganize the metadata package

* allow have mulitiple metadata for a project

* support for mulitple metadata format

* remove jdk7 since 'table schema' java implmentation only support jdk8+

* set execute permission for script

* fix the Unit Test after Metadata refactoring

* restore the apache lang2.5 since jetty 6.1.22 depend on it

* add commons lang 2.5 jar

* git submodule add  https://github.com/frictionlessdata/datapackage-java

* remove the metadata parameter from the ProjectManager.registerProject method

* remove hashmap _projectsMetadata field from the ProjectManager and FileProjectManager

* init the Project.metadataMap

* fix Unit Test

* restore the ProjectMetaData map to ProjectManager

* put the ProjectMetaDta in place for ProjectManager and Project object

* check null of singleton instead of create a constructor just for test

* load the data package metadata

* importing data package

* importing data package

* encapsulate the Package class into DataPackageMetadata

* user _ to indicate the class fields

* introduce base URL in order to download the data files

* import data package UI and draft backend

* import data package UI

* fix typo

* download the data set pointed from metadata resource

* save and load the data package metadata

* avoid magic string

* package cleanup

* set the java_version to 1.8

* set the min jdk to 1.8

* add the 3rd party src in the build.xml

* skip the file selection page if only 1 DATA file

* add files structure for json editor

* seperate out the metadata file from the retrival file list

* rename the OKF_METADATA to DATAPACKAGE_METADATA

* clean up

* implement GetMetadateCommand class

* display the metadata in json format

* git submodule update --remote --merge

* adjust the setting after pulling from datapackage origin

* fix the failed UT DateExtensionTests.testFetchCounts due to new json jar json-20160810.jar will complain: JSONObject[""float""] not a string.

* clean up the weird loop array syntax get complained

* remove the unused constant

* export in data package format

* interface cleanup

* fix UT

* edit the metadata

* add UT for SetMetadataCommand

* fix UT for SetMetadataCommand

* display the data package metadata link on the project index page

* update submodule

* log the exceptions

* Ajv does not work properly, use the back end validation instead

* enable the validation for jsoneditor

* first draft of the data validation

* create a map to hold the constraint and its handler

* rename

* support for minLength and maxLength from spec

* add validate command

* test the opeation instead of validate command

* rename the UT

* format the error message and push to the report

* fix row number

* add resource bundle for validator

* inject the code of the constrains

* make the StrSubstitutor works

* extract the type and format information

* add the customizedFormat to interface to allow format properly

* get rid of magic string

* take care of missing parts of the data package

* implement RequiredConstraint

* patch for number type

* add max/min constraints

* get the constrains directly from field

* implement the PatternConstraint

* suppress warning

* fix the broken UT when expecting 2 digits fraction

* handle the cast and type properly

* fix the missing resource files for data package when run from command line

* use the copy instead of copydir

* add script for appveyor

* update script for appveyor

* do recursive clone

* correct the git url

* fix clone path

* clone folder option does not work

* will put another PR for this. delete for now

* revert the interface method name

* lazy loading the project data

* disable the validate menu for now

* add UT

* assert UTs

* add UT

* fix #1386

* remove import

* test the thread

* Revert ""test the thread""

This reverts commit 779214160055afe3ccdcc18c57b0c7c72e87c824.

* fix the URLCachingTest UT

* define the template data package

* tidy up the metadata interface

* check the http response code

* fix the package

* display user friendly message when URL path is not reachable

* populate the data package schema

* Delete hs_err_pid15194.log

* populate data package info

* add username  preference and it will be pulled as the creator of the metadata

* undo the project.updateColumnChange() and start to introduce the fields into the existing core model

* tightly integrate the data package metadata

* tightly integrate the data package metadata for project level

* remove the submodule

* move the edit botton

* clean up build

* load the new property

* load the project metadata

* fix issues from codacy

* remove unused fields and annotation

* check the http response code firstly

* import zipped data package

* allow without keywords

* process the zip data package from url

* merge the tags

* check store firstly

* remove the table schema src

* move the json schema files to schema dir

* add comment

* add comment

* remove git moduels

* add incidently deleted file

* fix typo

* remove SetMetadataCommand

* revert change

* merge from master",2018-02-02 13:24:19,Jacky,"['extensions/database/test/com/google/refine/extension/database/DatabaseImportControllerTest.java', 'extensions/database/test/com/google/refine/extension/database/cmd/SavedConnectionCommandTest.java', 'main/tests/server/src/com/google/refine/tests/RefineTest.java', 'main/tests/server/src/com/google/refine/tests/importers/ImporterTest.java']"
OpenRefine/OpenRefine,https://github.com/OpenRefine/OpenRefine,5278e929a20e5c310f4d13277410da46cc05bda7,197dc47f374d7798d59f160f5142b3ef39e55c39,https://github.com/OpenRefine/OpenRefine/commit/5278e929a20e5c310f4d13277410da46cc05bda7,Refactor CrossFunctionTests' project creating logic into RefineTest,2018-01-25 23:38:06,Antonin Delpeuch,['main/tests/server/src/com/google/refine/tests/RefineTest.java']
OpenRefine/OpenRefine,https://github.com/OpenRefine/OpenRefine,7ce78776c6b0bec6ee93e3fe0e63ed4d9c9ac2b0,674eaf9efdcb0085d8f4c27ad1acb62145259d3a,https://github.com/OpenRefine/OpenRefine/commit/7ce78776c6b0bec6ee93e3fe0e63ed4d9c9ac2b0,"refactored tests to avoid using static initialization which conflicts with our ability to have special log4j configurati
ons for testings. Also tagged all broken tests as broken so that the tree is now green. Also used the test class as the
logger name so that it's easier to groupt the logger verbosity based on java packages.

git-svn-id: http://google-refine.googlecode.com/svn/trunk@922 7d457c2a-affb-35e4-300a-418c747d4874",2010-05-31 08:51:51,Stefano Mazzocchi,['main/tests/server/src/com/metaweb/gridworks/tests/GridworksTest.java']
OpenRefine/OpenRefine,https://github.com/OpenRefine/OpenRefine,aa4de48f9549f23eb45e2a3fc29ff55eda402d5b,365868564fb426d2aa3f3c84ec1ef52966067f02,https://github.com/OpenRefine/OpenRefine/commit/aa4de48f9549f23eb45e2a3fc29ff55eda402d5b,"some renaming, moving tests into main


git-svn-id: http://google-refine.googlecode.com/svn/branches/split-refactor@906 7d457c2a-affb-35e4-300a-418c747d4874",2010-05-30 16:55:53,Stefano Mazzocchi,['main/src/com/metaweb/gridworks/gel/controls/IsTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,f795c17fda6363b5b1b6b4ee3b49f60a6f1bfcdc,e52ff6a1fd2852da58392b319e9636650c29ad99,https://github.com/Activiti/Activiti/commit/f795c17fda6363b5b1b6b4ee3b49f60a6f1bfcdc,"AAE-14224 Update Activiti to Spring Boot 3 (#4338)

* refactor pom.xml to update java.version to 17

* AAE-14392 Integrate Nashorn in Activiti core

* Revert ""AAE-14392 Integrate Nashorn in Activiti core""

This reverts commit a3d2f2cd694c1f8c0647e9831a99e11f54e30425.

* update to spring boot 3

* temporary disable fail on warning license check

* fix no newline at end of file

* remove obsolete spring.factories

* Revert ""temporary disable fail on warning license check""

This reverts commit 2da7a0bc3f2f4751c97f34d4894dbfac32c17bb3.

* add -parameters complier args to maven-compiler-plugin configuration

* remove trailing whitespace

* AAE-14386 backport activiti-juel-impl from odysseus juel-impl

* add dev-igdianov-jdk17 base branch for PRs

* fix pre-commit

* add missing license header

* add Juel extensions test coverage

* add support for expression factory new instance with system properties

* update pull request base branch

* rename activiti-juel-impl to activiti-juel-jakarta

* update comments

* apply prettier java formatting for activiti-juel-jakarta module

* rename custom Juel features with `activiti.juel` prefix

* cleanup PR base branch

* Revert ""refactor pom.xml to update java.version to 17 ""

This reverts commit 45d9203c1c98cf1d826ca68c46abc7e2ee50d028.

* update activiti-juel-jakarta version to 7.12.0-SNAPSHOT

* update project version 8.0.0-SNAPSHOT

* use JDK 11 for updatebot push version steps

* Remove usage of hamcrest assertions

* Update name for step defining sdk for updatebot

* rename variables

---------

Co-authored-by: Elias Ricken de Medeiros <26007058+erdemedeiros@users.noreply.github.com>",2023-06-08 19:16:22,Igor Dianov,"['activiti-core-common/activiti-expression-language/src/test/java/org/activiti/core/el/ELResolverReflectionBlockerDecoratorTest.java', 'activiti-core-common/activiti-expression-language/src/test/java/org/activiti/core/el/JuelResolverTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/ExpressionFactoryImplTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/ObjectValueExpressionTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/TreeMethodExpressionTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/TreeValueExpressionTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/extensions/MethodInvocationsTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/extensions/NullPropertiesTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/extensions/VarArgsTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/misc/BooleanOperationsTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/misc/MessagesTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/misc/NumberOperationsTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/misc/TypeConverterImplTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/BindingsTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/NodePrinterTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/TreeStoreTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/TreeTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/CacheTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ParserTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ScannerTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstBinaryTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstBooleanTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstBracketTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstChoiceTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstCompositeTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstDotTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstEvalTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstFunctionTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstIdentifierTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstMethodTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstNestedTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstNullTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstNumberTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstStringTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstTextTest.java', 'activiti-core-common/activiti-juel-jakarta/src/test/java/org/activiti/core/el/juel/tree/impl/ast/AstUnaryTest.java', 'activiti-core/activiti-engine/src/test/java/org/activiti/engine/impl/el/VariableScopeElResolverTest.java', 'activiti-core/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/error/mapError/BoundaryErrorMapTest.java', 'activiti-core/activiti-engine/src/test/java/org/activiti/standalone/el/ExpressionBeanAccessTest.java', 'activiti-core/activiti-engine/src/test/java/org/activiti/standalone/history/FullHistoryTest.java', 'activiti-core/activiti-engine/src/test/java/org/activiti/standalone/jpa/HistoricJPAVariableTest.java', 'activiti-core/activiti-engine/src/test/java/org/activiti/standalone/jpa/JPAEnhancedVariableTest.java', 'activiti-core/activiti-engine/src/test/java/org/activiti/standalone/jpa/JPAVariableTest.java', 'activiti-core/activiti-spring-resource-loader/src/test/java/org/activiti/spring/resources/DeploymentResourceLoaderTest.java', 'activiti-core/activiti-spring/src/test/java/org/activiti/spring/test/email/JndiEmailTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,e52ff6a1fd2852da58392b319e9636650c29ad99,8e6ab0a95d1b24d6b67964be5253ba1dbe5e6850,https://github.com/Activiti/Activiti/commit/e52ff6a1fd2852da58392b319e9636650c29ad99,"AAE-10754 Migrate Activiti maven projects to JDK 17 (#4337)

* Update GitHub workflow to use Java 17 LTS

* Add GraalVM js-scriptengine dependency version 22.2.0

* use nashorn-core version 15.4

* update java.release properties to 17

* add preview label support for deploy to Nexus

* update ActivityEventsTest.testActivityTimeOutEvent wait timeout to 5000

* refactor pom.xml to update java.version to 17

* AAE-14392 Integrate Nashorn in Activiti core

* chore: remove preview branch build support from CI build

* fix recursive expression cycle in 'java.release'

* Revert ""AAE-14392 Integrate Nashorn in Activiti core""

This reverts commit a3d2f2cd694c1f8c0647e9831a99e11f54e30425.

* Update references in the README

* Update pom.xml

Co-authored-by: Anahide Tchertchian <608958+atchertchian@users.noreply.github.com>

---------

Co-authored-by: Elias Ricken de Medeiros <26007058+erdemedeiros@users.noreply.github.com>
Co-authored-by: Anahide Tchertchian <608958+atchertchian@users.noreply.github.com>",2023-06-07 23:12:53,Igor Dianov,['activiti-core/activiti-engine/src/test/java/org/activiti/engine/test/api/event/ActivityEventsTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,f8587e32913e77d2ad7f384a08fc999da8d19fbd,986f1ee7058585df271ed101bbddc07dabb1a053,https://github.com/Activiti/Activiti/commit/f8587e32913e77d2ad7f384a08fc999da8d19fbd,"fix/MNT-23416_boundary_event_sub_subprocess (#4235)

* MNT-23416: test where main-process doesn't receive an error event thrown by a subprocess within a subprocess

* fix error propagation between child process and parent call activity execution

* polish findCatchingEventsAndExecuteCatchForCallActivity method

* polish ErrorPropagation with try-finally

* Refactor methods to improve code readability

---------

Co-authored-by: Igor Dianov <igor@dianov.com>
Co-authored-by: Elias Ricken de Medeiros <26007058+erdemedeiros@users.noreply.github.com>",2023-02-21 19:23:06,Vítor Moreira,"['activiti-core/activiti-engine/src/test/java/org/activiti/engine/impl/persistence/entity/ExecutionEntityImplTest.java', 'activiti-core/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/error/BoundaryErrorEventTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,59aa9b4889f6b844f45dd84fffc1683a05c72321,2b040da93a85659e894d38ed79778246dcd1572e,https://github.com/Activiti/Activiti/commit/59aa9b4889f6b844f45dd84fffc1683a05c72321,"fix: regression in string to date converter when parsing UTC date format (#3804)

* fix: regression in string to date converter when parsing UTC date format

* fix: refactor StringToDateConverterTest using ParameterizedTest",2022-01-19 16:44:52,Igor Dianov,['activiti-core/activiti-api-impl/activiti-api-process-model-impl/src/test/java/org/activiti/api/runtime/model/impl/StringToDateConverterTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,ee179a3fa78d8b12707b59d9800f711ce356a2c0,27b0c684f455b9a73a8c21c664d19e97347007a4,https://github.com/Activiti/Activiti/commit/ee179a3fa78d8b12707b59d9800f711ce356a2c0,"Fixes Make EL Resolvers reusable and generic #3671 (#3675)

* Refactor Activiti EL module  #3671

* Added extra tests and refactor

* Fixed minor issues - Unused imports

* Minor improvements after Codacy review

* Fixes after Peer Review

* Fix invalid test

* Make ExpressionResolver Generic",2021-06-17 07:41:12,Miguel Ángel Martín,"['activiti-core-common/activiti-expression-language/src/test/java/org/activiti/core/el/ELResolverReflectionBlockerDecoratorTest.java', 'activiti-core-common/activiti-expression-language/src/test/java/org/activiti/core/el/JuelResolverTest.java', 'activiti-core/activiti-engine/src/test/java/org/activiti/engine/impl/el/ELResolverReflectionBlockerDecoratorTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,00c858bde56b2148f1f6732454b4ba1d6dfacdbe,58ec3c2282959fe37db65e5ed3be0f10affb75c2,https://github.com/Activiti/Activiti/commit/00c858bde56b2148f1f6732454b4ba1d6dfacdbe,"Add previous value to update event (#3468)

* Add previous value to update event

closes #3467

* Add and refactor integration test, fix logic for extracting previous value before update, cleanups",2020-10-23 16:26:14,Zoltán Pálfi,"['activiti-core/activiti-api-impl/activiti-api-runtime-shared-impl/src/test/java/org/activiti/runtime/api/event/impl/ToVariableCreatedConverterTest.java', 'activiti-core/activiti-api-impl/activiti-api-runtime-shared-impl/src/test/java/org/activiti/runtime/api/event/impl/ToVariableDeletedConverterTest.java', 'activiti-core/activiti-api-impl/activiti-api-runtime-shared-impl/src/test/java/org/activiti/runtime/api/event/impl/ToVariableUpdatedConverterTest.java', 'activiti-core/activiti-api-impl/activiti-api-runtime-shared-impl/src/test/java/org/activiti/runtime/api/event/internal/VariableUpdatedListenerDelegateTest.java', 'activiti-core/activiti-api-impl/activiti-api-runtime-shared-impl/src/test/java/org/activiti/runtime/api/model/impl/APIVariableInstanceConverterTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,5ed730cdfd48abbc08bfbb4f4b08dcc4d5b623f7,87e57e265abf525598d8daf3611631e49f75d99d,https://github.com/Activiti/Activiti/commit/5ed730cdfd48abbc08bfbb4f4b08dcc4d5b623f7,"fix(GH-3425): Exception getting ProcessDefinitions with multple versions (#3441)

* fix(GH-3425): Exception getting ProcessDefinitions with multple versions

* fix: use deploymentKey to select latest deployment

* Revert ""fix: use deploymentKey to select latest deployment""

This reverts commit 25786ffeccad972473dcd037a07621d017dc480e.

* Revert ""fix(GH-3425): Exception getting ProcessDefinitions with multple versions""

This reverts commit a3dae80d648595ede7239c78a84860fd7433e48f.

* fix: remove executeSingleResult hack  in DeploymentQueryImpl

* feat: add latest version by deployment name in DeploymentQuery api

* fix: remove project release version constraint from query

* fix: remove PROJECT_RELEASE_VERSION_ not null from latest deployment query

* fix: apply process definition filtering by deployment id using query builder

* fix: update test mocks

* fix: update process runtime definition query to select latest version

* chore: revert mock tests

* chore: revert changes

* refactor: update latest deployment query

* fix: refine latest deployment version by name query criteria

* fix: remove required deployment name for latest version restriction

* fix: add DeploymentQuery integration test",2020-09-23 14:12:02,Igor Dianov,['activiti-core/activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/impl/ProcessRuntimeImplTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,1669b5216b836da4126e493ae970ab04854a8c4f,d0de4a5f0e7bf7ce56d3a741f64103ec2bb769f5,https://github.com/Activiti/Activiti/commit/1669b5216b836da4126e493ae970ab04854a8c4f,"Variable mapping representation changes (#3392)

* Activiti/Activiti#3368 Change variable mapping representation

* Activiti/Activiti#3368 Refactor utility methods

* Activiti/Activiti#3368 Refactor Extension unit tests

* Activiti/Activiti#3368 Fix variable mapping call activity tests

* Activiti/Activiti#3368 Fix variable initilization

* Activiti/Activiti#3368 Fix starter tests

* Activiti/Activiti#3368 Add missing extensions files

* Clean up

* Activiti/Activiti#3368 Restore start event tests

* Activiti/Activiti#3368 Revert logic to fix start event mapping

* Activiti/Activiti#3368 Fix use case for passed vars at process instance start

* Activiti/Activiti#3368 Clean up

* Address comments",2020-09-04 11:51:24,Miguel Ruiz,"['activiti-core/activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskVariablesLocalCopiesTest.java', 'activiti-core/activiti-spring-process-extensions/src/test/java/org/activiti/spring/process/model/ExtensionTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,d62f3889fb20be96aa4bf91cd6dc2996b9b2ed5e,991b6558d5f886bd3547f55187f9e8bc61fbb337,https://github.com/Activiti/Activiti/commit/d62f3889fb20be96aa4bf91cd6dc2996b9b2ed5e,"fix(AAE-493): add initial support for variable type BigDecimal  (#3274)

* fix(AAE-493): add initial support for variable type BigDecimal

* fix: externalize ConversionService dependency injection

* fix:  ConformanceServiceTaskModifyVariableTest.shouldBeAbleToStartProcess:95

* fix: add junit-jupiter-engine dependency

* fix: add ProcessVariableValuesMap test stubs

* fix: add IntegrationContextImplTest

* fix: add tests for inbound and outboud BigDecimal variable exchange

* fix: refactor ProcessVariablesMap class and Jackson module packages

* feat: added JUnit5 parametrized tests

* fix: add support for null values handling

* feat: add support for Java Date conversion

* feat: add support for Jave Map type variable values serialization

* feat: add support for JsonNode variable type converter

* fix: add support for POJO variable types

* fix: clean up

* fix: extract ProcessVariableValue into standalone class

* fix: use Instant to convert Dates variables

* fix: refactor ProcessVariablesMapSerializer to use better type detection

* fix: remove reduntant `@ExtendWith(SpringExtension.class)` annotation

* Add generic type

Avoid problem while running the test from the IDE

* Refactor ProcessVariablesMapSerializer

extract methods to improve code readability

* Remove unnecessary constructor

* Explicitly reference method source

This avoid the referenced method be considered as unused

Co-authored-by: Elias Ricken de Medeiros <26007058+erdemedeiros@users.noreply.github.com>",2020-05-13 15:01:51,Igor Dianov,['activiti-core/activiti-api-impl/activiti-api-process-model-impl/src/test/java/org/activiti/api/runtime/test/model/impl/IntegrationContextImplTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,c7de3f1a83839dc6ada76658df3286eae45e7246,6ddaae94ece697dc45fdd0c08ee28d62dda56f96,https://github.com/Activiti/Activiti/commit/c7de3f1a83839dc6ada76658df3286eae45e7246,"#3165 fix problem with null appVersion in processDefinition (#3166)

* #3165 allow start of a process with processDefinition appVersion == null

* #3165 add default-app.json to main resources

* #3165 refactoring

* fix: added integration test to verify behaviour

* fix: remove manifest file amd flaky IT, add unit tests

Co-authored-by: Zoltan Palfi <zoltan.palfi@alfresco.com>",2020-04-02 16:00:55,Illia Goncharov,['activiti-core/activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/impl/ProcessRuntimeImplTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,c53b6e21051b04bc0c9f4134af0d9b4bf0371fd9,12370623f6ee0b5b0adcb1e59f604e6ba17cff17,https://github.com/Activiti/Activiti/commit/c53b6e21051b04bc0c9f4134af0d9b4bf0371fd9,"AAE-1572 Enforced application version lib (#3111)

* AAE-1572 Enforced application version lib

* AAE-1572 Modify deployment versioning logic

* AAE-1572 Add application version property

* AAE-1572 Refactor app upgrade libs in core-common

* AAE-1572 Fix typo

* AAE-1572 Refactor loading of application upgrade context

* AAE-1572 Remove unused imports

* AAE-1572 Refactor style conventions

* AAE-1572 Refactor null check of applicationUpgradeContextService

* AAE-1572 Correct formatting

* AAE-1572 Refactor test names

* AAE-1572 Add check preventing negative enforced app versions

* AAE-1572 Refactor upgrade logic to rely exclusively on enforced app version

* AAE-1572 Update test

* AAE-1572 Refactor upgrade logic to rely on project release version if enforced app version is not present

* AAE-1572 Clean up

* AAE-1572 Correct indentation

* AAE-1572 Correct indentation 2

* AAE-1572 Correct indentation 3

* AAE-1572 Cover non upgrade logic with ITs",2020-02-12 13:59:10,Miguel Ruiz,"['activiti-core/activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/ProcessEngineAutoConfigurationTest.java', 'activiti-core/activiti-spring/src/test/java/org/activiti/spring/test/autodeployment/AbstractAutoDeploymentStrategyTest.java', 'activiti-core/activiti-spring/src/test/java/org/activiti/spring/test/autodeployment/DefaultAutoDeploymentStrategyTest.java', 'activiti-core/activiti-spring/src/test/java/org/activiti/spring/test/autodeployment/ResourceParentFolderAutoDeploymentStrategyTest.java', 'activiti-core/activiti-spring/src/test/java/org/activiti/spring/test/autodeployment/SingleResourceAutoDeploymentStrategyTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,d823a2805f7294f24ddbaf75b0893e908640cf9e,1b17196b550def37acefa9b138ffb9e4390f12c3,https://github.com/Activiti/Activiti/commit/d823a2805f7294f24ddbaf75b0893e908640cf9e,"Fix canceled task events triggering by Terminate End event (#3135)

* AAE-189 Add test to debug cancellation of processes and tasks

* AAE-189 WIP Set reason of cancellation for processes and tasks

* AAE-189 Complete IT checking cancellation event reason

* AAE-189 Revert old logic in task cancellation

* AAE-189 Add test coverage for process cancelation reason

* AAE-189 Clean up

* AAE-189 Fix ITs

* AAE-189 Remove test template from CompleteTaskRuntime ITs

* AAE-189 Address comments after review

* AAE-1731 Add test coverage for task cancellation reason by terminate end event

* AAE-1731 Fix engine tests after refactoring

* AAE-1731 Update engine tests

* AAE-1731 Clean up unused methods

* AAE-1731 Refactor setting of cancellation reason but terminate event",2020-02-10 16:59:27,Miguel Ruiz,"['activiti-core/activiti-engine/src/test/java/org/activiti/engine/test/api/event/ProcessInstanceEventsTest.java', 'activiti-core/activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeTerminateEndEventTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,8cf3a16715435408539f4e2b1ee032602af31ed6,c207cb32e62ec29ed88164e9aaaba277676e0e90,https://github.com/Activiti/Activiti/commit/8cf3a16715435408539f4e2b1ee032602af31ed6,"[AAE-1614] fix warning for message flow reference (#3120)

* fix warning for message flow reference

* Refactor test

Co-authored-by: Elias Ricken de Medeiros <26007058+erdemedeiros@users.noreply.github.com>",2020-02-03 17:33:26,Eugenio Romano,['activiti-core/activiti-engine/src/test/java/org/activiti/standalone/validation/DefaultProcessValidatorTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,4e03ed402d24446d444fef455932edad64684a0f,4074df770e814b2bac96a7fd130b232244fb7f53,https://github.com/Activiti/Activiti/commit/4e03ed402d24446d444fef455932edad64684a0f,"AAE-1610 - fixing mapping variable with the new multi process structure (#3117)

* AAE-1610 - fixing mapping variable with the new multi process structure

* Removed extra parameter from the reader

* AAE-1610 - attempt to return Extension for process

* Simplify ProcessExtensionService

* Fix ProcessRuntimeVariableMappingTest

* Fix ProcessExtensionsJsonVarsTest

* Fix ProcessExtensions test

* Fix ProcessRuntimeBPMNMessageIT

* Update missing extension files to the new structure

* Fix random failing test

* AAE-1610 Add test coverage for multi-procesess

* Update process to use user task

* AAE-1610 Refactor multi-process test

* Clean up ProcessExtensionModel

* AAE-1610 Restructure extension files

* Clean up

* Remove unused imports

Co-authored-by: Elias Ricken de Medeiros <26007058+erdemedeiros@users.noreply.github.com>
Co-authored-by: Miguel Ruiz <miguel.ruiz.developer@gmail.com>
Co-authored-by: mergify[bot] <37929162+mergify[bot]@users.noreply.github.com>",2020-01-30 18:36:13,Vito,"['activiti-core/activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/impl/ProcessVariablesPayloadValidatorTest.java', 'activiti-core/activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/impl/VariablesMappingProviderTest.java', 'activiti-core/activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/process/ProcessExtensionsTest.java', 'activiti-core/activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeCandidatesTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,01388cd1cf0a33f0db6e81568a82e20abfedb153,739be720c68b2d1389e8cfa64479c6e01f62ff03,https://github.com/Activiti/Activiti/commit/01388cd1cf0a33f0db6e81568a82e20abfedb153,"AAE-475 Apply variable mapping on StartEvent (#3024)

* AAE-475 apply variable mapping on event start

* AAE-475 refactoring

* AAE-475 fix failing test

* AAE-475 fix null pointer

* Delete .factorypath

* Delete .factorypath

* AAE-475 process cleanup removed

* AAE-475 not needed code lines removed",2019-12-11 08:51:11,Illia Goncharov,['activiti-core/activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/process/ProcessExtensionsTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,93d4b93254ce1781d49350ff6205df9c463a4d14,d51a9c6479318bbd2342ca14fd25f0d56a859492,https://github.com/Activiti/Activiti/commit/93d4b93254ce1781d49350ff6205df9c463a4d14,"[AAE-785] Add application version field to processes and tasks in Activiti Core (#3001)

* AAE-785: Added appVersion, refactor, tests

* AAE-785: Fixed schema version number

* AAE-785: Increased value column size

* AAE-785: Addressed CRs",2019-12-02 07:19:00,Miguel Ruiz,"['activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/model/impl/APIProcessDefinitionConverterTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/model/impl/APIProcessInstanceConverterTest.java', 'activiti-api-impl/activiti-api-task-runtime-impl/src/test/java/org/activiti/runtime/api/model/impl/APITaskConverterTest.java', 'activiti-engine/src/test/java/org/activiti/examples/mgmt/ManagementServiceTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,700f109291481b9bf04a10e988bcab4f82a1ec44,18aff01c78cdcc8f3c3c8f3329027ffb97245a63,https://github.com/Activiti/Activiti/commit/700f109291481b9bf04a10e988bcab4f82a1ec44,"AAE-771 Support taskDefinitionKey in the Task model  (#2797)

* Support for taskDefinitionKey in the Task model

* Test extended to check taskDefintionKey

* AAE-771 refactoring and update of tests",2019-11-27 15:56:30,Illia Goncharov,"['activiti-api-impl/activiti-api-task-runtime-impl/src/test/java/org/activiti/runtime/api/model/impl/APITaskConverterTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeClaimReleaseTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeClaimTaskFromProcessTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeFormKeyTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,5ef6fe7111b1823348fdc18cb985a7cc9f76b464,0759e548dc71b5ce67fe7f2594485ed82f5ff4ac,https://github.com/Activiti/Activiti/commit/5ef6fe7111b1823348fdc18cb985a7cc9f76b464,"feat(AAE-102): Added START_MESSAGE_DEPLOYED event  api implementation (#2971)

* feat(AAE-102): Added START_MESSAGE_DEPLOYED event  api implementation

* refactor(AAE-102): changed StartMessageEventSubscription to StartMessageSubscription

* feat(AAE-102): Added MessageSubscriptionCancelledListenerDelegate impl

* reactor: polish ProcessRuntimeBPMNMessageIT.shouldProduceStartMessageDeployedEvents

* refactor: Polished StartMessageDeploymentDefinitionImpl builder names

* fix: failed ProcessRuntimeBPMNMessageIT start message tests

* fix(AAE-102): check valid event

* feat(AAE-102): add test for MessageSubscriptionCancelledEvent

* feat(AAE-102): add test for MessageSubscriptionConverter

* Make listeners for MessageSubscriptionCancelledEvent optional

* Polish test for MessageSubscriptionCancelledEvent

* Move login to setup method",2019-11-13 19:08:49,Igor Dianov,['activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/impl/MessageSubscriptionConverterTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,db32ab086be8bc2fc958545ca1dae2ee80ddcdf4,53f6de7db95775c2233e50f0d3681bd9aa4699a1,https://github.com/Activiti/Activiti/commit/db32ab086be8bc2fc958545ca1dae2ee80ddcdf4,"AAE-105 refactoring of test for process / task validators (#2956)

* AAE-105 refactoring of test for process / task validators

* AAE-105 fix checkstyle

* AAE-105 refactoring, test added

* AAE-105 refactoring of test",2019-10-30 13:41:38,Illia Goncharov,"['activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/impl/ProcessVariablesPayloadValidatorTest.java', 'activiti-api-impl/activiti-api-task-runtime-impl/src/test/java/org/activiti/runtime/api/impl/TaskVariablesPayloadValidatorTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,53f6de7db95775c2233e50f0d3681bd9aa4699a1,525cf7394ce970266cadb810ca7e87aa83ee3a59,https://github.com/Activiti/Activiti/commit/53f6de7db95775c2233e50f0d3681bd9aa4699a1,"AAE-685 fix EndEventXMLConverter (#2959)

* AAE-695 fix EndEventXMLConverter

* AAE-695 refactoring of a test",2019-10-30 13:13:30,Illia Goncharov,['activiti-bpmn-converter/src/test/java/org/activiti/editor/language/xml/EndEventConverterTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,45f8e4e20f6280a6f24e933099a611d3ebbdae39,c281883eabc6b5fc0609b8c51cc0a93d288ccac5,https://github.com/Activiti/Activiti/commit/45f8e4e20f6280a6f24e933099a611d3ebbdae39,"Validation of process and task variables names (#2947)

* AAE-105 Validation of task variables names

* AAE-105 Checkstyle corrected, null pointer exception fixed

* AAE-105 Tests added

* AAE-105 Process variables name validation, refactoring

* AAE-105 Remove extra line

* AAE-105 Refactoring for task variables payload

* AAE-105 Fix checkstyle

* AAE-105 Check variable names for signal and message payloads

* AAE-105 Refactoring of a json extension files

* AAE-105 Null pointer exception fixed

* AAE-105 Refactoring of test

* AAE-105 Refactoring of signal tests

* AAE-105 Comments removed

* AAE-105 Refactoring of tests

* AAE-105 refactoring

* AAE-105 wrong comment removed

* AAE-105 refactoring of ProcessRuntimeImpl

* AAE-105 refactoring of TaskVariablesPayloadValidator

* AAE-105 test name changed

* AAE-105 fix after rebase",2019-10-27 22:44:06,Illia Goncharov,"['activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/impl/ProcessRuntimeImplTest.java', 'activiti-api-impl/activiti-api-task-runtime-impl/src/test/java/org/activiti/runtime/api/impl/TaskRuntimeHelperTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/HistoryConfigurationTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/process/ProcessExtensionsJsonVarsTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/process/ProcessExtensionsTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/process/ProcessRuntimeVariableMappingTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeStandaloneTaskTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-signals/src/test/java/org/activiti/spring/conformance/signals/SignalThrowCatchTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,629678b4ad0abd67977d52c1613c6c6576b23aa5,4e7fb76b023037911bffce0983588e0c721cbb86,https://github.com/Activiti/Activiti/commit/629678b4ad0abd67977d52c1613c6c6576b23aa5,"fix(AAE-201): Provided LocalSpringSecurityManager implementations with extended SecurityManager Api (#123)

* refactor: implemented LocalSpringSecurityManager provider

* refactor: implemented Activiti Spring security providers

* refactor: removed UserGroupManager from BaseSecurityPoliciesManagerImpl

* refactor(security): implemented Spring principal roles and groups providers

* chore: remove comments

* feat(test): added group and roles authorities mapper tests

* feat(test): added LocalSpringSecurityContextPrincipalProviderTest

* feat(test): added SimpleGrantedAuthoritiesResolverTest

* chore: added Alfresco copyright header

* feat(test): Added AuthenticationPrincipalIdentityProviderTest

* feat(test): Added AuthenticationPrincipalGroupsProviderTest

* feat(test): AddedAuthenticationPrincipalRolesProviderTest

* feat(test): Added LocalSpringSecurityManagerTest

* fix(gitignore): Added .sts4-cache

* fix(version): update org.activiti.api:activiti-api-dependencies to 7.1.50",2019-10-25 16:20:50,Igor Dianov,"['activiti-spring-security/src/test/java/org/activiti/core/common/spring/security/LocalSpringSecurityManagerTest.java', 'activiti-spring-security/src/test/java/org/activiti/core/common/spring/security/test/AuthenticationPrincipalGroupsProviderTest.java', 'activiti-spring-security/src/test/java/org/activiti/core/common/spring/security/test/AuthenticationPrincipalIdentityProviderTest.java', 'activiti-spring-security/src/test/java/org/activiti/core/common/spring/security/test/AuthenticationPrincipalRolesProviderTest.java', 'activiti-spring-security/src/test/java/org/activiti/core/common/spring/security/test/LocalSpringSecurityContextPrincipalProviderTest.java', 'activiti-spring-security/src/test/java/org/activiti/core/common/spring/security/test/SimpleGrantedAuthoritiesGroupsMapperTest.java', 'activiti-spring-security/src/test/java/org/activiti/core/common/spring/security/test/SimpleGrantedAuthoritiesResolverTest.java', 'activiti-spring-security/src/test/java/org/activiti/core/common/spring/security/test/SimpleGrantedAuthoritiesRolesMapperTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,d6accc4cb52696f0d8a185b35a59693d695061c2,7c351e146c4fa0c3b8659b803084bfbaa5cbbee3,https://github.com/Activiti/Activiti/commit/d6accc4cb52696f0d8a185b35a59693d695061c2,"Refactoring for DateFormatterProvider (#2942)

* Refactoring for DateFormatterProvider

* fix(version): update org.activiti.core.common:activiti-core-common-dependencies to 7.1.55

* Fix failing tests

Let spring boot load all available auto configurations",2019-10-11 17:09:27,Illia Goncharov,['activiti-spring-process-extensions/src/test/java/org/activiti/spring/process/variable/DateFormatterProviderTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,a3e4fc7444295d83dbd821d26ace71aa213159a9,cfd5611596eb3183cfb96c2a2b978552497d24c2,https://github.com/Activiti/Activiti/commit/a3e4fc7444295d83dbd821d26ace71aa213159a9,"DateFormatterProvider autoconfiguration (#122)

* fix: refactoring made, spring.factories with auto configuration

* test added

* Refactoring",2019-10-11 07:10:48,Illia Goncharov,['activiti-common-util/src/test/java/org/activiti/common/util/conf/test/UtilAutoConfigurationTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,a176c224dc87fa1c3669ff7a7572e697900c2f5b,47841a06c6b3d69f670d025943581af1fd8f71b1,https://github.com/Activiti/Activiti/commit/a176c224dc87fa1c3669ff7a7572e697900c2f5b,"Move DateFormatterProvider to common (#120)

* Move DateFormatterProvider to common

* Remove not needed test

* Refactoring made

* DateFormatterProviderTest moved to common",2019-10-10 09:32:11,Illia Goncharov,['activiti-common-util/src/test/java/org/activiti/common/util/DateFormatterProviderTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,1942b955549ce67698c9df44c256817c9593f974,f92d6d3853db14b46232c9f97f9d04dbd0857f31,https://github.com/Activiti/Activiti/commit/1942b955549ce67698c9df44c256817c9593f974,"fix: replaced component scans with auto configurations (#2904)

* fix: add missing @ConditionalOnMissingBean in auto configurations

* fix: remove @ComponentScan from auto configuration

* fix: removed remaining @ComponentScan from configurations

* refactor(build): changed groovy dependency to be optional

* refactor(build): changed spring-boot-autoconfigure to be optional

* fix(build): added missing spring-boot-autoconfigure

* refactor(build): added runtime test auto configuration support

* fix(tests): changed test jdbcUrl to use DB_CLOSE_DELAY=-1 configuration

* fix(activiti-spring-boot-starter): added conditional on global method security

* fix(version): update org.activiti.core.common:activiti-core-common-dependencies to 7.1.51

* fix(version): update org.activiti.api:activiti-api-dependencies to 7.1.49

* fix(version): update org.activiti.core.common:activiti-core-common-dependencies to 7.1.52",2019-10-07 16:45:45,Igor Dianov,['activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/process/ProcessRuntimeVariableMappingTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,d5282ebbddff656e7448012570f4904746000275,a71736a45c78c37355905e8ac1c1c0f44f24bf60,https://github.com/Activiti/Activiti/commit/d5282ebbddff656e7448012570f4904746000275,"fix(signal): dispatch ACTIVITY_SIGNALED start event within execution context (#2919)

* fix(signal): injected process execution context into start signal event

* fix(signal): corrected throw signal behavior to pass failing tests

* fix(messages): added missing message business key

* refactor(signals): remove not used method

* refactor(signal): polished internal SignalEventHandler dispatch

* fix(signal): changed modifier to public

* fix(signal): corrected event order in signal conformance tests

* fix(signals): refactored conformance test received events order

* Fix typo",2019-09-20 11:27:08,Igor Dianov,['activiti-spring-conformance-tests/activiti-spring-conformance-signals/src/test/java/org/activiti/spring/conformance/signals/SignalThrowCatchTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,7c8fcb9564d78c0ca4eb3f13c0c9dc9cf9e3057c,fea1edbf904371015b12db32dbc5c077f7e1f9fa,https://github.com/Activiti/Activiti/commit/7c8fcb9564d78c0ca4eb3f13c0c9dc9cf9e3057c,"Activiti 3760 definition upgrade logic (#2893)

* ACTIVITI-3760 Change logic for deployment versioning

* ACTIVITI-3760 Mybatis xml descriptor to support versioning

* ACTIVITI-3760 Mybatis descriptor clean up

* ACTIVITI-3760 logic to set procdef version as deployment/application version

* ACTIVITI-3760 Logic to calculate versioning for procdefs

* ACTIVITI-3760 Mybatis config to support app versioning of procdefs

* ACTIVITI-3760 Add sql commands for postgres

* ACTIVITI-3760 Add manifest to test resources

* ACTIVITI-3760 Add new project release version property to deployment

* ACTIVITI-3760 Add new column to table in postgres

* ACTIVITI-3760 Core logic for project release and application version bump up

* ACTIVITI-3760 Add spring configuration

* ACTIVITI-3760 Add properties to tests

* ACTIVITI-3760 Reset version in manifest

* ACTIVITI-3760 Refactor method

* ACTIVITI-3760 Add logger to DefaultAutoDeploymentStrategy class

* ACTIVITI-3760 Clean up

* ACTIVITI-3760 Ensure baackwards compatibility

* ACTIVITI-3760 Add method to Deployment interface

* ACTIVITI-3760 Add IT coverage

* Refactor deployment strategies

* ACTIVITI-3760 Refactor of DB and entities

* ACTIVITI-3760 Rely on default property

* Use SpringBoot test instead of SpringApplicationBuilder

* Clean up

* Update how to set deployment version

Avoid extra query retrieve latest deployment that was already loaded before",2019-09-19 13:51:30,Miguel Ruiz,"['activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/ProcessEngineAutoConfigurationTest.java', 'activiti-spring/src/test/java/org/activiti/spring/test/autodeployment/AbstractAutoDeploymentStrategyTest.java', 'activiti-spring/src/test/java/org/activiti/spring/test/autodeployment/DefaultAutoDeploymentStrategyTest.java', 'activiti-spring/src/test/java/org/activiti/spring/test/autodeployment/FailOnNoProcessAutoDeploymentStrategyTest.java', 'activiti-spring/src/test/java/org/activiti/spring/test/autodeployment/NeverFailAutoDeploymentStrategyTest.java', 'activiti-spring/src/test/java/org/activiti/spring/test/autodeployment/ResourceParentFolderAutoDeploymentStrategyTest.java', 'activiti-spring/src/test/java/org/activiti/spring/test/autodeployment/SingleResourceAutoDeploymentStrategyTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,d773269e6d1b1e3c6d32604ce0fe473bf0bf575e,9397f4b2b7c6665d031fd2e8123151d8e89defc4,https://github.com/Activiti/Activiti/commit/d773269e6d1b1e3c6d32604ce0fe473bf0bf575e,"Spring boot unit tests refactoring (#2912)

* Making sure the terminate event works on the engine level

* Use delegation instead of inheritance

* Unit test spring boot refactoring

* Use the hasSize method

* Use the hasSize method",2019-09-17 15:20:28,Maurizio Vitale,"['activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/process/ProcessRuntimeVariableMappingTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeTerminateEndEventTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,32392cef7a29a19d00ad35470e194afbe83f5740,bf868f3b3d0f9472cc530c2c43e4bc62be942064,https://github.com/Activiti/Activiti/commit/32392cef7a29a19d00ad35470e194afbe83f5740,"Support for BPMN message events (#2898)

* [ACTIVITI-3602] Support for BPMN message events

* [ACTIVITI-3602] Tests updated

* [ACTIVITI-3602] Replace set with list of messageEvents

* Refactor converters

As message events use a specific class (ActivitiMessageEvent) instead of generic ActivitiEntityEvent it's possible to simplify the converter logic

* [ACTIVITI-3602] Unit tests added for message events converters

* Remove unnecessary initMocks

No field is annotated with @Mock or @InjectMocks",2019-09-11 17:08:34,Illia Goncharov,"['activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/impl/BPMNMessageConverterTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/impl/ToMessageReceivedConverterTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/impl/ToMessageSentConverterTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/impl/ToMessageWaitingConverterTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,086b45283e85a434afd701422e72ccb6f9b9fa75,ca3e7300fb9ff564c6037b4b04176ff8046e331b,https://github.com/Activiti/Activiti/commit/086b45283e85a434afd701422e72ccb6f9b9fa75,"Move DateFormatterProvider to activiti core (#2888)

* [ACTIVITI-3745] DateFormatterProvider moved to activiti core

* [ACTIVITI-3745] Refactoring of DateVariableType

* [ACTIVITI-3745] Test extended to check date/time variables

* Rename methods and add unit tests for DateFormatterProvider

* [ACTIVITI-3745] Refactoring of tests

* [ACTIVITI-3745] Refactoring of a test",2019-09-10 13:13:37,Illia Goncharov,"['activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/process/ProcessExtensionsTest.java', 'activiti-spring-process-extensions/src/test/java/org/activiti/spring/process/variable/DateFormatterProviderTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,34dad64f0b109906b11d601ec259c516605bc27f,cc9b49ecda4870283afb533ae8d1afbb992501ed,https://github.com/Activiti/Activiti/commit/34dad64f0b109906b11d601ec259c516605bc27f,"feat: add core ThrowMessageEvent BPMN elements support (#2842)

* feat: add initial IntermediateThrowMessageEvent BPMN element support

* feat: add ThrowMessageJavaDelegate class attribute support

* feat: add ThrowMessageEndEvent support

* fix: Codaxy warnings

* feat: add Message Builder implementation

* eat: add Object payload  return in ThrowMessageEventDelegate interface

* feat: add message name expression support

* feat: add ACTIVITY_MESSAGE_SEND event dispatch on ThrowMessage

Test method for throwing message


Test added for intermediate throw message event


Minor refactoring


Refactoring


Refactoring

* fix: Codaxy warnings

* feat: Throw Message payload mapping field extensions

* fix: update user name in shoulEventsForProcessWithThrowMessage

* feat: map all fields extensions into ThrowMessage payload

* fix: handle null values when mapping field extensions

* fix: Codaxy warnings

* fix: refactor ThrowMessage to use Optional<payload> wrapper

* feat: add support for delegate expression

* feat: add ThrowMessageDelegateFactory configuration

* fix: better code formatting

* fix: refactor tests using AssertJ library

* fix: apply correct assert in MessageThrowEventTest

* feat: add MessageThrowCatchEventTest example

* feat: add start throw message event test example

* refactor: change ThrowMessage payload to support Map class

* feat: add test start message with payload

* fix: add payload test to catch message event

* feat: add start message businessKey propagation

* chore: polish tests

* chore: polish code formatting

* feat: add tests for race conditions

* feat: add test for race conditions on boundary event

* feat: add race condition test for boundary message on subprocess

* feat: add test for inter process throw catch end message event

* fix: testThrowCatchEndMessageEvent:307 NullPointer

* chore: deploy preview version to Alfresco

* fix: add Alfresco copyright header

* feat: add message payload mapping provider factory method

* feat: add message correlation key expression support

* chore: refactor AbstractThrowMessageEventActivityBehavior constructor

* feat: add JsonMessagePayloadMappingProviderFactory implementation

* feat: add JsonMessagePayloadMappingProvider payload mapping test

* chore: rename getCorrelationKey to getMessageCorrelationKey

* feat: add message business key support in ActivitiMessageEvent

* feat: add correlationKey for intermediate and boundary catch events

* fix: implement throw catch message test p2p BPMN behavior

* fix: correct Codaxy warnings

* feat: add correlationKey attribute to EventSubscriptionQueryImpl

* feat: add ProcessRuntime message start and receive implementations

* fix: refactor EventSubscriptionQuery failing tests

* fix: use ReceiveMessagePayload in  MessagePayloadEventListener

* feat: add ProcessRuntime shouldStartProcessByMessage test

* feat: add ProcessRuntime receive message with correlationKey test

* feat: add ProcessRuntime throw end message event test

* fix: failing ConnectorsAutoConfigurationIT test

* feat: add ProcessRuntime receive boundary message event test

* feat: add ProcessRuntime receive message event for gateway and subprocess

* feat: add receive start message event for event subprocess test

* fix: dispatch ACTIVITI_MESSAGE_RECEIVED before PROCESS_STARTED event

* fix: extend start message event dispatch event order test

* fix: extract parseExtensionAttributes into BaseChildElementParser

* fix: correct java doc for ACTIVITY_MESSAGE_SENT enum definition

* fix: remove obsolete createMessageEvent static method

* fix: add specialized message event type createXXX methods

* fix:  use brackets around if body

* feat: add MessageExecutionContext support

* fix: rename ThrowMessage.Builder to ThrowMessageBuilder

* fix: extract start message dispatchEvent into separate method

* fix: extract createProcessInstanceWithInitialFlowElement method

* fix: remove not used test logger.

* fix: Let's use log.error() instead of printStackTrace()

* fix: extract initExistingMessageSubscriptions method

* fix: Indentation is using tabs instead of spaces.

* fix: cover only message events between processes in separate pools

* feat: add event subscription payload mapping provider support

* fix: check style error 'if' is not followed by whitespace

* feat: add variable mapping support for start message event

fix: failing activiti-spring-process-extensions ITs


fix: java.util.ConcurrentModificationException


Auto stash before cherrypick of ""feat: add variable mapping support for start message command""

* fix: use better name for ReceiveMessagePayloadEventListener

* fix: remove TODOs

* fix: resolve message expression for event sub process start event",2019-09-09 14:24:36,Igor Dianov,"['activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/impl/MappingAwareActivityBehaviorFactoryTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/message/MessageStartEventTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/message/MessageThrowCatchEventTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/message/MessageThrowEventTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,f48543fff7df5eb76fb7c0d9d7a7df622346751f,86b452e67ee4387d9eb26e9465acc6ca63bc4b9e,https://github.com/Activiti/Activiti/commit/f48543fff7df5eb76fb7c0d9d7a7df622346751f,"Conformance test for the inclusive gateway (#2791)

* Conformance test for the inclusive gateway

* Double lines removed

* Conformance test for the inclusive gateway

* Double lines removed

* Refactoring of the test

* Refactoring of test for InclusiveGateway

* Update of a test for exclusiveGateway

* Fix configuration test

* Fix task names + clean up",2019-07-25 08:41:06,Illia Goncharov,"['activiti-spring-conformance-tests/activiti-spring-conformance-set4/src/test/java/org/activiti/spring/conformance/set4/BasicExclusiveGatewayTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set4/src/test/java/org/activiti/spring/conformance/set4/BasicInclusiveGatewayTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set4/src/test/java/org/activiti/spring/conformance/set4/ConformanceBasicProcessRuntimeTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,32223b2d533ee26eb155e77992163ad9b6ffda01,29162cdea6ddaf298fa07838a198010580c6593f,https://github.com/Activiti/Activiti/commit/32223b2d533ee26eb155e77992163ad9b6ffda01,"Implementation of BPMN timer events (#2814)

* Implementation of TIMER_FIRED, TIMER_SCHEDULED events

* Implementation of additional timer events

Following timer events are added:
JOB_CANCELED
JOB_EXECUTION_SUCCESS
JOB_EXECUTION_FAILURE
JOB_RETRIES_DECREMENTED

* Tests added for timer events

* Refactoring of timer converters

* Refactoring made to support changes made in API

* Refactoring for tests

* Filename for the process changed

* Filter for tasks added in a test

* Refactoring made for TimerPayload fields

* Test modified to check that after timer executed a task is reached

* activityId is removed from timerPayload

* Not needed test process removed

* Refactoring of process, double line remove

* Refactoring of tests

* isTimerRelatedEvent is used

* Refactoring of TimerTools

* fix(version): update org.activiti.api:activiti-api-dependencies to 7.1.31

* fix(version): update org.activiti.core.common:activiti-core-common-dependencies to 7.1.31

* Rename TimerTools

* Refactor converters

- remove base class that is only holding a field
- move check if it's timer related or not from delegate to converter directly
- add first unit tests

* Unit tests added

* Fix indentation

* Rename process file

* Enable async executor by default

+ refactor integration tests

* Convert AsyncPropertyValidatorTest into Unit Test

* Fix test clean up",2019-07-11 14:37:16,Illia Goncharov,"['activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/impl/ToTimerCancelledConverterTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/impl/ToTimerExecutedConverterTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/impl/ToTimerFailedConverterTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/impl/ToTimerFiredConverterTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/impl/ToTimerRetriesDecrementedConverterTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/impl/ToTimerScheduledConverterTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/internal/TimerCancelledListenerDelegateTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/internal/TimerExecutedListenerDelegateTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/internal/TimerFailedListenerDelegateTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/internal/TimerFiredListenerDelegateTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/internal/TimerRetriesDecrementedListenerDelegateTest.java', 'activiti-api-impl/activiti-api-process-runtime-impl/src/test/java/org/activiti/runtime/api/event/internal/TimerScheduledListenerDelegateTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/ProcessEngineAutoConfigurationTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/process/validation/AsyncPropertyValidatorTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeCompleteTaskTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,b04cb858ad2d6ca211362176212698eca5f85fef,23eeecb6c88e7392eb598ad0e10e388d567dc662,https://github.com/Activiti/Activiti/commit/b04cb858ad2d6ca211362176212698eca5f85fef,ACTIVITI-3310 Refactor Variable mapping test for emtpy mapping,2019-07-04 13:26:20,Miguel Ruiz,['activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeVariableMappingTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,a2ec62320ef5534aef224ad64593983bffab0ba8,e288191c434528054022803e11e3d892e9c4c5e6,https://github.com/Activiti/Activiti/commit/a2ec62320ef5534aef224ad64593983bffab0ba8,"ACTIVITI-3310 refactoring, test version for UserTask outbound variables

Some old tests are failing, should be discussed",2019-07-02 16:17:01,CTI777,['activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeVariableMappingTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,b6339df6a1ba10b18ca5ebabc13ba0b87cfb594a,71dbe23e8b7987b1f2e1e84896d4bc385de8be43,https://github.com/Activiti/Activiti/commit/b6339df6a1ba10b18ca5ebabc13ba0b87cfb594a,Refactoring of conformance tests  (#2771),2019-06-04 14:38:43,Illia Goncharov,"['activiti-spring-conformance-tests/activiti-spring-conformance-set0/src/test/java/org/activiti/spring/conformance/set0/ConformanceBasicGenericTaskTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set0/src/test/java/org/activiti/spring/conformance/set0/ConformanceBasicProcessInformationTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set0/src/test/java/org/activiti/spring/conformance/set0/ConformanceBasicProcessRuntimeTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set0/src/test/java/org/activiti/spring/conformance/set0/ProcessInstanceOperationsTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set1/src/test/java/org/activiti/spring/conformance/set1/ConformanceBasicProcessRuntimeTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set1/src/test/java/org/activiti/spring/conformance/set1/ConformanceServiceTaskModifyVariableTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set1/src/test/java/org/activiti/spring/conformance/set1/ConformanceServiceTaskTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set2/src/test/java/org/activiti/spring/conformance/set2/ConformanceBasicProcessRuntimeTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set2/src/test/java/org/activiti/spring/conformance/set2/UserTaskAssigneeDeleteRuntimeTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set2/src/test/java/org/activiti/spring/conformance/set2/UserTaskAssigneeRuntimeTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set2/src/test/java/org/activiti/spring/conformance/set2/UserTaskCandidateDeleteRuntimeTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set2/src/test/java/org/activiti/spring/conformance/set2/UserTaskCandidateGroupRuntimeTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set2/src/test/java/org/activiti/spring/conformance/set2/UserTaskCandidateUserRuntimeTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set2/src/test/java/org/activiti/spring/conformance/set2/UserTaskNoCandidateRuntimeTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set3/src/test/java/org/activiti/spring/conformance/set3/ConformanceBasicProcessRuntimeTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set3/src/test/java/org/activiti/spring/conformance/set3/UserTaskCandidateGroupAndAssigneeTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set3/src/test/java/org/activiti/spring/conformance/set3/UserTaskCandidateGroupsTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set3/src/test/java/org/activiti/spring/conformance/set3/UserTaskCandidateVisibilityTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set4/src/test/java/org/activiti/spring/conformance/set4/BasicExclusiveGatewayErrorTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set4/src/test/java/org/activiti/spring/conformance/set4/BasicExclusiveGatewayTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set4/src/test/java/org/activiti/spring/conformance/set4/BasicParallelGatewayGroupAssignmentsTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set4/src/test/java/org/activiti/spring/conformance/set4/BasicParallelGatewayTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set4/src/test/java/org/activiti/spring/conformance/set4/ConformanceBasicProcessRuntimeTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set5/src/test/java/org/activiti/spring/conformance/set5/BasicCallActivityAndServiceTaskTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set5/src/test/java/org/activiti/spring/conformance/set5/BasicCallActivityTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-set5/src/test/java/org/activiti/spring/conformance/set5/ConformanceBasicProcessRuntimeTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-signals/src/test/java/org/activiti/spring/conformance/signals/SignalThrowCatchTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-variables/src/test/java/org/activiti/spring/conformance/variables/ProcessVariablesTest.java', 'activiti-spring-conformance-tests/activiti-spring-conformance-variables/src/test/java/org/activiti/spring/conformance/variables/TaskVariablesTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,d64c4f1cc97d57141b74cb0f6e4ae6ba10cd72f9,4e99056a3568b8acc6366e8d224db755bdf012a2,https://github.com/Activiti/Activiti/commit/d64c4f1cc97d57141b74cb0f6e4ae6ba10cd72f9,"Call activity tests (#2604)

* Refactor name of ITs

* Refactor Process Runtime Connetor test name

* Add process definitions involved in call activity tests

* Add call activity test at engine level

* Add process definitions for call activity tests

* Add test for call activity

* Optimize imports

* Remove test at engine level

* Check by Parent Id

* Check retrieved list is not null

* Optimize imports

* Check if not empty instead of null",2019-03-12 09:43:45,Miguel Ruiz,['activiti-engine/src/test/java/org/activiti/examples/bpmn/callactivity/CallActivityTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,3bd6115e5c11773a984e391710f3a2f5420b8b36,b49c60d7ba83f2bccb3136968be7b3fc72e27d52,https://github.com/Activiti/Activiti/commit/3bd6115e5c11773a984e391710f3a2f5420b8b36,refactor asyncTaskTest to avoid race conditions,2018-12-22 23:26:21,Igor Dianov,['activiti-engine/src/test/java/org/activiti/engine/test/bpmn/async/AsyncTaskTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,fefcb7bbf02186900de491385ded90a7ac15c319,9582203320a7a8f38b615bc4654493af62b116a0,https://github.com/Activiti/Activiti/commit/fefcb7bbf02186900de491385ded90a7ac15c319,"fix: some refactoring made, test corrected",2018-12-17 21:01:50,CTI777,['activiti-api-impl/activiti-api-task-runtime-impl/src/test/java/org/activiti/runtime/api/impl/TaskRuntimeImplTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,1de2a77ba5c1e1a062c861d4664d2efccda2d384,f80bf8a3f3968bd6902f083bf5803d09ecab0a57,https://github.com/Activiti/Activiti/commit/1de2a77ba5c1e1a062c861d4664d2efccda2d384,"refactoring made, test updated",2018-12-13 13:40:39,CTI777,['activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/process/ProcessRuntimeTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,7f54df3dcf9f8d2acbafb91d68f1c506b6bdb0f7,b76df4941aa931f7d2be251c8e95e36acf047a96,https://github.com/Activiti/Activiti/commit/7f54df3dcf9f8d2acbafb91d68f1c506b6bdb0f7,"Salaboy api refactoring 3rd (#1959)

* refactoring activiti-spring-identity and activiti-spring-security

* adding TaskRuntime and TaskAdminRuntime + tests

* adding Admin Tests

* quick push

* enforcer and adding security policies module

* adding security policies manager

* adding security policies to ProcessRuntimeImpl

* adding spring security to ProcessRuntime & ProcessAdminRuntime

* updating ProcessRuntime and ProcessAdminRuntime

* removing AuthorizationLookup interface

* Add missing tests + simplify builder

* Update dependencies accordingly to dependency management

- remove explicit versions
- remove duplicated dependencies

* simplifying security policies

* initial refactoring for sec policies

* Fix update task

- Avoid NPE when assignee is not set
- Use Integer instead of primitive int for priority so

* further decouple of security policies and roles checks

* adding support for admin methods at Java API level

* fixing typo and adding ProcessInstanceStatus.CREATED back again

* Review improvements

* Use constructor injection + clean up tests

* Move tests from runtime bundle service

* making proteted properties in base abstract class BaseSecurityPoliciesManagerImpl.java

* Search by definition key before getting by id

* Remove obsolete tests

admin is never going to use getAllowedKeys",2018-08-08 17:20:56,Elias Ricken de Medeiros,"['activiti-api/activiti-task-runtime-api-impl/src/test/java/org/activiti/runtime/api/impl/TaskRuntimeImplTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/history/HistoricTaskAndVariablesQueryTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/task/TaskQueryTest.java', 'activiti-identity-basic/src/test/java/org/activiti/cloud/services/identity/basic/BasicAuthorizationLookupTest.java', 'activiti-identity-basic/src/test/java/org/activiti/cloud/services/identity/basic/BasicIdentityLookupTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/RuntimeConfigurationTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/process/ProcessRuntimeSecurityPoliciesTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/process/ProcessRuntimeTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeClaimReleaseTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeCompleteTaskTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeDeleteTaskTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeStandaloneTaskTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeTaskAssigneeTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeTaskForOtherTest.java', 'activiti-spring-boot-starter/src/test/java/org/activiti/spring/boot/tasks/TaskRuntimeUnAuthorizedTest.java', 'activiti-spring-security-policies/src/test/java/org/activiti/spring/security/policies/SecurityPoliciesProcessDefinitionRestrictionApplierTest.java', 'activiti-spring-security-policies/src/test/java/org/activiti/spring/security/policies/SecurityPoliciesProcessInstanceRestrictionApplierTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,73b4ff5ead082606edf978b20e20089ae93e15bb,9c9d9089415bddcdebb6be1d4cdaa0b98229132a,https://github.com/Activiti/Activiti/commit/73b4ff5ead082606edf978b20e20089ae93e15bb,"Query Service initial implementation - #1259 (#1312)

* split activiti-services-query project structure

* self-links and variables endpoint

* date range queries

* security on query endpoints

* update following merge

* Remove duplicated configuration

* Launch docker for integration tests on module activiti-services-query-app

* Update keycloak url for used by tests

* Remove commented dependencies

* Add version to REST endpoints

* Fix several minor issues

- fields scopes
- unused variables / imports

* Refactor QueryApplication

Use strategy pattern to handle events

* Fix compilation error

* Limit mocks to QueryEventHanlderContextIT

* Add support to variable events

* remove `query` from rest endpoint

* Use partial clean instead of dirty context

* Fix typo

* rename module from activiti-services-query-app to activiti-services-query-rest

* rename packages

* Make events implement common interface

* Remove unused event

* Check if result is present before getting it

* Fix formatting

* Move integration tests to starters repository

* Split variables controller in task variables controller an process variables controller
- rename model package from *.app.model to *.model
- remove field nameLike from task

* Remove unnecessary comment",2017-08-15 10:30:16,ryandawsonuk,"['activiti-services/activiti-services-query/activiti-services-query-repo/src/test/java/org/activiti/services/query/app/repository/EntityFinderTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/QueryConsumerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/ProcessCompletedEventHandlerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/ProcessStartedHandlerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/ProcessVariableCreatedHandlerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/ProcessVariableDeletedHandlerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/ProcessVariableUpdateHandlerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/QueryEventHandlerContextTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/TaskAssignedEventHandlerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/TaskCompletedEventHandlerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/TaskCreatedEventHandlerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/TaskVariableCreatedHandlerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/TaskVariableDeletedHandlerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/TaskVariableUpdatedHandlerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/VariableCreatedEventHandlerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/VariableDeletedEventHandlerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/VariableUpdatedEventHandlerTest.java', 'activiti-services/activiti-services-query/activiti-services-query-rest/src/test/java/org/activiti/services/query/events/handlers/VariableUpdaterTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,c2d76aef0898e7503fbab9abd62f4516b19f5735,f655479b4ad71d07cd950d690dd388f919c99e29,https://github.com/Activiti/Activiti/commit/c2d76aef0898e7503fbab9abd62f4516b19f5735,"Add activiti-image-generator project (#1254)

* Add activiti-image-generator project

* Code format

* Add dependency to batik

* SVG other than icon

* Change task icons to svg

* Refactoring

* Add icons other than error events

* Add error event icon

* Add to activiti-engine

* Code format

* Salaboy's findings

* Salaboy's findings

* Change extension of process diagram generated at deployment

* Improvement of SVG structure

* Add dependency

* Code format

* Enable the test case

* Fix to set ID for pool and lane

* Add test case

* Remove getProcessDiagramLayout

* Fix to render only once

* Fix for EndEvent

* Remove png icons

* Fix for codacy/pr

* Merge pom version

* Set svg size

* Point out from codacy

* Remove dependency by engine

* Remove unnecessary setting of process diagram from engine

* Remove unnecessary setting of process diagram from engine

* Move test case",2017-07-28 07:33:13,Daisuke Yoshimoto,"['activiti-engine/src/test/java/org/activiti/engine/test/bpmn/deployment/BpmnDeploymentTest.java', 'activiti-image-generator/src/test/java/org/activiti/engine/test/image/ProcessDiagramGeneratorTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,0f9c77d07c1d422f375352a0bba986f6b1845be4,14285d09f2cbec0148aa8f29e9530f86686a089b,https://github.com/Activiti/Activiti/commit/0f9c77d07c1d422f375352a0bba986f6b1845be4,"Adding Metadata Endpoint Activiti 1242 (#1258)

* activiti-1242
- created the unit test
- added the properties and the getters to the model
- added the controller for the GET method

* activiti-1242
- modified the model
- modified the controller

* acactiviti-1242
- added a new test XML process and its java delegates

* acactiviti-1242
- modified the model
- modified the controller
- modified the resource assembler
- modified the integration test

* acactiviti-1242
- removed unused methods

* acactiviti-1242
- fixed the integration tests

* activiti-1242
- modified the integration tests to avoid for checking the number of processes deployed.

* activiti-1242
- included the activiti-bpmn-model dependency in the pom.xml

* activiti-1242
- code refactored as per changes requested.

* activiti-1242
- made variable name more readable

* activiti-1242
- Added new models for variables, user tasks and service tasks
- Modified the controller for the new models

* activiti-1242
- Removed unused code and comments

* activiti-1242
- changed the asserts for the unit test

* activiti-1242
- code formatted
- code cleaned

* activiti-1242
- included the new changes for the Process definition metadata.

* activiti-1242
- Refactored the integration tests.

* activiti-1242
- Applied the code style.

* activiti-1242
- Applied the code style.

* activiti-1242
- Applied the code style.",2017-07-26 07:42:05,Giuseppe Malanga,['activiti-spring-boot/spring-boot-starters/activiti-spring-boot-starter/src/test/java/org/activiti/cmdendpoint/CommandEndpointTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,67418c06610c95879489561d4f956ac187600750,3da89f5b48e6950b067b735268a557537130c35b,https://github.com/Activiti/Activiti/commit/67418c06610c95879489561d4f956ac187600750,"Salaboy 1256 activiti services (#1270)

Initial Activiti 7 Services Structure
* initial refactoring, not compiling yet

* updating tests and adding docker support to build

* adding activiti-services-identity-keycloak

* adding snapshots for spring cloud

* fixing travis conf

* fixing deps

* moving docker configs

* fixing docker path

* updating docker file location

* fixing enforcer in identity

* keeping test output to system.out

* renaming starter and removing logs

* playing with surefire

* updating starter name

* removing useless test

* removing spring stream tests support

* redirecting logs to file

* Print error information when tests are failing

* playing with mockito

* Dot not use @InjectMocks for complex instantiations.

* Fix merge error

* setting up message based command executor

* enabling keycloak tests

* adding test and improving keycloak module

* Fix travis configuration

Update command to show failing reports from all sub-folders

* ignoring keycloak tests again

* removing application properties from starter

* initial tests for event converter

* adding process and task event converter tests",2017-07-25 10:30:33,Salaboy,"['activiti-services/activiti-services-core/src/test/java/org/activiti/services/core/tests/pageable/ProcessDefinitionSortApplierTest.java', 'activiti-services/activiti-services-core/src/test/java/org/activiti/services/core/tests/pageable/ProcessInstanceSortApplierTest.java', 'activiti-services/activiti-services-core/src/test/java/org/activiti/services/core/tests/pageable/TaskSortApplierTest.java', 'activiti-services/activiti-services-events/src/test/java/org/activiti/services/events/converter/EventConverterContextTest.java', 'activiti-services/activiti-services-events/src/test/java/org/activiti/services/events/converter/EventConvertersTest.java', 'activiti-spring-boot/spring-boot-starters/activiti-spring-boot-starter/src/test/java/org/activiti/cmdendpoint/CommandEndpointTest.java', 'activiti-spring-boot/spring-boot-starters/activiti-spring-boot-starter/src/test/java/org/activiti/services/ProcessInstanceControllerTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,435deb85455521dc832bd959171e992872fb0338,2a75e49a389225feb3583d468018be017fba7e21,https://github.com/Activiti/Activiti/commit/435deb85455521dc832bd959171e992872fb0338,dmn model refactored and added test cases,2017-03-31 12:31:56,Pranay Kumar,"['modules/activiti-dmn-engine/src/test/java/org/activiti/dmn/engine/test/DeploymentTest.java', 'modules/activiti-dmn-engine/src/test/java/org/activiti/dmn/engine/test/runtime/DecisionRuntimeTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,2a75e49a389225feb3583d468018be017fba7e21,10bf9c3032c0cbb790194e473f32a2e2f1ad6525,https://github.com/Activiti/Activiti/commit/2a75e49a389225feb3583d468018be017fba7e21,dmn model refactored and added test cases,2017-03-31 11:58:38,Pranay Kumar,"['modules/activiti-dmn-engine/src/test/java/org/activiti/dmn/engine/test/CustomConfigRuntimeTest.java', 'modules/activiti-dmn-engine/src/test/java/org/activiti/dmn/engine/test/DeploymentTest.java', 'modules/activiti-dmn-engine/src/test/java/org/activiti/dmn/engine/test/RuntimeTest.java', 'modules/activiti-dmn-engine/src/test/java/org/activiti/dmn/engine/test/runtime/DecisionRuntimeTest.java', 'modules/activiti-dmn-rest/src/test/java/org/activiti/rest/dmn/service/api/repository/DecisionTableCollectionResourceTest.java', 'modules/activiti-dmn-rest/src/test/java/org/activiti/rest/dmn/service/api/repository/DmnDeploymentCollectionResourceTest.java', 'modules/activiti-dmn-rest/src/test/java/org/activiti/rest/dmn/service/api/repository/DmnDeploymentResourceDataResourceTest.java', 'modules/activiti-dmn-xml-converter/src/test/java/org/activiti/dmn/xml/MultipleDecisionsConverterTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,d08a247570336c872bb17ce513c1fb95b3ba47a2,36035837bc65723cb9d983cd768a15606aaa29ec,https://github.com/Activiti/Activiti/commit/d08a247570336c872bb17ce513c1fb95b3ba47a2,"Refactoring and tweaks of the async executor after some serious load testing on AWS. Introduction of a Spring-JMS message-based async executor (easily portable to other flavors of messaging), also tested on AWS with some very nice results :-). A blog will follow soon.",2016-07-15 16:16:10,Joram Barrez,"['modules/activiti-engine/src/test/java/org/activiti/engine/test/api/mgmt/JobQueryTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/jobexecutor/JobExecutorCmdHappyTest.java', 'modules/activiti5-spring-test/src/test/java/org/activiti5/spring/test/jobexecutor/SpringJobExecutorTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,f89200b1006f89f4afab6a7987c7a1e6f43bf088,ba61c92e48f7d5cbfbb5c16f0aadeedd070ae884,https://github.com/Activiti/Activiti/commit/f89200b1006f89f4afab6a7987c7a1e6f43bf088,Refactor test to run under JDK7 and JDK8,2016-05-12 14:34:06,David Malkovsky,['modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/scripttask/ScriptTaskTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,1851a55e416753c8ea98b4802aa8e46cfeffc7eb,321b3342989d386cc7b0e14bd2edf5e1b5550546,https://github.com/Activiti/Activiti/commit/1851a55e416753c8ea98b4802aa8e46cfeffc7eb,"Refactoring for Activiti 5 compatibility + Spring, CXF and Camel unit testing",2015-08-31 12:05:59,Tijs Rademakers,"['modules/activiti-camel/src/test/java/org/activiti/camel/AsyncPingTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/AsyncPingTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/AsyncProcessTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/CamelVariableBodyMapTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/CamelVariableBodyTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/CustomContextTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/EmptyProcessTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/ErrorHandlingTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/ErrorMapExceptionTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/ParallelProcessTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/SimpleProcessTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/SimpleSpringProcessTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/examples/initiator/InitiatorCamelCallTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/examples/multiinstance/MultiInstanceTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/examples/ping/PingPongTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/examples/simple/SimpleCamelCallTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/exception/CamelExceptionTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/revisited/AsyncProcessRevisitedTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/revisited/ParallelProcessRevisitedTest.java', 'modules/activiti5-camel-test/src/test/java/org/activiti5/camel/variables/CamelVariableTransferTest.java', 'modules/activiti5-cxf-test/src/test/java/org/activiti5/engine/impl/webservice/WSDLImporterTest.java', 'modules/activiti5-cxf-test/src/test/java/org/activiti5/engine/impl/webservice/WebServiceImportTest.java', 'modules/activiti5-cxf-test/src/test/java/org/activiti5/engine/impl/webservice/WebServiceTaskTest.java', 'modules/activiti5-cxf-test/src/test/java/org/activiti5/engine/test/bpmn/sendtask/WebServiceSimplisticTest.java', 'modules/activiti5-cxf-test/src/test/java/org/activiti5/engine/test/bpmn/sendtask/WebServiceTest.java', 'modules/activiti5-cxf-test/src/test/java/org/activiti5/engine/test/bpmn/sendtask/WebServiceUELTest.java', 'modules/activiti5-cxf-test/src/test/java/org/activiti5/engine/test/bpmn/servicetask/AbstractWebServiceTaskTest.java', 'modules/activiti5-cxf-test/src/test/java/org/activiti5/engine/test/bpmn/servicetask/WebServiceSimplisticTest.java', 'modules/activiti5-cxf-test/src/test/java/org/activiti5/engine/test/bpmn/servicetask/WebServiceTaskTest.java', 'modules/activiti5-cxf-test/src/test/java/org/activiti5/engine/test/bpmn/servicetask/WebServiceUELTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,21aa5c795d0c8a3ca759a291ff885c6e216779b1,74a480830550390ab90c6966cbf735b604757b12,https://github.com/Activiti/Activiti/commit/21aa5c795d0c8a3ca759a291ff885c6e216779b1,"Fixing the FullHistoryTest: refactoring the way HistoricActivityInstances are looked up (still needs to be moved to the entity manager), creating one if one is not found (to solve the order problem).",2015-05-08 10:47:20,Joram Barrez,"['modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricVariableInstanceTest.java', 'modules/activiti-engine/src/test/java/org/activiti/standalone/history/FullHistoryTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,a0595d6ecd215b1f4c9dc4bf24204d1b69bcd276,743dcd186584b376a96732f1c7b2c38ca8e6ae47,https://github.com/Activiti/Activiti/commit/a0595d6ecd215b1f4c9dc4bf24204d1b69bcd276,"- Refactored scriptTask and receiveTask + simple test
- Renamed behaviour to behavior (consistent with ActivityBehavior)",2015-01-02 22:55:01,Joram Barrez,['modules/activiti-engine/src/test/java/org/activiti/engine/test/concurrency/CompetingJoinTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,a34e825e4d305741c119cc94a90ac22d3c82ced0,30fbf2e97029a0a235681d3870a86e7cc6e89ceb,https://github.com/Activiti/Activiti/commit/a34e825e4d305741c119cc94a90ac22d3c82ced0,"EndDate support in TimeCycle #2184
- improved the test for StartTimerEvent with End Date.
- small code refactoring in TimerEntity.

- adjusted MessageConverterTest and removed default namespace from message itemRef
- improved the TimerStartEvent test.",2015-03-16 08:07:43,Vasile Dirla,"['modules/activiti-bpmn-converter/src/test/java/org/activiti/editor/language/xml/MessageConverterTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/timer/StartTimerEventRepeatWithEndTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,2126761d8158a1b0800f2ab647ac8db3b1521246,30fbf2e97029a0a235681d3870a86e7cc6e89ceb,https://github.com/Activiti/Activiti/commit/2126761d8158a1b0800f2ab647ac8db3b1521246,"EndDate support in TimeCycle #2184
- improved the test for StartTimerEvent with End Date.
- small code refactoring in TimerEntity.",2015-03-16 08:07:43,Vasile Dirla,['modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/timer/StartTimerEventRepeatWithEndTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,62b73f2a748563e883c319981bdbe6e56593f6d4,5164fea88ceed659720afe484266e8c0e8157d4b,https://github.com/Activiti/Activiti/commit/62b73f2a748563e883c319981bdbe6e56593f6d4,Camel test refactoring,2014-12-04 10:58:37,Tijs Rademakers,"['modules/activiti-camel/src/test/java/org/activiti/camel/AsyncPingTest.java', 'modules/activiti-camel/src/test/java/org/activiti/camel/AsyncProcessTest.java', 'modules/activiti-camel/src/test/java/org/activiti/camel/CamelVariableBodyMapTest.java', 'modules/activiti-camel/src/test/java/org/activiti/camel/CamelVariableBodyTest.java', 'modules/activiti-camel/src/test/java/org/activiti/camel/CustomContextTest.java', 'modules/activiti-camel/src/test/java/org/activiti/camel/EmptyProcessTest.java', 'modules/activiti-camel/src/test/java/org/activiti/camel/ParallelProcessTest.java', 'modules/activiti-camel/src/test/java/org/activiti/camel/SimpleProcessTest.java', 'modules/activiti-camel/src/test/java/org/activiti/camel/SimpleSpringProcessTest.java', 'modules/activiti-camel/src/test/java/org/activiti/camel/examples/initiator/InitiatorCamelCallTest.java', 'modules/activiti-camel/src/test/java/org/activiti/camel/examples/pingPong/PingPongTest.java', 'modules/activiti-camel/src/test/java/org/activiti/camel/examples/simple/SimpleCamelCallTest.java', 'modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java', 'modules/activiti-camel/src/test/java/org/activiti/camel/revisited/ParallelProcessRevisitedTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,a810113dd74191cb18d9c49863384f13b3002b89,ebf9a2bea890342807f20eb4234847f2392bd9fb,https://github.com/Activiti/Activiti/commit/a810113dd74191cb18d9c49863384f13b3002b89,"First bit of refactoring done, now testing",2014-10-07 22:05:02,Tijs Rademakers,['modules/activiti-rest/src/test/java/org/activiti/rest/service/api/history/HistoricDetailQueryResourceTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,4b2c7d9ba72ed46b6f9029940771ad83a42d50a7,db81617bc6ef6732a9a7a25086e7cd352b89eac7,https://github.com/Activiti/Activiti/commit/4b2c7d9ba72ed46b6f9029940771ad83a42d50a7,Simple unit test for ACT-1952: Refactor process definition validation + allow to plugin in custom validation,2014-03-16 17:38:16,Joram Barrez,['modules/activiti-engine/src/test/java/org/activiti/standalone/validation/ProcessValidationTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,592b6ceed0dbf17cd342499d9a8a90c4e0fde8dd,d91df1bddfe582d776514d73fc1b5d6b9c3a8d83,https://github.com/Activiti/Activiti/commit/592b6ceed0dbf17cd342499d9a8a90c4e0fde8dd,Fix for test failing due to xml parser refactoring,2013-02-20 15:44:02,Joram Barrez,"['modules/activiti-engine/src/test/java/org/activiti/engine/test/api/repository/DeployInvalidXmlTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/parse/BpmnParseTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,f16dc0fdb6e5280c0c2608ec06990e2a395d2ca4,ed1049452ff96747a208df348caf190dd7bcbe7d,https://github.com/Activiti/Activiti/commit/f16dc0fdb6e5280c0c2608ec06990e2a395d2ca4,ACT-741 fixing problem in mule test probably created during my persistence refactoring,2011-04-08 08:29:10,tombaeyens,"['modules/activiti-mule/src/test/java/org/activiti/engine/test/bpmn/servicetask/AbstractWebServiceTaskTest.java', 'modules/activiti-mule/src/test/java/org/activiti/engine/test/bpmn/servicetask/WebServiceUELTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,c78404c35d90af1508bf42bceb17ef8a456b2044,07f36c17a5983246c79d9f43cedc074a2d53c57e,https://github.com/Activiti/Activiti/commit/c78404c35d90af1508bf42bceb17ef8a456b2044,ACT-45 refactoring process engine caching in test to enable in container testing spring configurations,2011-02-22 18:32:56,tombaeyens,"['modules/activiti-engine/src/test/java/org/activiti/engine/test/cache/ProcessDefinitionCacheTest.java', 'modules/activiti-engine/src/test/java/org/activiti/standalone/initialization/ProcessEnginesTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,05aa62a4296eff8222486850dc181b06f1ff4ff2,d386af085df97de498713caf6f696552574cd8c3,https://github.com/Activiti/Activiti/commit/05aa62a4296eff8222486850dc181b06f1ff4ff2,refactored base test classes for our own internal test suite,2010-11-25 21:43:45,tombaeyens,"['modules/activiti-cxf/src/test/java/org/activiti/engine/impl/webservice/WebServiceTaskTest.java', 'modules/activiti-cycle/src/test/java/org/activiti/cycle/impl/db/impl/CycleDaoMyBatisImplTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/api/history/HistoryServiceTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/api/identity/GroupQueryTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/api/identity/IdentityServiceTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/api/identity/UserQueryTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/api/mgmt/JobQueryTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/api/mgmt/ManagementServiceTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/api/repository/DeploymentQueryTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/api/repository/ProcessDefinitionQueryTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/api/repository/RepositoryServiceTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/ExecutionQueryTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/ProcessInstanceQueryTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/RuntimeServiceTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/api/task/TaskQueryTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/api/task/TaskServiceTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/StartToEndTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/callactivity/CallActivityAdvancedTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/deployment/BpmnDeploymentTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/timer/BoundaryTimerEventTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/gateway/ExclusiveGatewayTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/gateway/ParallelGatewayTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/mail/EmailServiceTaskTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/parse/InvalidProcessTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/property/PropertyTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/sequenceflow/ConditionalSequenceFlowTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/subprocess/SubProcessTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/usertask/InitiatorTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/usertask/TaskAssignmentExtensionsTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/usertask/UserTaskTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/concurrency/CompetingJobAcquisitionTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/concurrency/CompetingJoinTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/concurrency/CompetingSignalsTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DeploymentPersistenceTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/db/EngineRebootProcessDefinitionCacheTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/db/ProcessDefinitionPersistenceTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/el/ExpressionManagerTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/forms/FormsTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricProcessInstanceTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricVariableUpdateTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/jobexecutor/JobExecutorCmdExceptionTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/json/JsonTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/transactions/TransactionRollbackTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/callactivity/CallActivityTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/event/timer/BoundaryTimerEventTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/executionlistener/ExecutionListenerTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/expression/UelExpressionTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/gateway/ExclusiveGatewayTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/gateway/ParallelGatewayTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/mail/EmailServiceTaskTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/receivetask/ReceiveTaskTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/scripttask/ScriptTaskTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/servicetask/ExpressionServiceTaskTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/servicetask/JavaServiceTaskTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/servicetask/MethodExpressionServiceTaskTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/subprocess/SubProcessTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/tasklistener/CustomTaskAssignmentTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/tasklistener/TaskListenerTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/usertask/FinancialReportProcessTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/usertask/taskassignee/TaskAssigneeTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/usertask/taskcandidate/TaskCandidateTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/identity/IdentityTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/mgmt/ManagementServiceTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/mgmt/TablePageQueryTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/processdefinitions/ProcessDefinitionsTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/task/StandaloneTaskTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/taskforms/TaskFormsTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/variables/VariablesTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/variables/jpa/JPAVariableTest.java', 'modules/activiti-engine/src/test/java/org/activiti/standalone/history/FullHistoryTest.java', 'modules/activiti-engine/src/test/java/org/activiti/standalone/initialization/ProcessEnginesTest.java', 'modules/activiti-engine/src/test/java/org/activiti/standalone/interceptor/CommandContextTest.java', 'modules/activiti-mule/src/test/java/org/activiti/engine/test/bpmn/servicetask/AbstractWebServiceTaskTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,2398241aa737d3f1947e8e67a73cc2672ef3b414,5cc5ab1e79434389ccae8cf92bc056370bd2f390,https://github.com/Activiti/Activiti/commit/2398241aa737d3f1947e8e67a73cc2672ef3b414,"ACT-347: introduced delegateExpression on serviceTask, taskListener and executionListener. Also refactores all Spring tests while I was at it.",2010-11-23 18:00:08,jbarrez,"['modules/activiti-spring/src/test/java/org/activiti/spring/test/SpringAutoDeployTest.java', 'modules/activiti-spring/src/test/java/org/activiti/spring/test/SpringTransactionIntegrationTest.java', 'modules/activiti-spring/src/test/java/org/activiti/spring/test/autodeployment/SpringAutoDeployTest.java', 'modules/activiti-spring/src/test/java/org/activiti/spring/test/jpa/JPASpringTest.java', 'modules/activiti-spring/src/test/java/org/activiti/spring/test/servicetask/ServiceTaskSpringDelegationTest.java', 'modules/activiti-spring/src/test/java/org/activiti/spring/test/taskassignment/CustomTaskAssignmentTest.java', 'modules/activiti-spring/src/test/java/org/activiti/spring/test/transaction/SpringTransactionIntegrationTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,3346b9304e3d472ddb07299ecd80c6b58b23fe68,755feb93a93ad44008ca35d2e91be9f81ac8eec0,https://github.com/Activiti/Activiti/commit/3346b9304e3d472ddb07299ecd80c6b58b23fe68,"Added DB entities, tables and DAO methods for People links and comments, 
Added test case for all DAO methods
Refactored Entity names to have a common naming schema
added first hacky version of Signavio DIFF POC",2010-11-01 08:56:43,bernd.ruecker,['modules/activiti-cycle/src/test/java/org/activiti/cycle/impl/db/impl/CycleDaoMyBatisImplTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,30bf93534ab6a7def75a9ffb72f7310203fdd613,c59197844e6b7bb0e8fd0b3a29fff6f8fd20ea61,https://github.com/Activiti/Activiti/commit/30bf93534ab6a7def75a9ffb72f7310203fdd613,fixed test case after refactoring form handling for artifact actions,2010-10-18 13:21:05,nilspreusker,['modules/activiti-cycle/src/test/java/org/activiti/cycle/impl/connector/demo/DemoConnectorTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,41c8932cbffd83a452da0f4f0145ae21be4dc8e4,33c5d143aa24d7426512d1e00b958e17547587a3,https://github.com/Activiti/Activiti/commit/41c8932cbffd83a452da0f4f0145ae21be4dc8e4,"Rename CycleConfigurationService to CycleService and SimpleXStreamRepositoryConnectorConfigurationManager to CycleServiceXStreamImpl.
Depends on the naming refactoring changed SessionUtil and RepositoryConnectorConfigurationManagerImplTest.",2010-09-16 11:54:08,kristin.polenz,['modules/activiti-cycle/src/test/java/org/activiti/cycle/impl/conf/RepositoryConnectorConfigurationManagerImplTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,d30c519baac87dd216783bbb2fb3a8394c6b41d8,6ebf8d913e3715b79a5c26599b5c8c6a125254bb,https://github.com/Activiti/Activiti/commit/d30c519baac87dd216783bbb2fb3a8394c6b41d8,ACT-108 refactor test support,2010-09-10 08:58:48,tombaeyens,"['modules/activiti-engine-test-cfg/src/test/java/org/activiti/test/processengines/ProcessEnginesTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/parse/InvalidProcessTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/usertask/TaskAssignmentExtensionsTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/db/EngineRebootProcessDefinitionCacheTest.java', 'modules/activiti-engine/src/test/java/org/activiti/examples/bpmn/usertask/taskcandidate/TaskCandidateTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,6ebf8d913e3715b79a5c26599b5c8c6a125254bb,be34e30a98624520a20a79c4febc7c7c5fbc440d,https://github.com/Activiti/Activiti/commit/6ebf8d913e3715b79a5c26599b5c8c6a125254bb,"ACT-119: Add web service
- Create message, structure classes.
- Improve parsing to handle itemDefinitions and structures.
- Add a first version of the test for the web service example.
- Refactor WebServiceActivity class.",2010-09-09 17:35:49,esteban.robles,"['modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/servicetask/WebServiceTaskTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/webservice/WebServiceActivityBehaviorTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,1577d9adb7cfbd971ae00d824c0ed4b832a38421,0f24fa8a6f088704e70b7dc9640f202ac2bac1c4,https://github.com/Activiti/Activiti/commit/1577d9adb7cfbd971ae00d824c0ed4b832a38421,"Big refactoring of Cycle API, compiling and test running but distro not yet checked (impossible in the train without internet). Not yet stable!",2010-09-08 19:22:22,bernd.ruecker,"['modules/activiti-cycle/src/test/java/org/activiti/cycle/impl/connector/ApiTest.java', 'modules/activiti-cycle/src/test/java/org/activiti/cycle/impl/connector/demo/DemoConnectorTest.java', 'modules/activiti-cycle/src/test/java/org/activiti/cycle/impl/connector/fs/FileSystemConnectorTest.java', 'modules/activiti-cycle/src/test/java/org/activiti/cycle/impl/connector/signavio/SignavioConnectorTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,3c9ca1326fecbe26d1f7c976f75e60522974de52,79e316cac53c708635949453ef7c7f2c57fe76c3,https://github.com/Activiti/Activiti/commit/3c9ca1326fecbe26d1f7c976f75e60522974de52,"ACT-60 more refactoring configuration, persistence and test",2010-07-29 17:41:42,tombaeyens,['modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/callactivity/CallActivityAdvancedTest.java']
Activiti/Activiti,https://github.com/Activiti/Activiti,79e316cac53c708635949453ef7c7f2c57fe76c3,b392f6c67677887ea08a7981befeaef93ec2e0e6,https://github.com/Activiti/Activiti/commit/79e316cac53c708635949453ef7c7f2c57fe76c3,"ACT-60 more refactoring configuration, persistence and test",2010-07-29 16:27:16,tombaeyens,"['modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/servicetask/JavaServiceTaskTest.java', 'modules/activiti-engine-test-cfg/src/test/java/org/activiti/test/service/RebootProcessEngineTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/callactivity/CallActivityAcvancedTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DeploymentPersistenceTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/db/EngineRebootProcessDefinitionCacheTest.java', 'modules/activiti-engine/src/test/java/org/activiti/engine/test/db/ProcessDefinitionPersistenceTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,1e2f72ff8969693ca469d50b97200b4386246a2f,3c4ccc4d1e4bd7b53369492b367501d3a436b4dc,https://github.com/Activiti/Activiti/commit/1e2f72ff8969693ca469d50b97200b4386246a2f,ACT-60 refactored configuration and test,2010-07-29 10:57:47,tombaeyens,"['modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/callactivity/CallActivityTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/event/timer/BoundaryTimerEventTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/expression/UelExpressionTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/gateway/ExclusiveGatewayTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/gateway/ParallelGatewayTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/receivetask/ReceiveTaskTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/scripttask/ScriptTaskTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/servicetask/JavaServiceTaskTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/FinancialReportProcessTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/taskassignee/TaskAssigneeTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/taskcandidate/TaskCandidateTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/taskforms/TaskFormsTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/variables/VariablesTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/StartToEndTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/callactivity/CallActivityTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/compatibility/BpmnBetaCompatibilityTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/event/timer/BoundaryTimerEventTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/gateway/ExclusiveGatewayTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/gateway/ParallelGatewayTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/property/PropertyTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/sequenceflow/ConditionalSequenceFlowTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/subprocess/SubProcessTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/usertask/TaskAssignmentExtensionsTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/processinstance/ProcessInstanceQueryTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/service/HistoricDataServiceTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/service/ProcessServiceTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/service/TaskServiceTest.java', 'modules/activiti-engine/src/test/java/org/activiti/impl/interceptor/DefaultCommandExecutorTest.java', 'modules/activiti-engine/src/test/java/org/activiti/test/history/HistoricDataServiceImplTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,021cce05aefff9d08ac0ebe30ffad67d9e14c7ca,0cec68ac9ee9b5d65d601dcab7907a1d698b68a8,https://github.com/Activiti/Activiti/commit/021cce05aefff9d08ac0ebe30ffad67d9e14c7ca,Fix for failing tests due to assertProcessInstanceEnded refactoring,2010-07-07 11:30:50,jbarrez,"['modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/FinancialReportProcessTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/taskassignee/TaskAssigneeTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/taskcandidate/TaskCandidateTest.java']"
Activiti/Activiti,https://github.com/Activiti/Activiti,0cec68ac9ee9b5d65d601dcab7907a1d698b68a8,94181d8a6029bb1bf6e3a74b5c7027f4231ebffb,https://github.com/Activiti/Activiti/commit/0cec68ac9ee9b5d65d601dcab7907a1d698b68a8,ACT-36: refactor postcondition test into an assertion,2010-07-07 10:19:27,dsyer,"['modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/gateway/ParallelGatewayTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/receivetask/ReceiveTaskTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/FinancialReportProcessTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/taskassignee/TaskAssigneeTest.java', 'modules/activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/taskcandidate/TaskCandidateTest.java', 'modules/activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/StartToEndTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,53dbc9bd5dbfb05a300b65197efd13b27c49b8c7,ff0410c81b5dfcc0b62ebb8051179a50df2ff397,https://github.com/camunda/camunda-bpm-platform/commit/53dbc9bd5dbfb05a300b65197efd13b27c49b8c7,"feat(engine): Add Additional Set Operations to Task Service

Main:

* Implementation of concrete commands each sets its corresponding property
* Parameterised Authorization & Multi-tenancy tests for each operation

Refactor:

* AbstractSetTaskPropertyCmd & AbstractAddIdentityLinkCmd parent classes encapsulate common logic for concrete commands
* Affected Set Task Operations for Properties: name, description, dueDate, followUpDate, owner, priority
* Affected Identity Operations: addGroup, addUser, assignTask, owner

Extra:

* New @RemoveAfter can be used in combination with EntityRemoveRule to remove all associated entities of the provided Domain Class. 

Supported Classes: Task, ProcessInstance, Deployment

Related to: #3154",2023-05-23 08:46:25,psavidis,"['engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/SetTaskPropertyAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/tenantcheck/MultiTenancySetTaskPropertyTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/tenantcheck/MultiTenancyTaskServiceCmdsTenantCheckTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/task/TaskServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/useroperationlog/UserOperationLogTaskTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,dece29344ea19786138598b177f45e8ac347bf3c,6bf82b2a3557fcdb3bae98538420daae8e4f7763,https://github.com/camunda/camunda-bpm-platform/commit/dece29344ea19786138598b177f45e8ac347bf3c,"feat(qa): adjust IT tests to better support was liberty


* Refactor the TelemetryConnectPluginTest to use wiremock-jre8-standalone instead of wiremock-standalone. The wiremock-standalone artifact is deprecated and not maintained. The test also includes a dependency on slf4j-jdk14 now. This is done no resolve a classloader issue in WAS Liberty.
* Move the transaction rollback test cases of the AsyncJobExecutionTest class into a separate class. These test cases cover a different engine behavior that varies across application servers.

Related to CAM-14741, CAM-14755, closes #1986",2022-08-26 14:07:36,Nikola Koevski,"['qa/integration-tests-engine/src/test/java/org/camunda/bpm/integrationtest/functional/telemetry/TelemetryConnectPluginTest.java', 'qa/integration-tests-engine/src/test/java/org/camunda/bpm/integrationtest/functional/transactions/AsyncJobExecutionTest.java', 'qa/integration-tests-engine/src/test/java/org/camunda/bpm/integrationtest/functional/transactions/AsyncJobExecutionWithRollbackTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,cf2eb837aa4eb6b1638ee90c8a288a758244e1b0,d97b75a00f2ae4073b5f5952e22fd75de246fac3,https://github.com/camunda/camunda-bpm-platform/commit/cf2eb837aa4eb6b1638ee90c8a288a758244e1b0,"fix(engine): correct flag in bpmn deployment tests


* The enableDuplicateFiltering flag was incorrectly refactored to true in most of the tests.
* In two new tests, the new deployment wasn't removed after the test completed.

related to CAM-14536, closes #1886",2022-04-25 08:22:39,Nikola Koevski,['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/deployment/BpmnDeploymentTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,ef304fc14535aa20f367e5e037ebfd4c493e4489,34dc4ace433da8bf8ca068d890f8331b87fbc3e7,https://github.com/camunda/camunda-bpm-platform/commit/ef304fc14535aa20f367e5e037ebfd4c493e4489,"feat(engine): dissable pessimistic locks

* Ensure process engine bootstrap is retriable;
* Add CRDB Retries tests;
* Add (CRDB) Serializable Transaction Isolation level tests;
* Fix failing tests (due to disabled pessimistic locks on CRDB)
* Refactor runtime code to get it review ready.

Related to CAM-12071, CAM-12232, CAM-12253",2020-08-04 15:56:25,Nikola Koevski,"['engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/AbstractMetricsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/JobExecutorMetricsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/batch/BatchMigrationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cockroachdb/CockroachDBRetriesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cockroachdb/CockroachDbExclusiveLockDisabledTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cockroachdb/CockroachSpecificBehaviorTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingExternalTaskFetchingTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingJobAcquisitionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingMessageCorrelationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingTransactionsOptimisticLockingTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentDeploymentTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentHistoryCleanupReconfigureTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentHistoryCleanupTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentHistoryCleanupUpdateOfFailingJobTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentHistoryLevelTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentInstallationIdInitializationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentJobExecutorTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentProcessEngineJobExecutorHistoryCleanupJobTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentTelemetryConfigurationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ThrowOleWhenDeletingExceptionStacktraceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/TransactionIsolationSerializableTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/partitioning/AbstractPartitioningTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/partitioning/CompetingHistoricAttachmentPartitioningTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/partitioning/CompetingHistoricByteArrayPartitioningTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/partitioning/CompetingHistoricVariableInstancePartitioningTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/partitioning/SkipHistoryOptimisticLockingExceptionsDisabledTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobAcquisitionBackoffTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobAcquisitionTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,57a8a31403eb5d30e9679865d9a15e843ec7613b,4358d191b55b9f6645986b37424a516893bf8fee,https://github.com/camunda/camunda-bpm-platform/commit/57a8a31403eb5d30e9679865d9a15e843ec7613b,"test(engine): refactor test suite into single tests

- Eclipse cannot detect the case that a test is also included in a
  suite, so it will run it twice, e.g. when we run an entire package;
  some tests with classrules will fail then
- wire mock tests must then use distinct ports so that Surefire can
  run them in parallel

related to CAM-12416",2020-09-17 08:54:19,Thorben Lindhauer,"['engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/telemetry/TelemetryMultipleEnginesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/telemetry/TelemetryReporterTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/telemetry/TelemetrySuiteTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/standalone/telemetry/TelemetryTaskWorkerMetricsTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,09f57f849ffbd83656f7f5940271a84b4918ca24,07900b4e6fb3df895ca14b1fdc9ba7d516b29089,https://github.com/camunda/camunda-bpm-platform/commit/09f57f849ffbd83656f7f5940271a84b4918ca24,"chore(test): improve test code and contribution docs

* Make the ConcurrencyTestHelper class independent of the Process Engine
  Configuration and Services;
* Extract the CMMN test helper methods in a separate class (CmmnTest).
* Refactor the ProvidedProcessEngineRule class: Move the cached Process Engine from the PluggableProcessEngineTestCase
  to the ProvidedProcessEngineRule.
* Remove unused CmmnProcessEngineTestCase class;
* Convert ProcessEngineBootstrapRule static initializers into lambdas.
* Update instructions on creating tests in CONTRIBUTING.md.

Related to CAM-12149",2020-07-20 14:12:03,Thorben Lindhauer,"['engine-plugins/spin-plugin/src/test/java/org/camunda/spin/plugin/variables/JsonSerializationWithValidationOnMultipleEnginesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/FormAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/VariableInstanceAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/externaltask/SetExternalTasksRetriesAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoricIdentityLinkLogAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoricTaskInstanceAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/UserOperationLogAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/task/HandleTaskAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cfg/DeploymentCacheCfgTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/filter/FilterAuthorizationsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/filter/FilterTaskQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/form/FormServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/BulkHistoryDeleteCmmnDisabledTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/BulkHistoryDeleteDmnDisabledTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryCleanupBatchWindowForEveryDayTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryCleanupBatchWindowForWeekDaysTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryCleanupDisabledOnBootstrapTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryCleanupDmnDisabledTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryCleanupHistoricBatchTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryCleanupTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerActivityInstancesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerAttachmentsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerAuthorizationsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerBatchesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerCommentsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerDecisionsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerDetailsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerExternalTaskLogsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerIdentityLinkLogsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerIncidentsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerJobLogTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerProcessInstancesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerTaskInstancesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerUserOperationLogsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerVariableInstancesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/IdentityServiceWithJdbcSimpleProcessingTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ActivityStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/MetricsDisabledTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyExecutionPropagationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyMigrationTenantProviderTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancySharedDefinitionPropagationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyDelegateCaseExecutionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/query/MultiTenancyCaseExecutionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/query/MultiTenancyCaseInstanceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancySharedDeploymentStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancySharedProcessDefinitionStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/history/MultiTenancySharedDecisionInstanceStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/suspensionstate/MultiTenancyProcessDefinitionSuspensionStateTenantIdProviderTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/CreateAndResolveIncidentTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/MessageCorrelationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstantiationWithVariablesInReturnTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/RuntimeServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationVariablesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/task/TaskServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/task/TaskServiceWithJdbcSimpleProcessingTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/variables/JavaSerializationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/async/AsyncAfterTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/async/AsyncTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/callactivity/CaseCallActivityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/compensate/CompensateEventHistoryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/compensate/CompensateEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/error/UnhandledBpmnErrorTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/escalation/EscalationEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/message/MessageIntermediateEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/signal/SignalEventPayloadTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/signal/SignalEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/timer/StartTimerEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/iomapping/InputOutputTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/job/JobPrioritizationBpmnExpressionValueTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/multiinstance/MultiInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/parse/GlobalRetryConfigurationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/CmmnTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/casetask/CaseTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/cmmn10/Cmmn10CompatibilityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/decisiontask/CmmnDecisionTaskResultMappingTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/decisiontask/DmnDecisionTaskResultListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/decisiontask/DmnDecisionTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/listener/CaseExecutionListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/listener/CaseInstanceListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/listener/VariableListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/processtask/ProcessTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/repetition/RepetitionRuleTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/sentry/SentryCombinedEntryAndExitCriteriaTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/sentry/SentryEntryCriteriaTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/sentry/SentryExitCriteriaTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/sentry/SentryInitializationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/sentry/SentryVariableOnPartEntryCriteriaTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/sentry/SentryVariableOnPartExitCriteriaTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/stage/AutoCompleteTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingHistoryCleanupAcquisitionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingMessageCorrelationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentHistoryCleanupReconfigureTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentHistoryCleanupUpdateOfFailingJobTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/dmn/feel/FeelEnableLegacyBehaviorConfigTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/DefaultHistoryEventHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricCaseActivityInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricCaseInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricVariableInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/DeploymentAwareJobExecutorForOracleTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/FailedJobListenerWithRetriesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobAcquisitionBackoffTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobAcquisitionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobDefinitionCreationAndDeletionWithParseListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobDefinitionCreationBothAsyncWithParseListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobDefinitionCreationWithParseListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobDefinitionDeletionWithParseListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobExecutorFollowUpTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobExecutorShutdownTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/ReuseEntityCacheTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/logging/ProcessDataLoggingContextTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/standalone/authentication/LoginAttemptsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/standalone/deploy/DeploymentAutoHistoryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/standalone/deploy/DeploymentTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/standalone/history/CustomHistoryLevelIdentityLinkTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/standalone/history/CustomHistoryLevelIncidentTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/standalone/history/CustomHistoryLevelUserOperationLogTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/standalone/history/CustomHistoryLevelWithoutUserOperationLogTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/standalone/initialization/ProcessEngineInitializationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/standalone/testing/ProcessEngineTestCaseTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/util/PluggableProcessEngineTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,402a3b4091f74b6f2d11a1c7a0c5d0d078844646,d79e3e5de416513200e3bc48b6343eb0e0ecda41,https://github.com/camunda/camunda-bpm-platform/commit/402a3b4091f74b6f2d11a1c7a0c5d0d078844646,"chore(engine): refactor junit3 test code to junit4

* Migrate junit3 helper methods to ProcessEngineTestRule methods;
* Port test classes to JUnit4;
* Add missing dependencies after porting (e.g. JUnit Asserts);
* Refactor test code to Java 8 syntax where possible.
* Migrate authorization tests: Call authorization super.setUp after test setUp
* Make JdbcStatementTimeoutTest work with junit4
* Make CompetingHistoryCleanupAcquisitionTest work with junit4
* Migrate JPAVariableTest to juint4
* Refactor concurrency tests;

Related to CAM-12149",2020-04-09 14:03:19,Nikola Koevski,"['engine/src/test/java/org/camunda/bpm/application/impl/context/ProcessApplicationContextTest.java', 'engine/src/test/java/org/camunda/bpm/application/impl/deployment/CmmnDisabledTest.java', 'engine/src/test/java/org/camunda/bpm/application/impl/deployment/DeploymentRegistrationTest.java', 'engine/src/test/java/org/camunda/bpm/application/impl/deployment/EmptyProcessesXmlTest.java', 'engine/src/test/java/org/camunda/bpm/application/impl/deployment/parser/ProcessesXmlParserTest.java', 'engine/src/test/java/org/camunda/bpm/application/impl/el/ProcessApplicationElResolverTest.java', 'engine/src/test/java/org/camunda/bpm/application/impl/embedded/EmbeddedProcessApplicationTest.java', 'engine/src/test/java/org/camunda/bpm/application/impl/event/ProcessApplicationEventListenerTest.java', 'engine/src/test/java/org/camunda/bpm/container/impl/deployment/jobexecutor/PlatformJobExecutorActivateTest.java', 'engine/src/test/java/org/camunda/bpm/container/impl/deployment/jobexecutor/StartManagedThreadPoolStepTest.java', 'engine/src/test/java/org/camunda/bpm/container/impl/jmx/deployment/BpmPlatformXmlLocationTest.java', 'engine/src/test/java/org/camunda/bpm/container/impl/jmx/deployment/util/VfsProcessApplicationScannerTest.java', 'engine/src/test/java/org/camunda/bpm/container/impl/jmx/kernel/MBeanServiceContainerTest.java', 'engine/src/test/java/org/camunda/bpm/container/impl/metadata/PropertyHelperTest.java', 'engine/src/test/java/org/camunda/bpm/container/impl/parser/BpmPlatformXmlParserTest.java', 'engine/src/test/java/org/camunda/bpm/engine/impl/batch/BatchInvocationsPerJobByBatchTypeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/impl/batch/builder/BatchCalculateTotalJobsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/impl/cfg/CompositeProcessEnginePluginTest.java', 'engine/src/test/java/org/camunda/bpm/engine/impl/runtime/DefaultDeserializationTypeValidatorTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/AbstractAsyncOperationsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/ActivityStatisticsAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/AuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/ConditionStartEventAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/DefaultUserPermissionNameForTaskCfgTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/DefaultUserPermissionsForTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/DelegationAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/DeleteProcessDefinitionAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/DeploymentAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/DeploymentStatisticsAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/DisabledPermissionsAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/EventSubscriptionAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/ExecutionAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/FormAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/GroupAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/IncidentAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/JobAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/JobDefinitionAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/ManagementAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/ProcessDefinitionAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/ProcessDefinitionStatisticsAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/ProcessInstanceAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/ResourceAuthorizationProviderTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/SchemaLogQueryAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/SingleProcessInstanceModificationAsyncAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/StandaloneTaskGetVariableAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskCountByCandidateGroupAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/VariableInstanceAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/batch/AbstractBatchAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/batch/BatchSuspensionAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/batch/DeleteBatchAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/batch/DeleteHistoricBatchAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/batch/DeleteHistoricProcessInstancesBatchAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/batch/DeleteProcessInstancesBatchAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/batch/HistoricBatchQueryAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/batch/SetJobRetriesBatchAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/batch/creation/removaltime/SetRemovalTimeForHistoricBatchesBatchAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/batch/creation/removaltime/SetRemovalTimeForHistoricDecisionInstancesBatchAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/batch/creation/removaltime/SetRemovalTimeForHistoricProcessInstancesBatchAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/deployment/RedeployDeploymentAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/dmn/DecisionDefinitionAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/dmn/EvaluateDecisionAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/externaltask/ExternalTaskQueryAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/externaltask/FetchExternalTaskAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/externaltask/GetErrorDetailsAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/externaltask/GetTopicNamesAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/externaltask/HandleExternalTaskAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/externaltask/SetExternalTaskPriorityAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/externaltask/SetExternalTaskRetriesAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/externaltask/UnlockExternalTaskAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/AuthorizationUserOperationLogTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/DeleteHistoricProcessInstancesAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoricActivityInstanceAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoricActivityStatisticsAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoricDecisionInstanceAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoricDecisionInstanceStatisticsAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoricDetailAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoricExternalTaskLogAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoricIdentityLinkLogAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoricIncidentAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoricJobLogAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoricProcessInstanceAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoricTaskInstanceAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoricVariableInstanceAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/HistoryCleanupAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/UserOperationIdTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/UserOperationLogAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/job/SetJobPriorityAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/job/SetJobRetriesAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/job/UpdateJobAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/jobdefinition/SetJobDefinitionPriorityAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/jobdefinition/SetJobDefinitionPriorityCascadeAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/migration/CreateMigrationPlanAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/migration/MigrateProcessInstanceAsyncTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/migration/MigrateProcessInstanceSyncQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/migration/MigrateProcessInstanceSyncTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/optimize/OptimizeServiceAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/task/getvariable/ProcessTaskReadVariablePermissionAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/task/getvariable/StandaloneTaskReadVariablePermissionAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cfg/DatabaseTablePrefixTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cfg/DatabaseTableSchemaTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cfg/DeploymentCacheCfgTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cfg/IdGeneratorDataSourceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cfg/PersistenceExceptionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cfg/SharedSqlSessionFactoryCfgTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cmmn/CaseServiceCaseInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cmmn/CaseServiceCaseTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cmmn/CaseServiceHumanTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cmmn/CaseServiceMilestoneTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cmmn/CaseServiceProcessTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cmmn/CaseServiceStageTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cmmn/CaseServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/context/DelegateExecutionContextTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/context/ProcessEngineContextTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/delegate/DelegateExecutionHierarchyTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskConditionsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskQueryByPriorityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/SetExternalTasksRetriesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/filter/FilterAuthorizationsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/filter/FilterQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/filter/FilterServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/filter/FilterTaskQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/form/BuiltInValidatorsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/form/FormDataTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/form/FormPropertyDefaultValueTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/form/HtmlFormEngineTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/BatchHistoricDecisionInstanceDeletionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/BulkHistoryDeleteCmmnDisabledTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/BulkHistoryDeleteDecisionInstancesAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/BulkHistoryDeleteDmnDisabledTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/BulkHistoryDeleteProcessInstancesAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/BulkHistoryDeleteTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/EnableHistoricInstancePermissionsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoricDecisionInstanceStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoricInstanceForCleanupQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryCleanupBatchWindowForEveryDayTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryCleanupBatchWindowForWeekDaysTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryCleanupDisabledOnBootstrapTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryCleanupDmnDisabledTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryCleanupTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryServiceAsyncOperationsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/AbstractRemovalTimeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/HistoricRootProcessInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/RemovalTimeStrategyConfigurationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/RemovalTimeStrategyEndTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/RemovalTimeStrategyStartTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/batch/BatchSetRemovalTimeHierarchicalTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/batch/BatchSetRemovalTimeNonHierarchicalTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/batch/BatchSetRemovalTimeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/batch/BatchSetRemovalTimeUserOperationLogTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/AbstractHistoryCleanupSchedulerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupRemovalTimeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerAuthorizationsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupStrategyConfigurationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/AdminUsersTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/AuthorizationQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/AuthorizationServiceAuthorizationsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/AuthorizationServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/AuthorizationServiceWithEnabledAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/DatabasePrefixHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/DefaultAuthorizationProviderTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/GroupQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/IdentityServiceAuthorizationsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/IdentityServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/PasswordHashingTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/UserQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/WriteMultipleEntitiesInOneTransactionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ActivateJobDefinitionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ActivateJobTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ActivityStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/DeploymentStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/IncidentTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/JobDefinitionPriorityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/JobDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/JobQueryByPriorityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/JobQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ManagementServiceTableCountTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ManagementServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ProcessDefinitionStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/SuspendJobDefinitionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/SuspendJobTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/AbstractMetricsIntervalTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/DecisionMetricsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/JobExecutorMetricsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/MetricsIntervalTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/MetricsIntervalTimezoneTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/telemetry/TelemetryReporterTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mock/MocksTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyBusinessRuleTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyCallActivityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyDecisionEvaluationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyDecisionTableEvaluationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyDelegateExecutionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyDelegateTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyExecutionPropagationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyFilterServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyMigrationAsyncTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyProcessInstantiationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancySharedDefinitionPropagationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancySingleProcessInstanceModificationAsyncTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyTaskCountByCandidateGroupTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyTaskServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/TenantIdProviderTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyCaseTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyCreateCaseInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyDecisionTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyDelegateCaseExecutionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyProcessTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/query/MultiTenancyCaseDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/query/MultiTenancyCaseExecutionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/query/MultiTenancyCaseInstanceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyBatchQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyDecisionDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyDeploymentQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyEventSubscriptionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyExecutionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyExternalTaskQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyIncidentQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyJobDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyJobQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyProcessDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyProcessInstanceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyTaskQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyVariableInstanceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/history/MultiTenancyHistoricBatchQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/history/MultiTenancyHistoricDecisionInstanceStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/history/MultiTenancyHistoricExternalTaskLogTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/history/MultiTenancyHistoricProcessInstanceStateTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/history/MultiTenancyHistoricVariableInstanceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/history/MultiTenancySharedDecisionInstanceStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/suspensionstate/MultiTenancyProcessDefinitionSuspensionStateTenantIdProviderTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/tenantcheck/MultiTenancyActivityCmdsTenantCheckTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/tenantcheck/MultiTenancyCaseInstanceCmdsTenantCheckTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/optimize/GetCompletedHistoricActivityInstancesForOptimizeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/optimize/GetCompletedHistoricProcessInstancesForOptimizeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/optimize/GetCompletedHistoricTaskInstancesForOptimizeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/optimize/GetHistoricDecisionInstancesForOptimizeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/optimize/GetHistoricIdentityLinkLogsForOptimizeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/optimize/GetHistoricOperationLogsForOptimizeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/optimize/GetHistoricVariableUpdatesForOptimizeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/optimize/GetRunningHistoricActivityInstancesForOptimizeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/optimize/GetRunningHistoricProcessInstancesForOptimizeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/optimize/GetRunningHistoricTaskInstancesForOptimizeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/queries/BoundedNumberOfMaxResultsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/BpmnModelInstanceCmdTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/CmmnModelElementInstanceCmdTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/DecisionDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/DeleteProcessDefinitionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/DeploymentQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/DmnModelElementInstanceCmdTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/ProcessDefinitionCandidateTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/ProcessDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/ProcessDefinitionSuspensionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/RepositoryServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/VersionTagTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/diagram/ProcessDiagramParseTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/diagram/ProcessDiagramRetrievalTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/BatchModificationHistoryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/BatchRestartAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/BatchUpdateSuspensionStateAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/CaseExecutionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/CaseInstanceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/CreateAndResolveIncidentAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/CreateAndResolveIncidentTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/EventSubscriptionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ExecutionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/IncidentQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/MessageCorrelationByLocalVariablesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/MessageCorrelationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ModificationExecutionAsyncTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ModificationExecutionSyncTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ModificationUserOperationLogTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/NestedExecutionAPIInvocationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationAsyncTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationBoundaryEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationCancellationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationEventSubProcessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationHistoryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationMultiInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceQueryOrTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceSuspensionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstantiationAtActivitiesHistoryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstantiationAtActivitiesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstantiationAtStartEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstantiationWithVariablesInReturnTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,e6d4a5ca73d2241ace1b7b9b1d5113ba36c51f84,cdc03c77b4c56117247afb3d5497e38d25a2f4f6,https://github.com/camunda/camunda-bpm-platform/commit/e6d4a5ca73d2241ace1b7b9b1d5113ba36c51f84,"chore(engine): replace PluggableProcessEngineTestCase

* Replace PluggableProcessEngineTestCase with a test (source) class.
  This will allow us to do larger changes to the base Test class without
impacting users that may be using the Runtime class.
* Refactor test classes that use the runtime class with the new test
  class.

Related to CAM-12149",2020-02-28 14:24:34,Nikola Koevski,"['engine/src/test/java/org/camunda/bpm/application/impl/context/ProcessApplicationContextTest.java', 'engine/src/test/java/org/camunda/bpm/application/impl/deployment/DeploymentRegistrationTest.java', 'engine/src/test/java/org/camunda/bpm/application/impl/el/ProcessApplicationElResolverTest.java', 'engine/src/test/java/org/camunda/bpm/application/impl/embedded/EmbeddedProcessApplicationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/impl/batch/BatchInvocationsPerJobByBatchTypeConfigTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/AuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/history/UserOperationIdTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cfg/PersistenceExceptionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cmmn/CaseServiceCaseInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cmmn/CaseServiceCaseTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cmmn/CaseServiceHumanTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cmmn/CaseServiceMilestoneTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cmmn/CaseServiceProcessTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cmmn/CaseServiceStageTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/cmmn/CaseServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/delegate/DelegateExecutionHierarchyTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskQueryByPriorityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/filter/FilterAuthorizationsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/filter/FilterQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/filter/FilterServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/filter/FilterTaskQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/form/BuiltInValidatorsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/form/FormDataTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/form/FormPropertyDefaultValueTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/form/HtmlFormEngineTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/BulkHistoryDeleteTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerActivityInstancesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerAttachmentsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerBatchesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerCommentsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerDecisionsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerDetailsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerExternalTaskLogsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerIdentityLinkLogsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerIncidentsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerJobLogTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerProcessInstancesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerTaskInstancesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerUserOperationLogsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupSchedulerVariableInstancesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/AuthorizationQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/AuthorizationServiceAuthorizationsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/AuthorizationServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/AuthorizationServiceWithEnabledAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/DefaultAuthorizationProviderTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/GroupQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/IdentityServiceAuthorizationsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/IdentityServiceUserOperationLogTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/UserQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ActivateJobDefinitionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ActivateJobTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ActivityStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/DeploymentStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/IncidentTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/JobDefinitionPriorityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/JobDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/JobQueryByPriorityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ManagementServiceTableCountTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ManagementServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ProcessDefinitionStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/SchemaLogQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/SuspendJobDefinitionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/SuspendJobTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/JobExecutorMetricsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyBusinessRuleTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyCallActivityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyDecisionEvaluationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyDecisionTableEvaluationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyDelegateExecutionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyDelegateTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyExecutionPropagationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyFilterServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyProcessInstantiationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyTaskServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyCaseTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyCreateCaseInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyDecisionTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyDelegateCaseExecutionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyProcessTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/query/MultiTenancyCaseDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/query/MultiTenancyCaseExecutionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/query/MultiTenancyCaseInstanceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyDecisionDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyDeploymentQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyEventSubscriptionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyExecutionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyExternalTaskQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyIncidentQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyJobDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyJobQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyProcessDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyProcessInstanceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyTaskQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyVariableInstanceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/tenantcheck/MultiTenancyDecisionRequirementsDefinitionCmdsTenantCheckTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/BpmnModelInstanceCmdTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/CmmnModelElementInstanceCmdTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/DeploymentQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/DmnModelElementInstanceCmdTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/ProcessDefinitionSuspensionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/RepositoryServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/VersionTagTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/CaseExecutionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/CaseInstanceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/EventSubscriptionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ExecutionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/IncidentUserOperationLogTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/MessageCorrelationByLocalVariablesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationAsyncTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationBoundaryEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationCancellationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationEventSubProcessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationHistoryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationMultiInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceQueryByLeafInstancesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceQueryOrTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceSuspensionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstantiationAtActivitiesHistoryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstantiationAtActivitiesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstantiationAtStartEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/SingleProcessInstanceModificationAsyncTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/VariableInTransactionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/VariableInstanceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/SetProcessDefinitionVersionCmdTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/task/DelegateTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/task/StandaloneTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/task/SubTaskQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/task/SubTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/task/TaskIdentityLinksTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/task/TaskQueryDisabledAdhocExpressionsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/task/TaskQueryOrTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/task/TaskQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/task/TaskVariablesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/variables/AbstractVariableIgnoreCaseTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/variables/ExecutionVariablesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/variables/FileValueProcessSerializationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/variables/ImplicitVariableUpdateTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/variables/ModifyVariableInSameTransactionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/variables/scope/TargetVariableScopeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/StartToEndTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/async/AsyncAfterTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/async/AsyncCallActivityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/async/AsyncEndEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/async/AsyncStartEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/async/AsyncTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/async/FoxJobRetryCmdEventsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/async/FoxJobRetryCmdTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/authorization/StartAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/callactivity/CallActivityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/common/AbstractProcessEngineServicesAccessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/deployment/BpmnDeploymentTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/el/ExpressionManagerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/IntermediateNoneEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/compensate/CompensateEventHistoryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/compensate/CompensateEventOrderTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/compensate/CompensateEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/end/EndEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/end/MessageEndEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/end/SignalEndEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/end/TerminateEndEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/error/BoundaryErrorEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/error/ErrorEventSubProcessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/escalation/EscalationActivityInstanceTreeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/escalation/EscalationEventSubprocessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/escalation/EscalationEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/link/LinkEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/message/MessageBoundaryEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/message/MessageEventSubprocessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/message/MessageIntermediateThrowEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/message/MessageNonInterruptingBoundaryEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/message/MessageStartEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/signal/SignalEventDeploymentTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/signal/SignalEventExpressionNameTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/signal/SignalEventReceivedBuilderTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/timer/BoundaryTimerEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/timer/IntermediateTimerEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/timer/StartTimerEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/timer/TimeExpressionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/timer/TimerRecalculationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/timer/UpdateDuedateOnRecurringTimerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/exclusive/ExclusiveCatchEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/exclusive/ExclusiveEndEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/exclusive/ExclusiveStartEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/exclusive/ExclusiveTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/exclusive/ExclusiveThrowEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/exclusive/ExclusiveTimerEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/executionlistener/ExecutionListenerBpmnModelExecutionContextTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/external/ExternalTaskParseTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/gateway/EventBasedGatewayTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/gateway/ExclusiveGatewayTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/gateway/InclusiveGatewayTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/gateway/ParallelGatewayTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/iomapping/InputOutputEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/iomapping/InputOutputTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/job/DefaultJobPrioritizationBpmnTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/job/DisabledJobPrioritizationBpmnTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/job/JobPrioritizationBpmnConstantValueTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/job/JobPrioritizationBpmnExpressionValueTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/multiinstance/MultiInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/parallel/ParallelTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/parse/FoxFailedJobParseListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/property/PropertyTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/receivetask/ReceiveTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/ruletask/RuleTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/scripttask/ExternalScriptTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/scripttask/ScriptTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/sendtask/SendTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/sequenceflow/ConditionalScriptSequenceFlowTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/sequenceflow/ConditionalSequenceFlowTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/sequenceflow/DefaultSequenceFlowTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/sequenceflow/SequenceFlowTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/sequenceflow/UncontrolledFlowTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/servicetask/ExpressionServiceTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/servicetask/JavaServiceTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/servicetask/MethodExpressionServiceTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/servicetask/ServiceTaskBpmnModelExecutionContextTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/servicetask/ServiceTaskClassDelegateActivityBehaviorTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/servicetask/ServiceTaskDelegateExpressionActivityBehaviorTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/servicetask/ServiceTaskExpressionActivityBehaviorTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/servicetask/ServiceTaskVariablesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/shell/ShellTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/subprocess/InterruptingEventSubProcessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/subprocess/SubProcessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/subprocess/transaction/TransactionSubProcessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/tasklistener/CustomTaskAssignmentTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/usertask/InitiatorTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/usertask/TaskAssigneeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/usertask/TaskAssignmentExtensionsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/usertask/TaskCandidateTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/usertask/TaskDueDateExtensionsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/usertask/TaskFollowUpDateExtensionsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/usertask/TaskPriorityExtensionsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/usertask/UserTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/activation/ManualActivationRuleTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/deployment/CmmnDeployerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/listener/CaseExecutionListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/listener/VariableListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/milestone/MilestoneTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/tasklistener/TaskListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CancelAcquiredJobTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingActivityInstanceCancellationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingByteVariableAccessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingCompleteTaskSetVariableTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingExternalTaskFetchingTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingForkTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingHistoryCleanupAcquisitionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingJobAcquisitionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingJoinTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingLicenseKeyAccessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingMessageCorrelationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingParentCompletionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingProcessCompletionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingSentrySatisfactionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingSignalsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingSubprocessCompletionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingSuspensionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingTransactionsOptimisticLockingTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingVariableFetchingAndDeletionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrencyTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentDeploymentTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentHistoryCleanupReconfigureTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentHistoryCleanupTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentHistoryLevelTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentProcessEngineJobExecutorHistoryCleanupJobTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ConcurrentVariableUpdateTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/DbDeadlockTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/JdbcStatementTimeoutTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/ThrowOleWhenDeletingExceptionStacktraceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/concurrency/partitioning/AbstractPartitioningTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/dmn/businessruletask/DmnBusinessRuleTaskResultMappingTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/dmn/businessruletask/DmnDecisionResultListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricActivityInstanceSequenceCounterTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricActivityInstanceStateTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricActivityInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricActivityStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricBatchManagerBatchesForCleanupTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricIdentityLinkLogQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricIdentityLinkLogTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricIncidentTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricProcessInstanceDurationReportTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricProcessInstanceManagerProcessInstancesForCleanupTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricProcessInstanceQueryOrTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricTaskInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricTaskInstanceUpdateTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricVariableInstanceScopeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricVariableInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/dmn/HistoricDecisionInstanceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/dmn/HistoricDecisionInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/useroperationlog/AbstractUserOperationLogTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,d79eca64b2d0ca55dc9e9113ff06ea9b555e8706,3ccbc0ccc18aec76cdcad18bb7c248c0aba1899e,https://github.com/camunda/camunda-bpm-platform/commit/d79eca64b2d0ca55dc9e9113ff06ea9b555e8706,chore(engine): refactor junit3 to junit 4 tests,2020-04-22 14:16:04,Nikola Koevski,"['engine/src/test/java/org/camunda/bpm/engine/test/api/repository/ProcessApplicationDeploymentTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/RedeploymentTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,f09166cb5a3d1df958bf2686617c153e4e228b8f,72014551dd6e82aca8dcb598f6b9150969b3c37d,https://github.com/camunda/camunda-bpm-platform/commit/f09166cb5a3d1df958bf2686617c153e4e228b8f,"feat(engine): add new pricing model metrics (#791)

- executed decision instances (dmn tables and literal expressions)
- root process instances (i.e. instances not started by call activity)
- refactors involved tests from JUnit 3 to 4

related to CAM-11186",2020-04-29 13:49:35,Nikola Koevski,"['engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/AbstractMetricsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/ActivityInstanceCountMetricsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/DecisionMetricsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/ExecutedDecisionElementsMetricsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/JobExecutorMetricsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/MetricsDisabledTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/MetricsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/metrics/RootProcessInstanceMetricsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/standalone/db/entitymanager/PurgeDatabaseTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,9f01e6f4e1d39d537872fc81354aac7e5f1c95b6,46484a1892dacb4b7dc877ee1be8abfa62f072eb,https://github.com/camunda/camunda-bpm-platform/commit/9f01e6f4e1d39d537872fc81354aac7e5f1c95b6,"fix(engine): timer jobs are executed on time

* Fix bug that executes Timer jobs whose DueDate is earlier than the sum of the Current Time and the JobExecutor wait time. Only jobs that have a DueDate past, or equal, to the current time, should be executed immediately.
* Refactor test to JUnit4.

Related to CAM-8724",2020-03-17 16:08:06,Nikola Koevski,"['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/timer/BoundaryTimerNonInterruptingEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobAcquisitionBackoffIdleTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,022e1de4fe6b1e4fa53eb654212ac90d3ddb0287,46770b846e2fb27f376b1164e4a0bd65b23acc3f,https://github.com/camunda/camunda-bpm-platform/commit/022e1de4fe6b1e4fa53eb654212ac90d3ddb0287,"fix(spring-boot): refactor license key config

* Remove existing, explicit db code and use an Engine API Command to enter the License key;
* Remove redundant tests.

Related to CAM-10591",2019-08-13 09:23:31,Nikola Koevski,['spring-boot-starter/starter/src/test/java/org/camunda/bpm/spring/boot/starter/configuration/impl/custom/EnterLicenseKeyConfigurationTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,a01f3e47a1dc4a9bd752dec9e246e0a69c582af9,eac96560cbb484b6c2da93e9f656d2a7811e0467,https://github.com/camunda/camunda-bpm-platform/commit/a01f3e47a1dc4a9bd752dec9e246e0a69c582af9,"feat(engine): add customizable resource deployments

* Refactor the custom implementation of the ProcessEngineConfiguration since it doesn't set the  property when a Process Engine is build. This results in an NPE when the custom resource deployment is added.
* fix db table prefix test

Related to CAM-10258, Closes  PR (#428)",2019-08-12 05:49:49,Nikola Koevski,"['engine/src/test/java/org/camunda/bpm/engine/test/api/cfg/DatabaseTablePrefixTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/ProcessApplicationDeploymentTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/deployment/BpmnDeploymentTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,cad57fb872f6c38f748b669b298d4f28c2cbafb0,e15086c16b5c01db03019e798ac1c48315cd58f5,https://github.com/camunda/camunda-bpm-platform/commit/cad57fb872f6c38f748b669b298d4f28c2cbafb0,"chore(engine): refactor standalone task test

* Set required history level and clean up historic task data on the `testCompleteStandaloneTaskWithVariablesInReturn`. The ProcessEngineRule isn't configured to automatically cascade cleanup on Standalone Tasks, so this needs to be done manually.

Related to CAM-9398",2019-03-28 13:30:29,Nikola Koevski,['engine/src/test/java/org/camunda/bpm/engine/test/api/task/TaskServiceTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,2b706f89f842fae93146a5e4e0321b101c0c3935,6d0ca3626a4de467970cc832726c919b58ab4e5f,https://github.com/camunda/camunda-bpm-platform/commit/2b706f89f842fae93146a5e4e0321b101c0c3935,"chore(engine): refactor test assertion to ignore milliseconds

* The MySQL DueDate timestamp doesn't have millisecond accurracy, so current time comparisons fail.

Related to CAM-9924",2019-03-13 13:53:34,Nikola Koevski,['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/timer/BoundaryTimerNonInterruptingEventTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,c48e6fe5fcd0f9445c41dee9682b5ba1d3bf2315,3d273c173c2c9692d0562d39dc46a7f8c1977360,https://github.com/camunda/camunda-bpm-platform/commit/c48e6fe5fcd0f9445c41dee9682b5ba1d3bf2315,"fix(engine): refactor parser config code

* Add additional XXE Parsing test;
* Exclude tests classes from upgrade test

Related to CAM-9657",2019-02-26 16:10:50,Nikola Koevski,['engine/src/test/java/org/camunda/bpm/engine/test/api/repository/diagram/ProcessDiagramParseTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,65ebccf1db70bbab3e47529e6abb3609dce3188c,84a5b53202baf7645d5eb8bc46e06b2a91390f7c,https://github.com/camunda/camunda-bpm-platform/commit/65ebccf1db70bbab3e47529e6abb3609dce3188c,"fix(engine): refactor job acquisition related tests

* Refactor arguments in the assertEquals statements to be in the proper order;
* Remove un-needed Job Suspension state test.

Related to CAM-9581",2019-01-29 16:01:40,Nikola Koevski,"['engine/src/test/java/org/camunda/bpm/engine/test/api/history/BatchHistoricDecisionInstanceDeletionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/JobQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/BatchModificationHistoryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ModificationExecutionAsyncTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/RestartProcessInstanceAsyncTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/batch/BatchMigrationHistoryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/batch/BatchMigrationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/signal/SignalEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricJobLogTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobAcquisitionSuspensionStateTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobExecutorAcquireJobsByTypeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobExecutorAcquireJobsDefaultTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,162fddef483855e04063369a36e196b1f3afa08d,1fd72ff4b29082a3770ef3bff37344d289ae89ff,https://github.com/camunda/camunda-bpm-platform/commit/162fddef483855e04063369a36e196b1f3afa08d,"fix(webapps): add mutex to session object

* Add Mutex object to Session in order to be able to consistently synchronize on session;
* Refactor CsrfPreventionFilter Token generation logic;
* Use session synchronization on csrf token generation to prevent concurrently generated tokens;
* Revert changes to CsrfPreventionFilterTest and UserAuthenticationResourceTest.

Related to CAM-9304",2018-10-22 07:23:17,Nikola Koevski,"['webapps/src/test/java/org/camunda/bpm/webapp/impl/security/auth/UserAuthenticationResourceTest.java', 'webapps/src/test/java/org/camunda/bpm/webapp/impl/security/filter/CsrfPreventionFilterTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,400ec6cb4ee7219f2ea7a57d4e7851cf3ee64eb1,9de8f4bf6cc44f27170d49fd7609b428ffeb7018,https://github.com/camunda/camunda-bpm-platform/commit/400ec6cb4ee7219f2ea7a57d4e7851cf3ee64eb1,"chore(engine): clean&refactor cleanable historic report classes&tests

* Parameterize CleanableHistoric[Process|Decision]InstanceReportTest classes to cover hierarchical and non-hierarchical configurations;
* Remove unnecessary  method in CleanableHistoric[Process|Decision]InstanceReport classes, it is filtered according to the ProcessEngineConfiguration property.

Related to CAM-9273",2018-09-10 11:05:18,Nikola Koevski,"['engine/src/test/java/org/camunda/bpm/engine/test/history/CleanableHistoricDecisionInstanceReportTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/CleanableHistoricProcessInstanceReportTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,907024bc883bf0d371519fedf49a86f6fa4a89dc,8558cfd93f8be100a7f0bc50e2e8c6feb3d530e4,https://github.com/camunda/camunda-bpm-platform/commit/907024bc883bf0d371519fedf49a86f6fa4a89dc,"feat(history): add hierarchical history cleanup mechanism

* Utilise new ROOT_PROCESS_INSTACE_ID and REMOVAL_TIME_ (ACT_HI_PROCINST) attributes to implement the new mechanism;
* Add a  (flag) property to the ProcessEngineConfiguration to switch between mechanism;
* Refactor HistoryCleanupTest class to use Parametarized class in order to test both mechanisms;
* Refactor HPI removal time tests. Remove second TTL update statement;
* Add test case to confirm old and new cleanup mechanism functionality.

Related to CAM-9203",2018-07-27 14:07:28,Nikola Koevski,"['engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryCleanupTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricProcessInstanceTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,47d25d465041a721ca74cf9b788331790a80a734,e35de056e12228cd38aa56683da3cece9ac54711,https://github.com/camunda/camunda-bpm-platform/commit/47d25d465041a721ca74cf9b788331790a80a734,"chore(engine): add root proc inst id to historic proc inst

* Introduce hierarchical stricture to Historic Process Instances by adding a 'ROOT_PROCESS_INSTANCE_ID_' attribute to the appropriate table;
* Index new db attribute;
* Add rootProcessInstanceId property to HistoricProcessInstanceEventEntity, getter/setter
* Update insert query and resultMap for HistoricProcessInstance
* Refactor root id insertion on HPI event creation
* Add test case to validate rootProcessInstanceId property functionality
* Add tests to cover all cases of a HPI hierarchy

Related to CAM-9199",2018-07-17 11:01:31,Nikola Koevski,['engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricProcessInstanceTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,3db2f8b4b41f35bd135b15345d007863a1d0a8c0,20f870077c9376f826501765c563efdcf215ef1f,https://github.com/camunda/camunda-bpm-platform/commit/3db2f8b4b41f35bd135b15345d007863a1d0a8c0,"chore(engine): refactor tenant whitelist pattern tests

* Split custom tenant whitelist pattern into two tests for wider coverage. One for tenant creation and one for tenant update.

Related to CAM-9109",2018-07-10 13:30:19,Nikola Koevski,['engine/src/test/java/org/camunda/bpm/engine/test/api/identity/IdentityServiceTenantTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,7ece0ba8de4c299007b0b7a3acef2ee7a39f08cd,69a5b1755777a28a24053e9723521e003df32fae,https://github.com/camunda/camunda-bpm-platform/commit/7ece0ba8de4c299007b0b7a3acef2ee7a39f08cd,"fix(engine): add whitelist regex pattern matching for resource ids

* Reverts commit 92d2efc
* Refactor resource whitelist patterns code;
* Refactor test cases.

Related to CAM-9109",2018-07-02 11:43:55,Nikola Koevski,"['engine/src/test/java/org/camunda/bpm/engine/test/api/identity/IdentityServiceTenantTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/identity/IdentityServiceTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,e48c7c8809148ea69a9ad4e4cacbee2d43b973cd,1b7188319c9562a539e5917b3499b997ebff5c8f,https://github.com/camunda/camunda-bpm-platform/commit/e48c7c8809148ea69a9ad4e4cacbee2d43b973cd,"chore(model): refactor isStartableInTasklist attribute

* configure default value to true
* rename methods
* add it to Fluent Model Builder + tests
* change tests to test false behaviour

Related to CAM-9146",2018-06-18 12:18:45,Yana Vasileva,"['model-api/bpmn-model/src/test/java/org/camunda/bpm/model/bpmn/CamundaExtensionsTest.java', 'model-api/bpmn-model/src/test/java/org/camunda/bpm/model/bpmn/builder/ProcessBuilderTest.java', 'model-api/bpmn-model/src/test/java/org/camunda/bpm/model/bpmn/instance/ProcessTest.java', 'model-api/bpmn-model/src/test/java/org/camunda/bpm/model/bpmn/instance/camunda/CompatabilityTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,af9737d4be8af89898e7903b7193e871f31afd6d,1a80ba1c92efa376aa1dec642687fdcbf8b97f5e,https://github.com/camunda/camunda-bpm-platform/commit/af9737d4be8af89898e7903b7193e871f31afd6d,"chore(client): refactor backoff strategy tests

* Replace relative assertions of backoff times with implementation specific values
* Add a test case for maximum backoff time

Related to CAM-8978",2018-05-03 13:15:55,Nikola Koevski,['clients/java/client/src/test/java/org/camunda/bpm/client/backoff/ExponentialBackoffStrategyTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,b8e993d2bd93641e6cc2b48d90793c6a8f096311,f5fc1ce021d9d732bad5de628ce343e4ae4dd500,https://github.com/camunda/camunda-bpm-platform/commit/b8e993d2bd93641e6cc2b48d90793c6a8f096311,"feat(client): implement default backoff strategy

* Make topic subscription manager thread safe
* Refactor existing backoff strategy implementation
* Add an exponential backoff strategy implementation as a default
backoff strategy
* Add test cases for the exponential strategy implementation

Related to CAM-8978",2018-04-27 07:58:23,Nikola Koevski,"['clients/java/src/test/java/org/camunda/bpm/client/backoff/ExponentialBackoffStrategyTest.java', 'clients/java/src/test/java/org/camunda/bpm/client/variable/DateValueMapperTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,0a9e02aabe6c6916b23ef04a081f401eed9b2d16,ef28e9d5a6442177cb624ad259308025fd281cac,https://github.com/camunda/camunda-bpm-platform/commit/0a9e02aabe6c6916b23ef04a081f401eed9b2d16,"chore(variables): minor test case code refactoring

Related to CAM-9011",2018-04-30 13:22:55,Nikola Koevski,"['engine-plugins/spin-plugin/src/test/java/org/camunda/spin/plugin/variables/JsonSerializationTest.java', 'engine-plugins/spin-plugin/src/test/java/org/camunda/spin/plugin/variables/JsonValueTest.java', 'engine-plugins/spin-plugin/src/test/java/org/camunda/spin/plugin/variables/XmlSerializationTest.java', 'engine-plugins/spin-plugin/src/test/java/org/camunda/spin/plugin/variables/XmlValueTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/variables/JavaSerializationTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,8a916e02da112a8c2b1d45340cf33e51e16b9ed5,1512378e09385596811b4db384dfc63a4c16cbec,https://github.com/camunda/camunda-bpm-platform/commit/8a916e02da112a8c2b1d45340cf33e51e16b9ed5,"feat(engine): add event subscription recreation

after process definition deletion:
* by deployment
* by id/s
* by key

+ un-ignore tests for conditional start event
+ small refactoring of delete signal process instance

Related to CAM-8666",2018-04-25 15:21:23,Roman,"['engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/tenantcheck/MultiTenancyStartProcessInstanceByConditionCmdTenantCheckTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/conditional/ConditionalStartEventTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,85a47dd14c47d7902de54c477b8c84583e1e671d,9c03691ed191539e7102ecf140fab840ce1f081f,https://github.com/camunda/camunda-bpm-platform/commit/85a47dd14c47d7902de54c477b8c84583e1e671d,"chore(engine-rest): refactor top level pi test cases

Related to CAM-8974",2018-04-20 13:05:11,Nikola Koevski,['engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceQueryTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,adb2046c342fa756957318920867411ea3cb1375,576b34134f3382455b96fc905bb7d07cc6c634d4,https://github.com/camunda/camunda-bpm-platform/commit/adb2046c342fa756957318920867411ea3cb1375,"chore(client): refactor backoff strategy implementation

* Change interface and method names
* Resume client operation on new topic subscription
* Add test case for resumed client operation on new topic subscription

Related to CAM-8834",2018-04-16 09:59:12,Nikola Koevski,['clients/java/client/src/test/java/org/camunda/bpm/client/ExternalTaskClientTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,abff1d6799db4aa0e6564d5827210fd508593770,22749d12e54f3c9eb35c8d0ca05e44d00420a683,https://github.com/camunda/camunda-bpm-platform/commit/abff1d6799db4aa0e6564d5827210fd508593770,"feat(engine): remove history service usage in signal payload test cases

* Refactor code in Signal Payload test cases to use the RuntimeService to retrieve variables instead of the HistoryService. Build Tests using a no history level fail when using the HistoryServise.

Related to CAM-8820",2018-03-15 09:05:42,Nikola Koevski,['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/signal/SignalEventPayloadTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,d3a843f805789237e735b4f4e6e566cd4fe1845b,591a9eb2a21e6abf565a62c837aacc1dd0d72e42,https://github.com/camunda/camunda-bpm-platform/commit/d3a843f805789237e735b4f4e6e566cd4fe1845b,"feat(engine): add payload feature to signal event

* Add test cases for signal payload feature
* Update parsing method for throwing signal event XML tags
* Include payload insertion in process instance and execution (signal) start
* Refactor parsing code for unused elements

Related to CAM-8820",2018-03-09 16:54:09,Nikola Koevski,['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/signal/SignalEventPayloadTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,671cade6fb6e552202ce0ba43df6cb8d74d67cc1,c9d44761e24916af2038fb93e6997f875f5e1acb,https://github.com/camunda/camunda-bpm-platform/commit/671cade6fb6e552202ce0ba43df6cb8d74d67cc1,"fix(security): update mail tests for commons-email 1.5

* Refactor 'from' message formats in mail tests with new commons-email (1.5) formatting

Related to CAM-8277",2018-03-06 15:12:04,Nikola Koevski,"['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/mail/EmailSendTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/mail/EmailServiceTaskTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,357888a0df4dc82ff62f0ca28dd368529a1c3173,c4262e67c2a49a573e0a30939655f678f1d06e3f,https://github.com/camunda/camunda-bpm-platform/commit/357888a0df4dc82ff62f0ca28dd368529a1c3173,"fix(engine): update checking logic on insert/update optimistic locking

* Add a more robust check of the original exception message
* Refactor referencing entities method to behave as defined
* Remove unused Exception generating methods
* Forward OptimisticLockingException to existing handler method
* Ignore test cases on PostgreSQL db usage, current architecture doesn't allow for a proper check to be performed

Related to CAM-8306

(cherry picked from commit 74de339)",2018-02-28 16:31:34,Nikola Koevski,['engine/src/test/java/org/camunda/bpm/engine/test/concurrency/CompetingTransactionsOptimisticLockingTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,53f720effd081c25447d7d8774a42cefb31a61b4,a30ed3c0d5127f6342c6a6faac58fda758b15576,https://github.com/camunda/camunda-bpm-platform/commit/53f720effd081c25447d7d8774a42cefb31a61b4,"chore(engine): update variable filter in external task query

* Remove variableValueFilter flag throughout the corresponding classes
* Refactor the corresponding SQL select query
* Add additional test cases

Related to CAM-8721",2018-02-08 10:55:48,Nikola Koevski,['engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskQueryTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,d7db4162bac250acb241fbb53a07e85ebb7cac0f,55acee051eb22d70c8b34d2081cc85f682d2fe54,https://github.com/camunda/camunda-bpm-platform/commit/d7db4162bac250acb241fbb53a07e85ebb7cac0f,"feat(engine): add process variable filter to external task querying

* Add Process Variable Value filtering to fetchAndLock External Task querying method
* Refactor querying code to add flexibility and accept multiple filter parameters (able to accommode BusinessKey filter as well)
* Add a test for this new feature of the Java API

Related to CAM-8721, CAM-8722",2018-02-06 10:39:54,Nikola Koevski,['engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskQueryTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,9983a6be7fbda24b4e771170b52dc22a436951ee,fc0c139f7ff6d6b215d337a4ee09fa5a7bbcccf5,https://github.com/camunda/camunda-bpm-platform/commit/9983a6be7fbda24b4e771170b52dc22a436951ee,"test(spring-boot): refactor to be able to run process application integration tests

Related with CAM-8117",2017-10-04 15:58:52,Svetlana Dorokhova,['spring-boot-starter/starter/src/test/java/org/camunda/bpm/spring/boot/starter/util/it/GetAnnotatedBeanTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,09176570f7f23ce471ab636116aa168087c27b6c,d29f105665f62405e47ec79e769506eb7fa9f52d,https://github.com/camunda/camunda-bpm-platform/commit/09176570f7f23ce471ab636116aa168087c27b6c,"fix(engine): refactor incremental->retry intervals

* remove the property from the model
* move parsing logic to process engine configuration impl
* create new structure to keep the retry configuration
* adjust the test cases

Related to CAM-8088",2017-08-31 15:10:15,Yana Vasileva,"['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/parse/FoxFailedJobParseListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/parse/RetryIntervalsConfigurationTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,7e9dd9df5392594135d55a6875b0b1e6faac6d25,5e412b2f7c7ce08dfde989fb906dd2cf5b117e17,https://github.com/camunda/camunda-bpm-platform/commit/7e9dd9df5392594135d55a6875b0b1e6faac6d25,"feat(engine): introduce global retry configuration

-provide default global retry conf.
-no need for enabling the retry configuration anymore
-rename Fox* related classes to Default*
-add new test
-refactor the existing engine configurations

Related to CAM-8087",2017-08-16 10:57:02,Yana Vasileva,"['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/parse/FoxFailedJobParseListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/parse/GlobalRetryConfigurationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/FailedJobListenerWithRetriesTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,0948d7ff4131c868f103f9b5bd060708adb77729,5442419ad72ea3dc44a75905250964858ccdb133,https://github.com/camunda/camunda-bpm-platform/commit/0948d7ff4131c868f103f9b5bd060708adb77729,"fix(test): refactor cascade deletion of executions to avoid StackOverflowError

Related with #CAM-8005",2017-07-06 09:05:41,Svetlana Dorokhova,['engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/RuntimeServiceTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,1a4f07a6537aa5da36f466488ee04aafc2074db8,d1a3ff03a695cd07d45cd0eef4fa8711258f5cbc,https://github.com/camunda/camunda-bpm-platform/commit/1a4f07a6537aa5da36f466488ee04aafc2074db8,"chore(fluent-builder): refactor compensation handler builder code

- reduce code duplication
- add additional information to exception messages
- add tests for invalid API calls

related to CAM-7682",2017-05-29 11:58:36,Sebastian Menski,['model-api/bpmn-model/src/test/java/org/camunda/bpm/model/bpmn/builder/ProcessBuilderTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,2e83ad91913199f529c1ca4893157e26ad312c97,09ad3daaeb2aea42531e5b5ec566a8c24e6ae311,https://github.com/camunda/camunda-bpm-platform/commit/2e83ad91913199f529c1ca4893157e26ad312c97,"test(engine): test refactored

Related with #CAM-7541",2017-04-25 13:08:27,Svetlana Dorokhova,['engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoryCleanupOnEngineStartTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,0010c4e7280315b179c88df1d27bda0c51118075,8ddd047ed992085c07eab700e93afd7cd2b5da2e,https://github.com/camunda/camunda-bpm-platform/commit/0010c4e7280315b179c88df1d27bda0c51118075,"refactor(history): make historic external task log tests more robust

* to timestamp ordering

related to #CAM-6750",2017-01-06 10:22:29,Johannes Heinemann,"['engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricExternalTaskLogQuerySortingTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricExternalTaskLogTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,9a2765a627c65a4a7177ccc53c6e36a82a28cb0c,94d3597bcadf14b7883dd7ed09b139c1ff445d52,https://github.com/camunda/camunda-bpm-platform/commit/9a2765a627c65a4a7177ccc53c6e36a82a28cb0c,"fix(batch): refactor test

related to #CAM-7115",2016-12-08 08:10:55,Johannes Heinemann,['engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/RuntimeServiceAsyncOperationsTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,f1c95fe5dd657332f8383fd3ea62729d9e78fcd5,25dc628c7bcb6de897ba353e78b6d05c3293298f,https://github.com/camunda/camunda-bpm-platform/commit/f1c95fe5dd657332f8383fd3ea62729d9e78fcd5,"test(engine): refactor parametrization

- makes parameterized tests more readable by more logic in the tests and
  less ping-pong between test method and test parameter
- un-parameterize tests where parametrization makes things more
  complicated (i.e. where two out of four cases require specific handling
  anyway)

related to CAM-6795",2016-11-21 12:43:51,Thorben Lindhauer,"['engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrateEventSubProcessAndTriggerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationActiveEventSubProcessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationBoundaryEventsParameterizedTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationBoundaryEventsTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,25dc628c7bcb6de897ba353e78b6d05c3293298f,206cce9b98fc02f5d5a9c25de1dd64d41eabf0b1,https://github.com/camunda/camunda-bpm-platform/commit/25dc628c7bcb6de897ba353e78b6d05c3293298f,"fix(engine): trigger cond event on start at activity

 * create test cases for cond boundary and event sub processes
 * fix problem with starting sub process which is not triggered on start at activity
 * refactor conditional event test cases
 * refactor callback classes and replace with Callback interface
 * refactor test cases which test on multiple task names

 related to #CAM-6942",2016-11-21 11:40:46,Christopher Zell,"['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/conditional/BoundaryConditionalEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/conditional/ConditionalEventTriggeredByExecutionListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/conditional/EventSubProcessStartConditionalEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/conditional/MixedConditionalEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/conditional/TriggerConditionalEventFromDelegationCodeTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,30d59d2e27fbd562faebf0df73073343ab2abeff,f82bff0f7947c47e0fb822735c643b281e0c3f22,https://github.com/camunda/camunda-bpm-platform/commit/30d59d2e27fbd562faebf0df73073343ab2abeff,"fix(engine): refactor conditional migration tests

 * created new base classes which are used by the new parameterized test
 classes
 * throw exception if updateEventTriggers are not used on conditional
 events
 * on map equal activities flag is set automaticly",2016-11-18 15:05:40,Christopher Zell,"['engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrateEventSubProcessAndTriggerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationActiveEventSubProcessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationBoundaryEventsParameterizedTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationBoundaryEventsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationEventSubProcessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationPlanGenerationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationWithoutTriggerConditionTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,f9110461aa9525e01e0b66c553edce25d31941cb,953769d43083fe4fb6d173d4e3e6506fba925820,https://github.com/camunda/camunda-bpm-platform/commit/f9110461aa9525e01e0b66c553edce25d31941cb,"feat(engine): migrate cond event subscription

 * add test cases for cond boundary and event sub process events
 * add test to update condition
 * refactor migrating boundary event tests
 * refactor migration event sub process test

 related to #CAM-6795",2016-11-11 13:03:33,Christopher Zell,"['engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrateEventSubProcessAndTriggerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationActiveEventSubProcessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationBoundaryEventsParameterizedTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationBoundaryEventsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationEventSubProcessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationNestedEventSubProcessTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,f9bcd2acbc7dc52dbb7e41ac614036ce3f8cc25a,2c5e6b1c4d3b7024c6aabbfb7c7b506e84f8f64a,https://github.com/camunda/camunda-bpm-platform/commit/f9bcd2acbc7dc52dbb7e41ac614036ce3f8cc25a,"fix(engine): variable setting in delegate code triggers cond. event

 * Implementation:
 ** Define new states of an execution: Starting, Execute, Ending
 ** In this states the variables are delayed
 ** Process instance collects delayed events
 ** After every state, collected events are dispatched
 ** Dispatching of variable events can trigger conditional events
 ** New atomic operation LEAVE which is called after the state Execute and the dispatching of the events.
 ** If a PI is suspended and a variable will trigger a cond. event an exception is thrown.
 ** Move dispatching of variable events in PvmExecutionImpl
 ** fixed bug on which conditional events are trigged on execution on state starting
 ** moved condition, which checks state, from boundary to execution walker
 ** On dispatching the activity instance id and activity id is saved and
 ** checked after a variable event is dispatched. If they change next
 ** operation like leave is not executed or next variable event is ignored.
 ** Dispatch call before atomic operation transition create scope is called

 * Test cases:
 ** add test cases which sets variable on delegated code in model which have event sub process or boundary events
 ** add test cases for variable in delegate code
 ** add test case for input mapping on sub processes
 ** add test case for input mapping
 ** add test for output mapping of tasks
 ** add test for start listeners
 ** add test for take execution listener
 ** add test for end listeners
 ** add test for mi and call activity
 ** add test delegate code in sub process
 ** add test for call activity output mapping
 ** add test case for start listener of sub process in boundary test class
 ** add test case for take listener and async before of following activity
 ** add test class for mixed processes
 ** add test cases for each conditional event and suspended processes
 ** add test cases with synchronious events
 ** add test for in/out mapping of call activities
 ** Create abstract base class for test classes, which ends PI's after a test

 * Refactoring:
 ** move test of set variable in execution listener in parameterized test class
 ** created new test class for conditions with var events

 related to #CAM-6862",2016-10-13 07:15:41,Christopher Zell,"['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/conditional/BoundaryConditionalEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/conditional/ConditionalEventTriggeredByExecutionListenerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/conditional/ConditionalEventWithSpecificVariableEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/conditional/EventSubProcessStartConditionalEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/conditional/IntermediateConditionalEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/conditional/MixedConditionalEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/property/PropertyTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,a78f0131f0b430c885022b0546e435a41f089e93,018b152a8a131ed3f52662e3e39b3e419b9528d4,https://github.com/camunda/camunda-bpm-platform/commit/a78f0131f0b430c885022b0546e435a41f089e93,"test(engine): refactor test to execute specific jobs

related to #CAM-6664",2016-09-06 14:52:24,Askar Akhmerov,['engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/RuntimeServiceAsyncOperationsTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,6fc3b7a9718f40c7089c97aea076dd4ffec28ba2,2c851dae40ea8ac93c8a9cc1fb904a0f1de114c4,https://github.com/camunda/camunda-bpm-platform/commit/6fc3b7a9718f40c7089c97aea076dd4ffec28ba2,"feat(engine): add batch API for process instances deletion

* add failing tests and interface method definition
* add initial implemenation of command
* add initial implementation of jobs creation
* add authorization test
* refactor job handler class to be a bit more generic

related to #CAM-6664",2016-09-01 14:30:35,Askar Akhmerov,"['engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/batch/DeleteProcessInstancesBatchAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/RuntimeServiceAsyncOperationsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/RuntimeServiceTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,41541a20a75f9bcc18488d08935b8bb9b60b4bce,5e72d24f3274e0244e98240bd5aabb639d40b595,https://github.com/camunda/camunda-bpm-platform/commit/41541a20a75f9bcc18488d08935b8bb9b60b4bce,"feat(dmn): write history for decision literal expressions

* remove null constraint for outputs and inputs
* map the result of the expression  to an output instance
* refactor dmn history tests

related to #CAM-6442",2016-08-02 11:36:00,Philipp Ossler,"['engine/src/test/java/org/camunda/bpm/engine/test/history/dmn/HistoricDecisionInstanceDecisionServiceEvaluationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/dmn/HistoricDecisionInstanceInputOutputValueTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/dmn/HistoricDecisionInstanceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/dmn/HistoricDecisionInstanceTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,23b97b7f3467dc8e6cf2e8772eb8d4e5228d3f8e,ac8a1f73c2f5dd71796c622c9e8e1473db82ea35,https://github.com/camunda/camunda-bpm-platform/commit/23b97b7f3467dc8e6cf2e8772eb8d4e5228d3f8e,"chor(engine): refactor test to not use inheritance

related to #CAM-5284",2016-07-13 14:39:25,Askar Akhmerov,"['engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/externaltask/GetErrorDetailsAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/externaltask/HandleExternalTaskAuthorizationReadOnlyTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,60d3daa47afcfb8e7abbb402496b618c02063822,884e44b5fa3f667c7ae234b9d1996c146a4f5593,https://github.com/camunda/camunda-bpm-platform/commit/60d3daa47afcfb8e7abbb402496b618c02063822,"feat(engine): query decision requirement definitions

* create an entity for decision requirement definitions (drd)
* create a query for decision requirement definitions
* create a separate deployer for drd
* the dmn (decision) deployer uses the result of the drd deployer to
avoid duplicated parsing
* add a reference from decision to drd
* override the drd transformer from the dmn engine
* refactor and extend the redeployment test
* add sql scripts

related to #CAM-6235",2016-06-24 13:25:14,Philipp Ossler,"['engine/src/test/java/org/camunda/bpm/application/impl/deployment/DeploymentRegistrationTest.java', 'engine/src/test/java/org/camunda/bpm/application/impl/deployment/RedeploymentRegistrationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/dmn/DecisionRequirementDefinitionAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyDecisionRequirementDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/DecisionRequirementDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/dmn/deployment/DmnDeployerTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,61203c0ffb8d65a56a97dcd497c67ebaf982e497,7390ceb383d2d76f8ad29f802aa4c35b1ef899a1,https://github.com/camunda/camunda-bpm-platform/commit/61203c0ffb8d65a56a97dcd497c67ebaf982e497,"chore(ldap): upgrade apacheDS from 1.5.5 to 2.0.0-M21

 * adjust the test enviroment to the new API
 * remove unnecessary log dependencies
 * fix failing test cases after ldap dependency upgrade
 * refactor test cases

 related to #CAM-6147",2016-06-01 14:21:00,Christopher Zell,"['engine-plugins/identity-ldap/src/test/java/org/camunda/bpm/identity/impl/ldap/LdapDisableAuthorizationCheckTest.java', 'engine-plugins/identity-ldap/src/test/java/org/camunda/bpm/identity/impl/ldap/LdapGroupQueryTest.java', 'engine-plugins/identity-ldap/src/test/java/org/camunda/bpm/identity/impl/ldap/LdapIdentityProviderTest.java', 'engine-plugins/identity-ldap/src/test/java/org/camunda/bpm/identity/impl/ldap/LdapUserQueryTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,22bb3f8e56a16789d4ee2e1355f809dfda09a922,5ddeb18e8d2a6008cd02d133d18c3cd6d034e18e,https://github.com/camunda/camunda-bpm-platform/commit/22bb3f8e56a16789d4ee2e1355f809dfda09a922,"chore(engine/tasks): refactor task default permissions

- use named exception through ConfigurationLogger
- explicitly only support UPDATE and TASK_WORK
- simplify initialization logic in config
- cleanup tests
- do not build new process engine for each test which is not closed

related to #CAM-5866",2016-05-09 10:08:35,Daniel Meyer,"['engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/DefaultAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/DefaultTaskPermissionsCfgTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/DefaultTaskPermissionsForUserTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,a814f05064b1ee205af28f7eefa74e09e85685ce,9a2e1cad042dc627025c51a5f646648aedd028c6,https://github.com/camunda/camunda-bpm-platform/commit/a814f05064b1ee205af28f7eefa74e09e85685ce,chore(engine): refactor batch deletion after test method,2016-05-04 12:25:56,Sebastian Menski,"['engine/src/test/java/org/camunda/bpm/engine/test/api/history/HistoricBatchQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/BatchQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/BatchStatisticsQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyBatchTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyMigrationAsyncTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/MultiTenancyBatchQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/history/MultiTenancyHistoricBatchQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/batch/BatchMigrationHistoryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/batch/BatchMigrationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/batch/BatchMigrationUserOperationLogTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobExecutorBatchTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,9a1a7a616b3e7a6a87c659565342bdb49d250986,0286fc4f0fef12474a71348fe895f8e1009f4b76,https://github.com/camunda/camunda-bpm-platform/commit/9a1a7a616b3e7a6a87c659565342bdb49d250986,"chore(engine/test): refactor tests to JUnit 4

- add processEngineConfiguration to ProcessEngineRule

related to #CAM-5745",2016-04-25 09:19:38,Kristin Polenz,"['engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/suspensionstate/MultiTenancyJobDefinitionSuspensionStateTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/suspensionstate/MultiTenancyJobSuspensionStateTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/suspensionstate/MultiTenancyProcessDefinitionSuspensionStateTenantIdProviderTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/suspensionstate/MultiTenancyProcessDefinitionSuspensionStateTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/suspensionstate/MultiTenancyProcessInstanceSuspensionStateTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,fa228e273fc0e43be2142d3883345ff73770d2de,e5be486ca7e3b054ef0f971169a798daf372e04c,https://github.com/camunda/camunda-bpm-platform/commit/fa228e273fc0e43be2142d3883345ff73770d2de,"chore(wildfly/subsystem): allow to configure thread pool

- refactor and clean up subsystem attribute usage
- add attributes for thread pool configuration
- update schema for subsystem
- add tests for thread pool configuration
- deprecate thread-pool-name element
- add thread pool configuration to assembly/distro/qa standalone
  configs
- remove deprecated thread-pool-name element

related to #CAM-5596",2016-04-18 15:20:56,Christian Lipphardt,"['distro/wildfly/subsystem/src/test/java/org/camunda/bpm/container/impl/jboss/test/BpmPlatformSubsystemTest.java', 'distro/wildfly/subsystem/src/test/java/org/camunda/bpm/container/impl/jboss/test/JBossSubsystemXMLTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,9770039494adbb28beece5a680c93e8e998180dd,d675075b9798b4da1f13a547fbf44e3dcb79c01a,https://github.com/camunda/camunda-bpm-platform/commit/9770039494adbb28beece5a680c93e8e998180dd,"chore(engine/test): refactor job acquisition tests to reuse process engine

related to #CAM-5713",2016-04-14 13:48:31,Sebastian Menski,"['engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/AbstractJobExecutorAcquireJobsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobExecutorAcquireJobsByDueDateNotPriorityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobExecutorAcquireJobsByDueDateTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobExecutorAcquireJobsByPriorityAndDueDateTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobExecutorAcquireJobsByPriorityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobExecutorAcquireJobsByTypeAndDueDateTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobExecutorAcquireJobsByTypeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/JobExecutorAcquireJobsDefaultTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,039b46b5efc9e954246e6928851fbcb9f19c4dd3,be6182be82beb123d556f5f555c7358af1a93bb9,https://github.com/camunda/camunda-bpm-platform/commit/039b46b5efc9e954246e6928851fbcb9f19c4dd3,"refactor(wildfly/subsystem): make it fully compatible with WF8/10.

- refactor parsing and marshalling of the XML
- use provided AttributeDefinitions from Wildfly for improved validation during parsing/marshalling
- add tests for minimal and every option used.

related to #CAM-5737",2016-04-13 07:56:07,Christian Lipphardt,"['distro/wildfly/subsystem/src/test/java/org/camunda/bpm/container/impl/jboss/test/BpmPlatformSubsystemTest.java', 'distro/wildfly/subsystem/src/test/java/org/camunda/bpm/container/impl/jboss/test/JBossSubsystemXMLTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,fa7073727eda8c13f064be119b670594b0d6de82,4d7c33d567567e0c0727e954fd55942e854e136f,https://github.com/camunda/camunda-bpm-platform/commit/fa7073727eda8c13f064be119b670594b0d6de82,"improve(externalTask/prio): follow review hints for ext task prios

 * add new test cases for priority expr and invalid prio
 * refactor priority provider - add provider to process cfg
 * removed dead code, unused variables and useless assertions
 * add prio to locked external task dto

 related to #CAM-5394",2016-04-12 14:40:09,Christopher Zell,"['engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskQueryByPriorityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskServiceTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,8262d1cdab35db294a1b6f06c2f6a9a0bcbda70a,65134b8f57d4addc8a3297ffbe7261a0b3e05fa4,https://github.com/camunda/camunda-bpm-platform/commit/8262d1cdab35db294a1b6f06c2f6a9a0bcbda70a,"chore(test/mt): refactor/clean up code

- move cmmn multitenancy test cases to new cmmn folder
- move method 'deploymentForTenant(String, ClassPath, BpmnModelInstance)' to
  AbstractProcessEngineTestCase
- merge createCaseInstance and start*Task method to make the code easier

related to #CAM-5415",2016-04-05 10:44:31,Kristin Polenz,"['engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyBusinessRuleTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyCallActivityTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/TenantIdProviderTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyCaseTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyCreateCaseInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyDecisionTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyDelegateCaseExecutionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/cmmn/MultiTenancyProcessTaskTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/cmmn/MultiTenancyCaseDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/cmmn/MultiTenancyCaseExecutionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/query/cmmn/MultiTenancyCaseInstanceQueryTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,7393fdf4495011c267b0142a49deb43480835c99,a29fa458d31925420383b0501e6441d9f4e4db14,https://github.com/camunda/camunda-bpm-platform/commit/7393fdf4495011c267b0142a49deb43480835c99,"feat(engine): add boundary event migration

- allows to remove and migrate boundary events
- refactor migrating scope/non-scope activity instances
- refactor test classes and add test helper like ModifiableBpmnModelInstance
  and ProcessInstanceSnapshot

related to #CAM-5355 and #CAM-5400",2016-02-11 17:02:57,Sebastian Menski,"['engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/AbstractMigrationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationAddBoundaryEventsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationAddScopesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationBoundaryEventsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationEventSubProcessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationFlipScopesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationHorizontalScopeChangeTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationPlanCreationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationPlanGenerationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationRemoveBoundaryEventsTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationRemoveScopesTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/migration/MigrationSameScopesTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,2476f2d3bbf2255b67f1a8b2ca45bd1c4e633677,65a0c079dd9d55bc7e2d6064d2560e65586d2ac9,https://github.com/camunda/camunda-bpm-platform/commit/2476f2d3bbf2255b67f1a8b2ca45bd1c4e633677,chore(bpmn): refactor test assertions,2016-02-10 10:54:59,Sebastian Menski,['model-api/bpmn-model/src/test/java/org/camunda/bpm/model/bpmn/builder/ProcessBuilderTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,e3b2c03f7e64793a8ee3dd3edb5b585b7e695b5e,18229f382ee3e5a493dd0369dd992aeb0170c9f0,https://github.com/camunda/camunda-bpm-platform/commit/e3b2c03f7e64793a8ee3dd3edb5b585b7e695b5e,"feat(engine): query Variable Instances by Tenant-Id

- adjust the SQL scripts
- extend the query + entity
- inherit the tenant-id from execution (no tasks, no case executions)
- extend the REST API
- refactor multi-tenancy test cases

related to #CAM-5194",2016-01-29 14:11:11,Philipp Ossler,"['engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/VariableInstanceRestServiceInteractionTest.java', 'engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/VariableInstanceRestServiceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/AbstractMultiTenancyQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyDeploymentQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyExecutionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyProcessDefinitionQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyProcessInstanceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyPropagationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyRepositoryServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyRuntimeServiceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/multitenancy/MultiTenancyVariableInstanceQueryTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,cb360bd37e22634e8e1de6207bc6f1f65875ec11,cc678bb7fe281971adb5ed8a3235b3c517867141,https://github.com/camunda/camunda-bpm-platform/commit/cb360bd37e22634e8e1de6207bc6f1f65875ec11,"chore(engine): refactor engine API and internal structure

- align and explicit naming
- minimize public API
- do not rely on Ids from the XML as they are optional
- remove test classes from src except for DmnEngineRule
- clean up logging
- rename FeelEngineProvider to FeelEngineFactory
- fail if output name not set for compound output
- fail if output name is used multiple times
- fail if decisions, inputs, outputs or rules do not have an id

related to #CAM-4896, #CAM-4814",2015-11-06 15:00:19,Sebastian Menski,"['engine-dmn/engine/src/main/java/org/camunda/bpm/dmn/engine/test/DmnDecisionTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/DmnEngineMetricCollectorTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/DmnResultTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/EvaluateDecisionTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/ParseDecisionTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/api/DmnEngineApiTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/api/DmnEngineMetricCollectorTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/api/DmnResultTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/api/EvaluateDecisionTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/api/EvaluationApiTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/api/ParseDecisionTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/delegate/DmnDecisionTableEvaluationListenerTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/el/ExpressionLanguageTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/el/FeelIntegrationTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/el/FeelTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/hitpolicy/CollectResultValueTypeTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/hitpolicy/HitPolicyTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/listener/DmnDecisionTableListenerTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/test/DmnEngineTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/transform/DmnTransformTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/type/CustomDataTypeTransformerRegistryTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/type/DataTypeTransformerIntegrationTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/type/DmnDataTypeTransformerTest.java', 'engine-dmn/engine/src/test/java/org/camunda/bpm/dmn/engine/type/TypedValueDecisionTest.java', 'engine-dmn/feel-juel/src/test/java/org/camunda/bpm/dmn/feel/impl/FeelEngineTest.java', 'engine-dmn/feel-juel/src/test/java/org/camunda/bpm/dmn/feel/impl/FeelExceptionTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,02754d914c5cd861b324c0ea1cf4a5944ebd5228,2b7ffbfd92849f09b8ca1345feb8f4fc24c074cf,https://github.com/camunda/camunda-bpm-platform/commit/02754d914c5cd861b324c0ea1cf4a5944ebd5228,"refactor(migration-test): project structure

- there is one module per previous camunda version that
  - sets up the db or migrates to its schema version
  - creates some process instance for testing
- there is one module for the current camunda version that
  contains test cases for all the scenarios set up by the other modules
- makes it possible to write migration tests that span more than one
  version
- makes it possible to retain migration tests after bumping the current
  camunda version

related to CAM-4354",2015-10-20 15:08:23,Thorben Lindhauer,"['qa/test-db-instance-migration/test-migration/src/test/java/org/camunda/bpm/qa/upgrade/ScenarioUnderTest.java', 'qa/test-db-instance-migration/test-migration/src/test/java/org/camunda/bpm/qa/upgrade/scenarios/OneTaskProcessScenarioTest.java', 'qa/test-db-instance-migration/test-migration/src/test/java/org/camunda/bpm/qa/upgrade/scenarios/sentry/SentryScenarioTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,cf1a52e2d159d6342ab0f5ea1d0d2ac1519bb691,fcde89ac1df69ec7e34f05cbcf8b299561821378,https://github.com/camunda/camunda-bpm-platform/commit/cf1a52e2d159d6342ab0f5ea1d0d2ac1519bb691,"chore(engine): refactor transaction subprocess tests

- avoids broken cases due to CAM-3604

related to CAM-3604 CAM-4285",2015-08-04 16:38:53,Thorben Lindhauer,"['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/compensate/CompensateEventHistoryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/subprocess/transaction/TransactionSubProcessTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,1e895439801ef9243ee7ffaaf65990fc9f619048,11a188f9bddc9024c79884ab3a2d30bcba449674,https://github.com/camunda/camunda-bpm-platform/commit/1e895439801ef9243ee7ffaaf65990fc9f619048,"chore(engine): add javadoc, test and refactor abstract deployer

- add missing javadoc
- add deployment test for "".dmn"" suffix
- refactor abstract deployer to prevent bpmn deployer from
  overwriting logic

related to #CAM-4216",2015-07-29 11:32:21,Sebastian Menski,['engine/src/test/java/org/camunda/bpm/engine/test/dmn/deployment/DmnDeployerTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,60e41edfb4f9661ec9a470ae4b6f8e6bf54875f9,36a8281d3f1e33fc3a0b102d0fe4fd0d997e5f7f,https://github.com/camunda/camunda-bpm-platform/commit/60e41edfb4f9661ec9a470ae4b6f8e6bf54875f9,"fix(qa): fix test after DMN refactoring

related to #CAM-4218",2015-07-29 11:23:17,Sebastian Menski,['qa/integration-tests-engine/src/test/java/org/camunda/bpm/integrationtest/functional/scriptengine/DmnScriptEngineSupportTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,fd8a1b6ca5f82397e06e8ad1e47d57aaefac8972,8694fe235572d86774efa044f50f34bfa3f8c5ec,https://github.com/camunda/camunda-bpm-platform/commit/fd8a1b6ca5f82397e06e8ad1e47d57aaefac8972,"fix(engine): authorization check for ManagementService#setJobPriority

- adds infrastructure for parameterized authorization tests
- refactors job definition authorization tests for setting priorities

related to CAM-4164",2015-07-09 11:25:16,Thorben Lindhauer,"['engine/src/test/java/org/camunda/bpm/engine/test/authorization/JobDefinitionAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/authorization/job/SetJobPriorityAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/authorization/jobdefinition/SetJobDefinitionPriorityAuthorizationTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/authorization/jobdefinition/SetJobDefinitionPriorityCascadeAuthorizationTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,fca40c811a2e3c0cdd60ec7026f845aacb790f03,aed48cdbbe526879e5e2e6ce8abea6dd5fb0db4b,https://github.com/camunda/camunda-bpm-platform/commit/fca40c811a2e3c0cdd60ec7026f845aacb790f03,"test(engine): refactor composite history event handler test

- save and reset original history event handler instead
  of creating new engines for every test method
- remove unused deployments for constructor tests

related to #CAM-2716",2015-07-09 08:32:41,Sebastian Menski,"['engine/src/test/java/org/camunda/bpm/engine/test/history/AbstractCompositeHistoryEventHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/CompositeDbHistoryEventHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/CompositeHistoryEventHandlerTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,79a20cdf26c24cc369d6c30b74695f8c8cd0f0a0,e1c9feb301855de01a82e5f65218c6f2d8b3ed24,https://github.com/camunda/camunda-bpm-platform/commit/79a20cdf26c24cc369d6c30b74695f8c8cd0f0a0,"chore(test): refactor variable in test cases

related to #CAM-4019, #CAM-4087",2015-06-26 09:26:34,Sebastian Menski,['engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceModificationTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,af5d256f8943b5ce46eb8665bc3085349542177e,86cb4b8447da8965d9b2b31feb8e9a2bf30b946e,https://github.com/camunda/camunda-bpm-platform/commit/af5d256f8943b5ce46eb8665bc3085349542177e,"test(engine): check deletion of correct executions

-it could happen that execution listeners were called with the wrong
executions, this was fixed by the multi instance refactoring
-extend the RuntimeServiceTest to check start and end events and see if
the activity instance ids and execution ids are the same

Related to CAM-3571",2015-06-04 14:36:29,Ronny Bräunlich,['engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/RuntimeServiceTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,194f8aaaf02400112839db070cf8366f1d255a73,a7908793b3277a51097a75604d35c77ffe34fea3,https://github.com/camunda/camunda-bpm-platform/commit/194f8aaaf02400112839db070cf8366f1d255a73,"test(engine-cdi): add test for cdi events during multi instance

-the CdiEventListener would crash with an NPE when trying to create
events for multi instance activities this was fixed with the
MultiInstance refactoring (CAM-3455)
-the test confirms this

Related to CAM-2897",2015-05-19 08:43:05,Ronny Bräunlich,['engine-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/impl/event/EventNotificationTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,462d5c1bc6b067fddf5c1eb6d685264874b76104,06261ab4659b30dc123b6c352bd77339227c647c,https://github.com/camunda/camunda-bpm-platform/commit/462d5c1bc6b067fddf5c1eb6d685264874b76104,"fix(engine-test): refactor log operation handling

It was decided that we only log JobDefinition and ProcessDefinition
without cascading.

Related to: #CAM-3555",2015-03-17 16:10:57,Stefan Hentschel,"['engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ActivateJobDefinitionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/ActivateJobTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/JobQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/SuspendJobDefinitionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/SuspendJobTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/repository/ProcessDefinitionSuspensionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/OperationLogQueryTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,b7266c1fb454af85929d3de6c70ea777e9b32f45,207d33183ca28ca4e0497307c876639281109913,https://github.com/camunda/camunda-bpm-platform/commit/b7266c1fb454af85929d3de6c70ea777e9b32f45,"chore(engine): code cleanup / test refactoring

related to CAM-2629",2014-09-29 08:45:07,Thorben Lindhauer,"['engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractTaskRestServiceQueryTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/api/task/TaskQueryExpressionTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,207d33183ca28ca4e0497307c876639281109913,8e4a63195d0331fb6a52a86cd2c4649553a9607a,https://github.com/camunda/camunda-bpm-platform/commit/207d33183ca28ca4e0497307c876639281109913,chore(engine): refactor test to be deterministic,2014-09-29 07:19:24,Sebastian Menski,['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/multiinstance/MultiInstanceTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,3e932b201a92137b9dc36a9e3aa2b54cdb474540,7a0fd5f0bddb16444b07046abd0a2d7feaf5f9c1,https://github.com/camunda/camunda-bpm-platform/commit/3e932b201a92137b9dc36a9e3aa2b54cdb474540,"chore(engine): cleanup Persistence SPI refactoring

- remove unused DbSchemeManager
- use selectById in CaseDefinitionManager
- add note that databaseSchemeUpgrade now always returns an
  empty string
- reenable test assertions

related to #CAM-2602",2014-08-18 09:10:44,Sebastian Menski,['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/receivetask/ReceiveTaskTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,9771eb53b1c18ec9c86c977b75ada746c7463b0a,83058747516a7bbd66e48e42e5215f49e6cc5ef6,https://github.com/camunda/camunda-bpm-platform/commit/9771eb53b1c18ec9c86c977b75ada746c7463b0a,"refactor(engine/test): case execution listener registration

related to CAM-2239",2014-08-06 09:37:37,Thorben Lindhauer,"['engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/CasePlanModelExecutionListenerHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/CasePlanModelHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/CaseTaskPlanItemExecutionListenerHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/CaseTaskPlanItemHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/HumanTaskDicretionaryItemExecutionListenerHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/HumanTaskDicretionaryItemHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/HumanTaskPlanItemExecutionListenerHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/HumanTaskPlanItemHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/ProcessTaskPlanItemExecutionListenerHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/ProcessTaskPlanItemHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/StageDiscretionaryItemExecutionListenerHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/StageDiscretionaryItemHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/StagePlanItemExecutionListenerHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/StagePlanItemHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/TaskPlanItemExecutionListenerHandlerTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/cmmn/handler/TaskPlanItemHandlerTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,9cfd26bdecdf44834ae18ce2e4a016914c908847,2790a7f5408d22bbab1d9737a977d4b8a3896210,https://github.com/camunda/camunda-bpm-platform/commit/9cfd26bdecdf44834ae18ce2e4a016914c908847,"refactor(engine/test): fix test naming

related to #CAM-2028",2014-03-24 10:21:20,Sebastian Menski,"['engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricVariableInstanceTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/standalone/history/FullHistoryTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,55f4018459f797591f64a61cec27965c35d7ca9e,2fa0c3442535847ae57f050f0baac833320428f7,https://github.com/camunda/camunda-bpm-platform/commit/55f4018459f797591f64a61cec27965c35d7ca9e,"refactoring(engine-cdi): Rename task form bean

- rename taskForm bean from 'camunda.taskForm' to 'camundaTaskForm' to fix
  IBM Websphere problems
- 'camunda.taskForm' bean exists only for compatibility like 'fox.taskForm'
- adjust testcase

related to #CAM-1698",2014-03-18 08:34:07,kristin polenz,['engine-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/jsf/TaskFormTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,1e8f96ae03d514b4539799e7934b3a245122f84b,33fd119809ed0fd2465f102dbda6046ac1ac7d4c,https://github.com/camunda/camunda-bpm-platform/commit/1e8f96ae03d514b4539799e7934b3a245122f84b,refactor(ProcessEngineTestCase): rename historicDataService in historyService,2014-03-14 15:10:34,Falko Menge,['engine/src/test/java/org/camunda/bpm/engine/test/standalone/testing/ActivitiTestCaseTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,e3ac74b589fe35df211e73ca177db242c264b062,8d2f3dd5a19d83c493803a3b5ba5521a2686c50e,https://github.com/camunda/camunda-bpm-platform/commit/e3ac74b589fe35df211e73ca177db242c264b062,"refactor(test): remove redundant initialization of variables map

The variables map is initialized twice. So both statements can
be merged.

related to #CAM-1773",2014-02-24 14:09:53,Sebastian Menski,['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/sequenceflow/ConditionalSequenceFlowTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,59f19fde6de2d9aed77b3e5df6f90b8659063e6d,bfc2d604a37a721c71107d0bb3094943d8fb6b04,https://github.com/camunda/camunda-bpm-platform/commit/59f19fde6de2d9aed77b3e5df6f90b8659063e6d,"fix(engine/receive): refactore task subscription and sequential behavior

fixes #CAM-1612 and validates multi instance behavior with some extra test cases",2014-01-21 17:25:48,Danny Gräf,['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/receivetask/ReceiveTaskTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,9b4e23f96837a528856c7bc742f2803cfa1ca0c1,6f8f62327e4945bdddf1b25a23f5949963a72112,https://github.com/camunda/camunda-bpm-platform/commit/9b4e23f96837a528856c7bc742f2803cfa1ca0c1,"refactor(test): split tests and use chained method calls

related to #CAM-1708",2014-01-20 16:56:55,Sebastian Menski,['model-api/xml-model/src/test/java/org/camunda/bpm/model/xml/testmodel/instance/AnimalTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,202913749dcd3ec88761699340a8bd0529b84e03,16033dca1b882c8f650ece815238050a1f04a0da,https://github.com/camunda/camunda-bpm-platform/commit/202913749dcd3ec88761699340a8bd0529b84e03,"refactor(core): cancel scope & concurrent activity

Enhance PVM Atomic Operations and Graph Model to provide facility for an activity to cancel a scope
or be executed concurrently to activities in the same scope.

Cancel Scope
============

A PvmActivity may be marekd isCancelScope(). As a result, the PVM will remove all executions
and sub process instances in the current scope before entering the activity. The activity will
be entered with the scope execution.

Cancel (interrupt) scope is used for the following BPMN constructs:

* Boudary Event with cancelActivit=""true""
* Interrupting Event Subprocess
* Terminate End Event

Concurrent Activity
===================

A PvmActivity may be marked isConcurrent(). As a result, the PVM will create a new execution under
the correct scope execution before entering the activity. This may require expanding the execution
tree into a concurrency tree in case the current scope execution is a leaf.

Concurrent Activity is used for the following BPMN constructs:

* Boundary Event with cancelActivity=""false""
* Non-Interrupting Event Subprocess

Changes
=======

This refactoring has the following positive effects:

* Unification of common behavior between Event Subprocess and Boundary Event and related
  constructs. This will works towards supporting the Non Interrupting event Subprocess
  (see #CAM-112).
* FEAT: Partial support for Non Interrupting Event Subprocess. Proper support will require
  additional parser work for signals and more testcases. #CAM-112.
* FIX: Execution Listeners on cancel scope / concurrent activities now work properly. This
  works towards improving history logging.
* FIX: Write history for Boundary Events (#CAM-1729). This was not possible before due to
  extremely uggly implementation of non-interrupting Boundary Event.
* FIX: Write history for Intermediate Catch Events follwing an
  Event Based Gateway (#CAM-1630)
* FIX: Removes long-standing limitation with boudary events: it is now possible to have
  multiple sequence flows connected to a Boundary Event (#CAM-1730)
* FIX: Non-Interrupting Boudary Event marks Host activity instance ""ended""
  in history (#CAM-1710)
* FIX: Connot use Non-Interrupting Boundary Event connected to Parallel Multi
  Instance Subprocess (#CAM-1731)
* FIX: Interrupting Event Subprocess does not cancel event subscriptions (#CAM-1733)",2014-01-14 09:28:05,Daniel Meyer,"['engine/src/test/java/org/camunda/bpm/engine/test/bpmn/callactivity/CallActivityAdvancedTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/link/LinkEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/message/MessageEventSubprocessTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/timer/BoundaryTimerEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/event/timer/BoundaryTimerNonInterruptingEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/history/HistoricActivityInstanceTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,806883d91473a390039bec53bcf76e02495fd461,71aacd4a0ff3d8ee3c136d79cc0db816e3b02757,https://github.com/camunda/camunda-bpm-platform/commit/806883d91473a390039bec53bcf76e02495fd461,"feat(wls): add wls support

- refactor joda time usage to be compatible with wls shipped ones. (1.2.1.x)
- add engine-rest module for wls
- refactor EjbProcessApplication context switching
- harden integration-tests-engine suite test cases
- harden integration-tests-webapps suite test cases
- improve regex for wls (ProcessEnginesFilter.java)

related to CAM-1677,CAM-1678",2014-01-13 15:58:32,Christian Lipphardt,['webapps/webapp/src/test/java/org/camunda/bpm/webapp/impl/engine/EnginesFilterTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,a99f9803cece53c035d405a7b5eec215b431c1ae,46d63840322f86a9443c94b2f71063189efc0e7b,https://github.com/camunda/camunda-bpm-platform/commit/a99f9803cece53c035d405a7b5eec215b431c1ae,"feat(wls): add wls support

- refactor joda time usage to be compatible with wls shipped ones. (1.2.1.x)
- add engine-rest module for wls
- refactor EjbProcessApplication context switching
- harden integration-tests-engine suite test cases
- harden integration-tests-webapps suite test cases
- improve regex for wls (ProcessEnginesFilter.java)

related to CAM-1677,CAM-1678",2014-01-13 15:58:32,Christian Lipphardt,"['engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractJobDefinitionRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractJobRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractProcessDefinitionRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/AbstractHistoricActivityInstanceRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/AbstractHistoricProcessInstanceRestServiceQueryTest.java', 'webapps/camunda-webapp/webapp/src/test/java/org/camunda/bpm/webapp/impl/engine/EnginesFilterTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,06cab3220b2793429974c9004208012859bd33b1,68836852d5f2dc925799c11040ccf3e5e4d93171,https://github.com/camunda/camunda-bpm-platform/commit/06cab3220b2793429974c9004208012859bd33b1,"fix(suspension/WAS): Refactor setter to ""setSuspended()""

- change SuspensionStateDto#setState() to
  SuspensionStateDto#setSuspended()
- add new profile ""was-compatility"" to run REST API tests with Jackson 1.6.2

related to CAM-1595",2013-12-05 15:01:35,romansmirnov,"['engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractJobRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractProcessInstanceRestServiceInteractionTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,464337a9ce296e402c5f87d2570e5689acd5ec94,1e48b21881696228df39e1d0b73bcf179cd40db9,https://github.com/camunda/camunda-bpm-platform/commit/464337a9ce296e402c5f87d2570e5689acd5ec94,"refactor(engine): history level can be tested

related to CAM-1242",2013-09-26 16:35:32,Christian Lipphardt,"['engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/ProcessInstanceSuspensionTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/async/AsyncStartEventTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/bpmn/multiinstance/MultiInstanceTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,6c6fad2ac34ba07268b00681761f9b1b2597bbd4,9a8506a9894930472ad159eea3d2fd351aaeb786,https://github.com/camunda/camunda-bpm-platform/commit/6c6fad2ac34ba07268b00681761f9b1b2597bbd4,"refactor(authentication): replace cookie-auth with X-Authenticated header

- instead of relying on a client-side cookie we now rely on a number of
  X-Authenticated headers that contain the currently authenticated user.

- whenever the header has changed (is added or removed) in between
  successive requests, a change in the server-side login state gets
  apparent. The client application will reflect that change in the UI.

- Serverside authentication has a mechanism now to distinguish
  logged-in but forbidden (403) from unauthorized (401) requests.
  This is achieved via the
  org.camunda.bpm.webapp.impl.security.filter.Authorization class
  that contains request relevant authorization data.

- A few test cases test the basic login behavior. More stuff must happen
  here though.

Related to CAM-1059",2013-08-19 15:22:11,Nico Rehwaldt,"['webapps/webapp/src/test/java/org/camunda/bpm/webapp/impl/security/filter/RequestFilterTest.java', 'webapps/webapp/src/test/java/org/camunda/bpm/webapp/impl/security/filter/SecurityFilterRulesTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,0d49f9c8218b12fc52afe64193163fa688467c27,5d61bcf051600e79d8be722ca3e068792436cc57,https://github.com/camunda/camunda-bpm-platform/commit/0d49f9c8218b12fc52afe64193163fa688467c27,"refactor(authentication): replace cookie-auth with X-Authenticated header

- instead of relying on a client-side cookie we now rely on a number of
  X-Authenticated headers that contain the currently authenticated user.

- whenever the header has changed (is added or removed) in between
  successive requests, a change in the server-side login state gets
  apparent. The client application will reflect that change in the UI.

- Serverside authentication has a mechanism now to distinguish
  logged-in but forbidden (403) from unauthorized (401) requests.
  This is achieved via the
  org.camunda.bpm.webapp.impl.security.filter.Authorization class
  that contains request relevant authorization data.

- A few test cases test the basic login behavior. More stuff must happen
  here though.

Related to CAM-1059",2013-08-19 15:22:11,Nico Rehwaldt,"['webapps/camunda-webapp/webapp/src/test/java/org/camunda/bpm/webapp/impl/security/filter/RequestFilterTest.java', 'webapps/camunda-webapp/webapp/src/test/java/org/camunda/bpm/webapp/impl/security/filter/SecurityFilterRulesTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,38a82dd424303596db7c1589297078d2d3f24efd,c81ec30a173264920b1042819a8fbf2970d5b104,https://github.com/camunda/camunda-bpm-platform/commit/38a82dd424303596db7c1589297078d2d3f24efd,"fix(engine): fail to remove/refactor tests for businesskey removal

related to CAM-849",2013-08-06 08:55:56,Christian Lipphardt,['engine/src/test/java/org/camunda/bpm/engine/test/api/runtime/RuntimeServiceTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,d4634d239b9cb7c84ee8aad76c4d27df7b4d7035,8a87b029e044cb08638f80f321120843372140af,https://github.com/camunda/camunda-bpm-platform/commit/d4634d239b9cb7c84ee8aad76c4d27df7b4d7035,"test(engine-integration): refactor deployment aware job execution test

related to CAM-49",2013-07-18 13:05:50,Thorben Lindhauer,"['engine/src/test/java/org/camunda/bpm/engine/test/jobexecutor/DeploymentAwareJobExecutorTest.java', 'qa/integration-tests-engine/src/test/java/org/camunda/bpm/integrationtest/jobexecutor/IndependentJobExecutionTest.java', 'qa/integration-tests-engine/src/test/java/org/camunda/bpm/integrationtest/util/AbstractFoxPlatformIntegrationTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,bda3ed6af8c2be33744dd70b4415c22e05f828e6,9380526d263c110f1711c1000e98717d69a9e5f9,https://github.com/camunda/camunda-bpm-platform/commit/bda3ed6af8c2be33744dd70b4415c22e05f828e6,refactor(test): limit scope of process application service test,2013-06-11 13:35:07,Andreas Drobisch,['qa/integration-tests-engine/src/test/java/org/camunda/bpm/integrationtest/service/ProcessApplicationServiceTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,5eabe07037b725bb9b36a378718df122fb20ff79,437b0d990b93336942e2d6d51a46b0a5b8ecd55a,https://github.com/camunda/camunda-bpm-platform/commit/5eabe07037b725bb9b36a378718df122fb20ff79,"feat(cockpit-incidents): Add support of incidents

- the cockpit plugins uses the incident infrastructe to show
  whether a process instance/definition failed or not
- refactor the process instance query including pagination and incidents
- add testcases for process instance query

related to CAM-706",2013-06-06 15:35:23,romansmirnov,"['webapps/cockpit/cockpit-webapp/src/test/java/org/camunda/bpm/cockpit/plugin/base/FailedProcessInstancesQueryTest.java', 'webapps/cockpit/cockpit-webapp/src/test/java/org/camunda/bpm/cockpit/plugin/base/ProcessInstancesQueryTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,c0c5ae940491f8ce7b0620a3d1dde873cd3d015f,dddec8e71edeb82b374dc2f62408024b5f9fa451,https://github.com/camunda/camunda-bpm-platform/commit/c0c5ae940491f8ce7b0620a3d1dde873cd3d015f,chore(rest-test): refactor common variable json creation logic,2013-05-30 15:15:44,Thorben Lindhauer,"['engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractExecutionRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractProcessInstanceRestServiceInteractionTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,a45b3eeafde94819d0729a7b7d4fabcfffb5c823,5f2271b0805ae50c758a941ac85812df76447105,https://github.com/camunda/camunda-bpm-platform/commit/a45b3eeafde94819d0729a7b7d4fabcfffb5c823,"feat(cockpit plugins): support webapp provided assets

Assets of internal plugins may be served directly by the cockpit
application.

- Specifying 'webapp://some/path' as a asset directory will serve
  client side plugin assets through the applications web resources.

- Plugin registry has been refactored to be an instance rather than
  a static field holder. That was neccessary due to a bug in the
arquillian
  test runner.",2013-05-15 15:46:38,Nico Rehwaldt,"['webapps/cockpit/cockpit-core/src/test/java/org/camunda/bpm/cockpit/test/plugin/DeploymentTest.java', 'webapps/cockpit/cockpit-core/src/test/java/org/camunda/bpm/cockpit/test/plugin/DiscoveryTest.java', 'webapps/cockpit/cockpit-core/src/test/java/org/camunda/bpm/cockpit/test/plugin/PluginArchiveTest.java', 'webapps/cockpit/cockpit-core/src/test/java/org/camunda/bpm/cockpit/test/plugin/resources/EmbeddedPluginApiTest.java', 'webapps/cockpit/cockpit-core/src/test/java/org/camunda/bpm/cockpit/test/plugin/resources/PluginApiTest.java', 'webapps/cockpit/cockpit-core/src/test/java/org/camunda/bpm/cockpit/test/util/AbstractCockpitCoreTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,64846e5e98ab1634edd80afa6b4faf388f69e6da,66aed881d061340b0521171ec8a91b8b1a86933c,https://github.com/camunda/camunda-bpm-platform/commit/64846e5e98ab1634edd80afa6b4faf388f69e6da,"fix(engine-history) history level missing

- BUGFIX: fix problem with no history level written in db after creation of engine tables by user and property 'databaseSchemaUpdate' set to 'true'. Added check which tests for existance of historyLevel property in 'property'-table and inserts it when not set.
- REFACTOR: refactored failing tests in testsuite after history level fix

related to #CAM-571",2013-05-02 13:53:37,Christian Lipphardt,"['engine/src/test/java/org/camunda/bpm/engine/test/db/DatabaseHistoryPropertyTest.java', 'engine/src/test/java/org/camunda/bpm/engine/test/db/DatabaseTablePrefixTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,d019b4e7acb5f60b22ff458bfa8ca71d74457a1e,5756e77a318ab0af9d5364b311dfc60f00866507,https://github.com/camunda/camunda-bpm-platform/commit/d019b4e7acb5f60b22ff458bfa8ca71d74457a1e,"refactor(rest-test): allow test subclassing for different runtimes

add subclasses that use the resteasy development server

CAM-479",2013-03-25 12:58:03,Thorben Lindhauer,"['engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractProcessDefinitionRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractProcessDefinitionRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractProcessEngineRestServiceTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractProcessInstanceRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractProcessInstanceRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractRestServiceTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractStatisticsRestTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractTaskRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractTaskRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/ProcessDefinitionRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/ProcessDefinitionRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/ProcessEngineRestServiceTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/ProcessInstanceRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/ProcessInstanceRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/StatisticsRestTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/TaskRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/TaskRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/resteasy/ProcessDefinitionRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/resteasy/ProcessDefinitionRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/resteasy/ProcessEngineRestServiceTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/resteasy/ProcessInstanceRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/resteasy/ProcessInstanceRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/resteasy/StatisticsRestTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/resteasy/TaskRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/resteasy/TaskRestServiceQueryTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,89eeabb86ee5b6f96fe8b5657c65131d4a124e40,29e7121b84bdbfd87104702ef319cb5f4496332a,https://github.com/camunda/camunda-bpm-platform/commit/89eeabb86ee5b6f96fe8b5657c65131d4a124e40,"refactor(rest-test): restructure tests to be extensible

move all black-box rest tests (ie. no explicit method verification)
to abstract classes that may be reused when writing integration tests.
Remove arquillian dependencies and setup.

Closes CAM-469, contributes to CAM-470",2013-03-25 10:58:01,Thorben Lindhauer,"['engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractProcessDefinitionRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractProcessDefinitionRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractProcessEngineRestServiceTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractProcessInstanceRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractProcessInstanceRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractRestServiceTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractStatisticsRestTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractTaskRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractTaskRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessDefinitionRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessEngineRestServiceTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessInstanceRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/ProcessDefinitionRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/ProcessDefinitionRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/ProcessEngineRestServiceTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/ProcessInstanceRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/ProcessInstanceRestServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/StatisticsRestTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/TaskRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/embedded/TaskRestServiceQueryTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,e843655cae4a39fa25c9739c1df7b4752979533b,ce0a10f53947d76ec925991ebd904ca07eda6de7,https://github.com/camunda/camunda-bpm-platform/commit/e843655cae4a39fa25c9739c1df7b4752979533b,"refactor(rest-tests): factored out mock creation to be reusable

- introduce org.camunda.bpm.engine.rest.helper.MockProvider
- provides mocks for the basic engine entities
- refactor tests to use MockProvider and have shorter mock setup code",2013-03-07 15:04:34,Thorben Lindhauer,"['engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractTaskRestServiceTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessDefinitionServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessDefinitionServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessInstanceServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessInstanceServiceQueryTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/StatisticsRestTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/TaskRestServiceInteractionTest.java', 'engine-rest/src/test/java/org/camunda/bpm/engine/rest/TaskRestServiceQueryTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,b8cb70db11905387ad42f19f8b41148de9325fa0,46a03c4e86a4858c472e15c32d8ede3c25754e77,https://github.com/camunda/camunda-bpm-platform/commit/b8cb70db11905387ad42f19f8b41148de9325fa0,"refactor(itest): renaming packages

com.camunda.fox.platform.test -> org.camunda.bpm.integrationtest

related to CAM-56",2013-03-06 16:01:05,Daniel Meyer,"['qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/cdi/CdiBeanResolutionTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/cdi/CdiDelegateBeanResolutionTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/cdi/JobExecutorRequestContextTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/context/CallActivityContextSwitchTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/ejb/SFSBDelegateTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/ejb/SLSBDelegateTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/ejb/SingletonBeanDelegateTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/ejb/local/LocalSFSBInvocationTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/ejb/local/LocalSLSBInvocationTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/ejb/local/LocalSingletonBeanInvocationTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/ejb/remote/RemoteSFSBInvocationTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/ejb/remote/RemoteSLSBInvocationTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/ejb/remote/RemoteSingletonBeanInvocationTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/ejb/request/JobExecutorRequestContextLocalInvocationTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/ejb/request/JobExecutorRequestContextRemoteInvocationTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/ejb/request/JobExecutorRequestContextSFSBDelegateTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/jodatime/JodaTimeClassloadingTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/transactions/AsyncJobExecutionTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/transactions/TransactionIntegrationTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/functional/transactions/TransactionListenerTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/jobexecutor/AsyncIntermediateThrowSignalEventTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/jobexecutor/FailedJobCommandTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/jobexecutor/FailingJobBoundaryTimerWithDelegateVariablesTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/jobexecutor/SignalEventCatchBoundaryWithVariablesTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/jobexecutor/TimerExecutionTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/service/ProcessApplicationServiceTest.java', 'qa/integration-tests/src/test/java/org/camunda/bpm/integrationtest/util/AbstractFoxPlatformIntegrationTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,5e9b1a99754d3cf6ff265cbed13ff4ced590043a,10c8ec7a6cc39f3d57131d0a6aeaa8a9f4791c2b,https://github.com/camunda/camunda-bpm-platform/commit/5e9b1a99754d3cf6ff265cbed13ff4ced590043a,"refactor(spring): renaming packages and classes

Packages
- org.activiti.spring -> org.camunda.bpm.engine.spring

Resources
- Schema activiti-5.0.xsd -> camunda-7.0.xsd

Classes
- Activiti-Component -> ProcessEngineComponent
- SpringActivitiTestCase -> SpringProcessEngineTestCase

related to CAM-56",2013-03-06 14:12:13,Daniel Meyer,"['activiti-spring/src/test/java/org/camunda/bpm/engine/spring/test/autodeployment/SpringAutoDeployTest.java', 'activiti-spring/src/test/java/org/camunda/bpm/engine/spring/test/components/ProcessStartingBeanPostProcessorTest.java', 'activiti-spring/src/test/java/org/camunda/bpm/engine/spring/test/components/jobexecutor/SpringJobExecutorTest.java', 'activiti-spring/src/test/java/org/camunda/bpm/engine/spring/test/components/scope/ScopingTest.java', 'activiti-spring/src/test/java/org/camunda/bpm/engine/spring/test/expression/SpringLimitedExpressionsTest.java', 'activiti-spring/src/test/java/org/camunda/bpm/engine/spring/test/expression/callactivity/CallActivityBasedOnSpringBeansExpressionTest.java', 'activiti-spring/src/test/java/org/camunda/bpm/engine/spring/test/jpa/JPASpringTest.java', 'activiti-spring/src/test/java/org/camunda/bpm/engine/spring/test/junit4/SpringJunit4Test.java', 'activiti-spring/src/test/java/org/camunda/bpm/engine/spring/test/servicetask/BoundaryErrorEventSpringTest.java', 'activiti-spring/src/test/java/org/camunda/bpm/engine/spring/test/servicetask/ServiceTaskSpringDelegationTest.java', 'activiti-spring/src/test/java/org/camunda/bpm/engine/spring/test/taskListener/TaskListenerSpringTest.java', 'activiti-spring/src/test/java/org/camunda/bpm/engine/spring/test/taskassignment/CustomTaskAssignmentTest.java', 'activiti-spring/src/test/java/org/camunda/bpm/engine/spring/test/transaction/SpringTransactionIntegrationTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,3362eb2b5917633c9cf44847167b67c945089180,8df0e94f5e16dce53af0e59a239d55385c3e9f93,https://github.com/camunda/camunda-bpm-platform/commit/3362eb2b5917633c9cf44847167b67c945089180,"refactor(engineCdi): Renaming packages and classes

-Packages
org.activiti.cdi -> org.camunda.bpm.engine.cdi

-Classes
ActivitiCdiException -> ProcessEngineCdiException
ActivitiExtension -> ProcessEngineExtension
CdiActivitiTestCase -> CdiProcessEngineTestCase

related to CAM-56",2013-03-06 13:22:22,Daniel Meyer,"['activiti-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/api/BusinessProcessBeanTest.java', 'activiti-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/api/annotation/BusinessKeyTest.java', 'activiti-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/api/annotation/CompleteTaskTest.java', 'activiti-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/api/annotation/ProcessIdTest.java', 'activiti-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/api/annotation/StartProcessTest.java', 'activiti-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/api/annotation/TaskIdTest.java', 'activiti-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/bpmn/SignalEventTest.java', 'activiti-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/impl/context/BusinessProcessContextTest.java', 'activiti-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/impl/context/ThreadContextAssociationTest.java', 'activiti-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/impl/el/ElTest.java', 'activiti-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/impl/event/EventNotificationTest.java', 'activiti-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/impl/task/CdiTaskServiceTest.java', 'activiti-cdi/src/test/java/org/camunda/bpm/engine/experimental/ProcessVariablesTest.java', 'qa/integration-tests/src/test/java/com/camunda/fox/platform/test/functional/cdi/CdiBeanResolutionTest.java', 'qa/integration-tests/src/test/java/com/camunda/fox/platform/test/functional/cdi/CdiDelegateBeanResolutionTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,8df0e94f5e16dce53af0e59a239d55385c3e9f93,16deeb09c4121871ee2a7ef54e967ca13c76cd3a,https://github.com/camunda/camunda-bpm-platform/commit/8df0e94f5e16dce53af0e59a239d55385c3e9f93,"refactor(engine): renaming packages and classes

-Packages
 org.activiti.engine => org.camunda.bpm.engine
 com.camunda.fox => org.camunda.bpm

-Resources
 DB create / drop  => org/camunda/bpm/engine/db

-Classes
 ActivitiException -> ProcessEngineException
 ActivitiClassLoadingException -> ClassLoadingException
 ActivitiOptimisticLockingException -> OptimisticLockingException
 ActivitiTaskAlreadyClaimedException -> TaskAlreadyClaimedException
 ActivitiWrongDbException -> WrongDbException
 ActivitRule -> ProcessEngineRule
 ActivitiTestCase -> ProcessEngineTestCase
 PluggableActivitiTestCase -> PluggableProcessEngineTestCase
 AbstractActivitiTestCase -> AbstractProcessEngineTestCase
 ResourceActivitiTestCase -> ResourceProcessEngineTestCase

related to CAM-56",2013-03-06 12:53:24,Daniel Meyer,"['activiti-cdi/src/test/java/org/activiti/cdi/test/api/BusinessProcessBeanTest.java', 'activiti-cdi/src/test/java/org/activiti/cdi/test/api/annotation/BusinessKeyTest.java', 'activiti-cdi/src/test/java/org/activiti/cdi/test/api/annotation/CompleteTaskTest.java', 'activiti-cdi/src/test/java/org/activiti/cdi/test/api/annotation/ProcessIdTest.java', 'activiti-cdi/src/test/java/org/activiti/cdi/test/api/annotation/StartProcessTest.java', 'activiti-cdi/src/test/java/org/activiti/cdi/test/api/annotation/TaskIdTest.java', 'activiti-cdi/src/test/java/org/activiti/cdi/test/bpmn/SignalEventTest.java', 'activiti-cdi/src/test/java/org/activiti/cdi/test/impl/context/BusinessProcessContextTest.java', 'activiti-cdi/src/test/java/org/activiti/cdi/test/impl/context/ThreadContextAssociationTest.java', 'activiti-cdi/src/test/java/org/activiti/cdi/test/impl/el/ElTest.java', 'activiti-cdi/src/test/java/org/activiti/cdi/test/impl/event/EventNotificationTest.java', 'activiti-cdi/src/test/java/org/activiti/cdi/test/impl/task/CdiTaskServiceTest.java', 'activiti-cdi/src/test/java/org/activiti/experimental/ProcessVariablesTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,f8eecc004d9ceac4eb27ca63389a9fd6e8b17937,ece724c8b70db085b3985256687b6898df681f10,https://github.com/camunda/camunda-bpm-platform/commit/f8eecc004d9ceac4eb27ca63389a9fd6e8b17937,Refactored the POST tests to use rest-assured's inbuilt json serialization from java collection types instead of the JSONObject and JSONArray classes from the engine.,2013-02-08 08:18:32,Thorben Lindhauer,"['camunda-engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessInstanceServiceQueryTest.java', 'camunda-engine-rest/src/test/java/org/camunda/bpm/engine/rest/TaskRestServiceQueryTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,251718ceb49a352d808a098affa5d0864c10ffec,e03aa4b84166c00314788d5c9e075eede656bb62,https://github.com/camunda/camunda-bpm-platform/commit/251718ceb49a352d808a098affa5d0864c10ffec,refactoring of the setup of mocks in ProcessDefinitionServiceTest and ProcessInstanceServiceTest.,2013-01-24 13:02:29,Thorben Lindhauer,"['camunda-engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessDefinitionServiceTest.java', 'camunda-engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessInstanceServiceTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,4ca1ce68c5eb25520d71e5c593883bf7233de5dd,64ed8844e10cd9aac20f52937b8b79ebdeea3712,https://github.com/camunda/camunda-bpm-platform/commit/4ca1ce68c5eb25520d71e5c593883bf7233de5dd,[#CAM-61] Adpated more test cases and refactored the query dto classes to share common functionalities.,2013-01-18 14:32:41,Thorben Lindhauer,"['camunda-engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessDefinitionServiceTest.java', 'camunda-engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessInstanceServiceTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,04a4466dc16cc227f0672b81a7b4333409166a52,48943ada1d32d346f09c35cfb7ba75bf98a5111a,https://github.com/camunda/camunda-bpm-platform/commit/04a4466dc16cc227f0672b81a7b4333409166a52,[#CAM-63] Further refactoring and removal of redundant code in the test.,2013-01-10 10:12:16,Thorben Lindhauer,['camunda-engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessDefinitionServiceTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,48943ada1d32d346f09c35cfb7ba75bf98a5111a,19349e2d1b638c209ea5405ddf5dcdc976c10565,https://github.com/camunda/camunda-bpm-platform/commit/48943ada1d32d346f09c35cfb7ba75bf98a5111a,[#CAM-63] Refactoring of the ProcessDefinitionServiceTest to create and inject a mocked ProcessDefinitionQuery before every test.,2013-01-10 10:10:21,Thorben Lindhauer,['camunda-engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessDefinitionServiceTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,27ba03d1807e6ab988741c93b00c482150a07908,508726f2bd5729283c40dcc9252a76f76b4362b3,https://github.com/camunda/camunda-bpm-platform/commit/27ba03d1807e6ab988741c93b00c482150a07908,"Added JndiConstants class and appname.properties file to allow testing for websphere and the other application servers.
Refactored @EJB annotation lookups into InitialContext.lookup calls
Excluded some some testcases",2012-09-28 15:17:12,Christian Lipphardt,['qa/integration-tests/src/test/java/com/camunda/fox/platform/test/util/AbstractFoxPlatformIntegrationTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,94188fcc3d632ef1c90d559c6c302865c1c199f8,1d694e75b04fbb2b677f5347c800f38e44147be5,https://github.com/camunda/camunda-bpm-platform/commit/94188fcc3d632ef1c90d559c6c302865c1c199f8,HEMERA-2549: Spring tests / refactorings,2012-08-28 13:20:14,Nico Rehwaldt,['cycle/src/test/java/com/camunda/fox/cycle/repository/AbstractRepositoryTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,5809424af1a7c18dc467884f6cda0903731fa79f,376424f9a33d91c67b7b1f4a58b986563a94b499,https://github.com/camunda/camunda-bpm-platform/commit/5809424af1a7c18dc467884f6cda0903731fa79f,"Various platform QA improvements

Add db2 driver to jboss7 test runtime
Add db2 integration test profile
Add jboss remote integration test profile

Add cockpit integration test project (not yet plugged into build process)
Cockpit webapp fox now produces additional jar (for testing)

Refactor names in cockpit webapp fox to correspond to cockpit core
Remove @Specializes from cockpit webapp fox JPA

Revert start/stop job executor change from previous revision",2012-08-10 10:21:33,Nico Rehwaldt,"['qa/cockpit-tests/src/test/java/com/camunda/fox/cockpit/platform/test/BasicWebArchiveTest.java', 'qa/integration-tests/src/test/java/com/camunda/fox/platform/test/jobexecutor/TimerExecutionTest.java', 'qa/integration-tests/src/test/java/com/camunda/fox/platform/test/util/AbstractFoxPlatformIntegrationTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,ead122aa37b363dd5fda1a11c7f8704c5c136ba6,14a15eaba678047f37cd6f030ef62cee72b0a80b,https://github.com/camunda/camunda-bpm-platform/commit/ead122aa37b363dd5fda1a11c7f8704c5c136ba6,ACT-741 fixing problem in mule test probably created during my persistence refactoring,2011-04-08 08:29:10,tombaeyens,"['activiti-mule/src/test/java/org/activiti/engine/test/bpmn/servicetask/AbstractWebServiceTaskTest.java', 'activiti-mule/src/test/java/org/activiti/engine/test/bpmn/servicetask/WebServiceUELTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,ba27cd5ce42332f827838ad9b76a709b25364858,ed15e817440619f4e56553ae53af7162dd033da1,https://github.com/camunda/camunda-bpm-platform/commit/ba27cd5ce42332f827838ad9b76a709b25364858,ACT-45 refactoring process engine caching in test to enable in container testing spring configurations,2011-02-22 18:32:56,tombaeyens,"['activiti-engine/src/test/java/org/activiti/engine/test/cache/ProcessDefinitionCacheTest.java', 'activiti-engine/src/test/java/org/activiti/standalone/initialization/ProcessEnginesTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,8155f532146d9627be089516e8a9e350a5561ada,f9a63dfadef99396b196c87ec064b422c70d06a1,https://github.com/camunda/camunda-bpm-platform/commit/8155f532146d9627be089516e8a9e350a5561ada,refactored base test classes for our own internal test suite,2010-11-25 21:43:45,tombaeyens,"['activiti-cxf/src/test/java/org/activiti/engine/impl/webservice/WebServiceTaskTest.java', 'activiti-cycle/src/test/java/org/activiti/cycle/impl/db/impl/CycleDaoMyBatisImplTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/history/HistoryServiceTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/identity/GroupQueryTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/identity/IdentityServiceTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/identity/UserQueryTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/mgmt/JobQueryTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/mgmt/ManagementServiceTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/repository/DeploymentQueryTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/repository/ProcessDefinitionQueryTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/repository/RepositoryServiceTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/ExecutionQueryTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/ProcessInstanceQueryTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/RuntimeServiceTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/task/TaskQueryTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/api/task/TaskServiceTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/StartToEndTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/callactivity/CallActivityAdvancedTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/deployment/BpmnDeploymentTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/timer/BoundaryTimerEventTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/gateway/ExclusiveGatewayTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/gateway/ParallelGatewayTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/mail/EmailServiceTaskTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/parse/InvalidProcessTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/property/PropertyTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/sequenceflow/ConditionalSequenceFlowTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/subprocess/SubProcessTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/usertask/InitiatorTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/usertask/TaskAssignmentExtensionsTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/usertask/UserTaskTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/concurrency/CompetingJobAcquisitionTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/concurrency/CompetingJoinTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/concurrency/CompetingSignalsTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/db/DeploymentPersistenceTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/db/EngineRebootProcessDefinitionCacheTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/db/ProcessDefinitionPersistenceTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/el/ExpressionManagerTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/forms/FormsTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricProcessInstanceTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricVariableUpdateTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/jobexecutor/JobExecutorCmdExceptionTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/json/JsonTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/transactions/TransactionRollbackTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/callactivity/CallActivityTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/event/timer/BoundaryTimerEventTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/executionlistener/ExecutionListenerTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/expression/UelExpressionTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/gateway/ExclusiveGatewayTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/gateway/ParallelGatewayTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/mail/EmailServiceTaskTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/receivetask/ReceiveTaskTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/scripttask/ScriptTaskTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/servicetask/ExpressionServiceTaskTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/servicetask/JavaServiceTaskTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/servicetask/MethodExpressionServiceTaskTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/subprocess/SubProcessTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/tasklistener/CustomTaskAssignmentTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/tasklistener/TaskListenerTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/usertask/FinancialReportProcessTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/usertask/taskassignee/TaskAssigneeTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/usertask/taskcandidate/TaskCandidateTest.java', 'activiti-engine/src/test/java/org/activiti/examples/identity/IdentityTest.java', 'activiti-engine/src/test/java/org/activiti/examples/mgmt/ManagementServiceTest.java', 'activiti-engine/src/test/java/org/activiti/examples/mgmt/TablePageQueryTest.java', 'activiti-engine/src/test/java/org/activiti/examples/processdefinitions/ProcessDefinitionsTest.java', 'activiti-engine/src/test/java/org/activiti/examples/task/StandaloneTaskTest.java', 'activiti-engine/src/test/java/org/activiti/examples/taskforms/TaskFormsTest.java', 'activiti-engine/src/test/java/org/activiti/examples/variables/VariablesTest.java', 'activiti-engine/src/test/java/org/activiti/examples/variables/jpa/JPAVariableTest.java', 'activiti-engine/src/test/java/org/activiti/standalone/history/FullHistoryTest.java', 'activiti-engine/src/test/java/org/activiti/standalone/initialization/ProcessEnginesTest.java', 'activiti-engine/src/test/java/org/activiti/standalone/interceptor/CommandContextTest.java', 'activiti-mule/src/test/java/org/activiti/engine/test/bpmn/servicetask/AbstractWebServiceTaskTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,cd38061d035008aed446d39b87f6d4f23b2eb68f,0548aebed96a31caf2edd44d33ce04f4a383d9a2,https://github.com/camunda/camunda-bpm-platform/commit/cd38061d035008aed446d39b87f6d4f23b2eb68f,"ACT-347: introduced delegateExpression on serviceTask, taskListener and executionListener. Also refactores all Spring tests while I was at it.",2010-11-23 18:00:08,jbarrez,"['activiti-spring/src/test/java/org/activiti/spring/test/SpringAutoDeployTest.java', 'activiti-spring/src/test/java/org/activiti/spring/test/SpringTransactionIntegrationTest.java', 'activiti-spring/src/test/java/org/activiti/spring/test/autodeployment/SpringAutoDeployTest.java', 'activiti-spring/src/test/java/org/activiti/spring/test/jpa/JPASpringTest.java', 'activiti-spring/src/test/java/org/activiti/spring/test/servicetask/ServiceTaskSpringDelegationTest.java', 'activiti-spring/src/test/java/org/activiti/spring/test/taskassignment/CustomTaskAssignmentTest.java', 'activiti-spring/src/test/java/org/activiti/spring/test/transaction/SpringTransactionIntegrationTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,70eb0f7747a70ef9bbc5086612e7dc326ef8feae,457d6545326743c7d36e60459ba93b575838cd56,https://github.com/camunda/camunda-bpm-platform/commit/70eb0f7747a70ef9bbc5086612e7dc326ef8feae,"Added DB entities, tables and DAO methods for People links and comments, 
Added test case for all DAO methods
Refactored Entity names to have a common naming schema
added first hacky version of Signavio DIFF POC",2010-11-01 08:56:43,bernd.ruecker,['activiti-cycle/src/test/java/org/activiti/cycle/impl/db/impl/CycleDaoMyBatisImplTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,30a07300628a9b8f8fb6a5f20a82c334e56724a7,872eea998680acb54ac58e53af57984eb71a6273,https://github.com/camunda/camunda-bpm-platform/commit/30a07300628a9b8f8fb6a5f20a82c334e56724a7,fixed test case after refactoring form handling for artifact actions,2010-10-18 13:21:05,nilspreusker,['activiti-cycle/src/test/java/org/activiti/cycle/impl/connector/demo/DemoConnectorTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,fdbe26a7def8c93c887d42c729a74ba2bd492c38,f1b0b5f556ebc8f47f53f108ca23a407eaa2729f,https://github.com/camunda/camunda-bpm-platform/commit/fdbe26a7def8c93c887d42c729a74ba2bd492c38,"Rename CycleConfigurationService to CycleService and SimpleXStreamRepositoryConnectorConfigurationManager to CycleServiceXStreamImpl.
Depends on the naming refactoring changed SessionUtil and RepositoryConnectorConfigurationManagerImplTest.",2010-09-16 11:54:08,kristin.polenz,['activiti-cycle/src/test/java/org/activiti/cycle/impl/conf/RepositoryConnectorConfigurationManagerImplTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,004ca3cbfb474011f0649210cd40f5034bbb4174,089dc7386a1a0ec0c4218f2df1de16f4b81aebc0,https://github.com/camunda/camunda-bpm-platform/commit/004ca3cbfb474011f0649210cd40f5034bbb4174,ACT-108 refactor test support,2010-09-10 08:58:48,tombaeyens,"['activiti-engine-test-cfg/src/test/java/org/activiti/test/processengines/ProcessEnginesTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/parse/InvalidProcessTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/usertask/TaskAssignmentExtensionsTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/db/EngineRebootProcessDefinitionCacheTest.java', 'activiti-engine/src/test/java/org/activiti/examples/bpmn/usertask/taskcandidate/TaskCandidateTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,089dc7386a1a0ec0c4218f2df1de16f4b81aebc0,5d1af20cd1ec5372f8b4fd0af43bbdf644fcb8ea,https://github.com/camunda/camunda-bpm-platform/commit/089dc7386a1a0ec0c4218f2df1de16f4b81aebc0,"ACT-119: Add web service
- Create message, structure classes.
- Improve parsing to handle itemDefinitions and structures.
- Add a first version of the test for the web service example.
- Refactor WebServiceActivity class.",2010-09-09 17:35:49,esteban.robles,"['activiti-engine/src/test/java/org/activiti/engine/test/bpmn/servicetask/WebServiceTaskTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/webservice/WebServiceActivityBehaviorTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,eecf34a64a944429f65aa7c74916241cafa74cca,5eb4d521a751965da2a40a3bcde4032d4b90cfab,https://github.com/camunda/camunda-bpm-platform/commit/eecf34a64a944429f65aa7c74916241cafa74cca,"Big refactoring of Cycle API, compiling and test running but distro not yet checked (impossible in the train without internet). Not yet stable!",2010-09-08 19:22:22,bernd.ruecker,"['activiti-cycle/src/test/java/org/activiti/cycle/impl/connector/ApiTest.java', 'activiti-cycle/src/test/java/org/activiti/cycle/impl/connector/demo/DemoConnectorTest.java', 'activiti-cycle/src/test/java/org/activiti/cycle/impl/connector/fs/FileSystemConnectorTest.java', 'activiti-cycle/src/test/java/org/activiti/cycle/impl/connector/signavio/SignavioConnectorTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,632e269364d57311b347ffd94ca01b949b0e34ee,12e5fd4aa9e2f9f155a77014944d2b1c729a3c97,https://github.com/camunda/camunda-bpm-platform/commit/632e269364d57311b347ffd94ca01b949b0e34ee,"ACT-60 more refactoring configuration, persistence and test",2010-07-29 17:41:42,tombaeyens,['activiti-engine/src/test/java/org/activiti/engine/test/bpmn/callactivity/CallActivityAdvancedTest.java']
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,12e5fd4aa9e2f9f155a77014944d2b1c729a3c97,16f06baf20b7c0b7cc52f5a7aeef9fdbf595b65b,https://github.com/camunda/camunda-bpm-platform/commit/12e5fd4aa9e2f9f155a77014944d2b1c729a3c97,"ACT-60 more refactoring configuration, persistence and test",2010-07-29 16:27:16,tombaeyens,"['activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/servicetask/JavaServiceTaskTest.java', 'activiti-engine-test-cfg/src/test/java/org/activiti/test/service/RebootProcessEngineTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/bpmn/callactivity/CallActivityAcvancedTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/db/DeploymentPersistenceTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/db/EngineRebootProcessDefinitionCacheTest.java', 'activiti-engine/src/test/java/org/activiti/engine/test/db/ProcessDefinitionPersistenceTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,16f06baf20b7c0b7cc52f5a7aeef9fdbf595b65b,e35e960e9e98a968310c656bdd3fe1084a6c947d,https://github.com/camunda/camunda-bpm-platform/commit/16f06baf20b7c0b7cc52f5a7aeef9fdbf595b65b,ACT-60 refactored configuration and test,2010-07-29 10:57:47,tombaeyens,"['activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/callactivity/CallActivityTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/event/timer/BoundaryTimerEventTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/expression/UelExpressionTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/gateway/ExclusiveGatewayTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/gateway/ParallelGatewayTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/receivetask/ReceiveTaskTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/scripttask/ScriptTaskTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/servicetask/JavaServiceTaskTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/FinancialReportProcessTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/taskassignee/TaskAssigneeTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/taskcandidate/TaskCandidateTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/taskforms/TaskFormsTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/variables/VariablesTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/StartToEndTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/callactivity/CallActivityTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/compatibility/BpmnBetaCompatibilityTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/event/timer/BoundaryTimerEventTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/gateway/ExclusiveGatewayTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/gateway/ParallelGatewayTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/property/PropertyTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/sequenceflow/ConditionalSequenceFlowTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/subprocess/SubProcessTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/usertask/TaskAssignmentExtensionsTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/processinstance/ProcessInstanceQueryTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/service/HistoricDataServiceTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/service/ProcessServiceTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/service/TaskServiceTest.java', 'activiti-engine/src/test/java/org/activiti/impl/interceptor/DefaultCommandExecutorTest.java', 'activiti-engine/src/test/java/org/activiti/test/history/HistoricDataServiceImplTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,3e105332c9f9c487fccdde9dd4cd60b1af1899a3,2d254643dea61be1dda702a272b2d020a5af170f,https://github.com/camunda/camunda-bpm-platform/commit/3e105332c9f9c487fccdde9dd4cd60b1af1899a3,Fix for failing tests due to assertProcessInstanceEnded refactoring,2010-07-07 11:30:50,jbarrez,"['activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/FinancialReportProcessTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/taskassignee/TaskAssigneeTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/taskcandidate/TaskCandidateTest.java']"
camunda/camunda-bpm-platform,https://github.com/camunda/camunda-bpm-platform,2d254643dea61be1dda702a272b2d020a5af170f,fce3f39eb08c06cfc950adccd2197f08a9898ce7,https://github.com/camunda/camunda-bpm-platform/commit/2d254643dea61be1dda702a272b2d020a5af170f,ACT-36: refactor postcondition test into an assertion,2010-07-07 10:19:27,dsyer,"['activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/gateway/ParallelGatewayTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/receivetask/ReceiveTaskTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/FinancialReportProcessTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/taskassignee/TaskAssigneeTest.java', 'activiti-engine-examples/src/test/java/org/activiti/examples/bpmn/usertask/taskcandidate/TaskCandidateTest.java', 'activiti-engine-test-api/src/test/java/org/activiti/test/bpmn/StartToEndTest.java']"
undertow-io/undertow,https://github.com/undertow-io/undertow,251a90c20592034345eb039bdd60db1da1d1736d,543a1fc2fcab997c46ce497af715df558de669f0,https://github.com/undertow-io/undertow/commit/251a90c20592034345eb039bdd60db1da1d1736d,"[UNDERTOW-1857] Change the way that DefaultServer operates so that now the server is started as part of the JUnit statement, and add @BeforeServerStarts/@AfterServerStops annotations to support setting/cleaning up before/after server starts/stops.

Also, update affected tests that were failing with the change. The websockets tests were leaking the Worker when run in a bach via mvn test.
Includes small refactorings in the tests.",2021-03-04 10:50:08,Flavia Rainone,"['websockets-jsr/src/test/java/io/undertow/websockets/jsr/test/BinaryEndpointTest.java', 'websockets-jsr/src/test/java/io/undertow/websockets/jsr/test/JsrWebSocketServer07Test.java', 'websockets-jsr/src/test/java/io/undertow/websockets/jsr/test/ProgramaticLazyEndpointTest.java', 'websockets-jsr/src/test/java/io/undertow/websockets/jsr/test/annotated/AnnotatedEndpointTest.java', 'websockets-jsr/src/test/java/io/undertow/websockets/jsr/test/dynamicupgrade/DynamicEndpointTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,97b4a19064bbfd72f650ef74e6291e1978f41350,a2e53fade9d2380cc6218cd98c2a0529ba81b72e,https://github.com/apache/logging-log4j2/commit/97b4a19064bbfd72f650ef74e6291e1978f41350,"Refactor `MarkerManager` and other resource locks

Only one test needs write permission to `MarkerManager`",2022-06-20 19:31:02,Piotr P. Karwasz,"['log4j-api-test/src/test/java/org/apache/logging/log4j/AbstractLoggerTest.java', 'log4j-api-test/src/test/java/org/apache/logging/log4j/LoggerTest.java', 'log4j-api-test/src/test/java/org/apache/logging/log4j/MarkerTest.java', 'log4j-api-test/src/test/java/org/apache/logging/log4j/simple/SimpleLoggerTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,e362e7bb7c8b844d07b557a0953fa41282c66c62,ae2afdd2109f6193d2c0dc2bf4df2227b349e283,https://github.com/apache/logging-log4j2/commit/e362e7bb7c8b844d07b557a0953fa41282c66c62,Refactor magic strings into test constants.,2022-02-07 17:05:19,Gary Gregory,"['log4j-mongodb3/src/test/java/org/apache/logging/log4j/mongodb3/MongoDb3AuthFailureTest.java', 'log4j-mongodb3/src/test/java/org/apache/logging/log4j/mongodb3/MongoDb3CappedTest.java', 'log4j-mongodb3/src/test/java/org/apache/logging/log4j/mongodb3/MongoDb3MapMessageTest.java', 'log4j-mongodb3/src/test/java/org/apache/logging/log4j/mongodb3/MongoDb3Test.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,c77ae68701c4de965eb56482d640435f6bce5d89,1abbebd985eec89b42af096ddee72b6ddb65ec7e,https://github.com/apache/logging-log4j2/commit/c77ae68701c4de965eb56482d640435f6bce5d89,Refactor magic strings into test constants.,2022-02-07 14:29:05,Gary Gregory,"['log4j-mongodb4/src/test/java/org/apache/logging/log4j/mongodb4/MongoDb4AuthFailureTest.java', 'log4j-mongodb4/src/test/java/org/apache/logging/log4j/mongodb4/MongoDb4CappedTest.java', 'log4j-mongodb4/src/test/java/org/apache/logging/log4j/mongodb4/MongoDb4MapMessageTest.java', 'log4j-mongodb4/src/test/java/org/apache/logging/log4j/mongodb4/MongoDb4Test.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,2320eef8118c9b397e0cba37216ce468220ddb5d,cdac17cd594e5235b8e26e28b4c80583fe9afc75,https://github.com/apache/logging-log4j2/commit/2320eef8118c9b397e0cba37216ce468220ddb5d,Refactor timeouts in SocketAppenderReconnectTest.,2021-12-23 10:19:54,Volkan Yazici,['log4j-core/src/test/java/org/apache/logging/log4j/core/net/SocketAppenderReconnectTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,d5b5df4dc9a314a2a48cd14223ac9007b4260273,9e7fe9e1a7165b7ffa0d766062e8ec02d34eeadb,https://github.com/apache/logging-log4j2/commit/d5b5df4dc9a314a2a48cd14223ac9007b4260273,Refactor existing test before playing with [LOG4J2-1839],2017-03-07 07:49:35,ggregory,"['log4j-core/src/test/java/org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppenderH2DataSourceTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppenderH2FactoryMethodTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,50609f9c70679c03bc94229ea4fdd3d11337bb92,3c7a91fd119348ccba3c78313302c609122ed53f,https://github.com/apache/logging-log4j2/commit/50609f9c70679c03bc94229ea4fdd3d11337bb92,[LOG4J2-1774]: Refactor JmsAppenderTest to use JndiRule and Mockito,2017-01-07 23:26:48,Matt Sicker,['log4j-core/src/test/java/org/apache/logging/log4j/core/appender/mom/JmsAppenderTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,3c7a91fd119348ccba3c78313302c609122ed53f,b1cabb925981a3621c02ff7ce6bd658fd95d8672,https://github.com/apache/logging-log4j2/commit/3c7a91fd119348ccba3c78313302c609122ed53f,[LOG4J2-1774]: Refactor RoutingAppenderWithJndiTest to use JndiRule,2017-01-07 22:38:51,Matt Sicker,['log4j-core/src/test/java/org/apache/logging/log4j/core/appender/routing/RoutingAppenderWithJndiTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,b1cabb925981a3621c02ff7ce6bd658fd95d8672,ac89d8a360197eda2e9a0a73c0e09ba3d49d93ab,https://github.com/apache/logging-log4j2/commit/b1cabb925981a3621c02ff7ce6bd658fd95d8672,[LOG4J2-1774]: Refactor InterpolatorTest to use JndiRule,2017-01-07 22:34:39,Matt Sicker,['log4j-core/src/test/java/org/apache/logging/log4j/core/lookup/InterpolatorTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,ac89d8a360197eda2e9a0a73c0e09ba3d49d93ab,98f20e9f67c2f33d6059abd34daaebe5f0f0c4a1,https://github.com/apache/logging-log4j2/commit/ac89d8a360197eda2e9a0a73c0e09ba3d49d93ab,Refactor JndiLookupTest to use JndiRule,2017-01-07 22:22:13,Matt Sicker,['log4j-core/src/test/java/org/apache/logging/log4j/core/lookup/JndiLookupTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,cbf9ef03b86aa9aa0ecb7244710267cea613d473,7e5297d5220bc832df87dc3883446801be83c7d0,https://github.com/apache/logging-log4j2/commit/cbf9ef03b86aa9aa0ecb7244710267cea613d473,Refactor DataSourceConnectionSourceTest to use JndiRule,2017-01-07 22:14:16,Matt Sicker,['log4j-core/src/test/java/org/apache/logging/log4j/core/appender/db/jdbc/DataSourceConnectionSourceTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,29a6821d0be759d977b4ee90db4c120f03bb6109,489d70846f3a724790dd7759cf8d73ee2d568042,https://github.com/apache/logging-log4j2/commit/29a6821d0be759d977b4ee90db4c120f03bb6109,"Refactor JdbcAppender tests into JUnit rules

This adds two new JUnit rules: JdbcRule (for setup and teardown of a JDBC table) and JndiRule (for setup and teardown of a MockContext and binding of a value inside it).",2017-01-07 19:46:42,Matt Sicker,"['log4j-core/src/test/java/org/apache/logging/log4j/core/appender/db/jdbc/AbstractJdbcAppenderDataSourceTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/appender/db/jdbc/AbstractJdbcAppenderFactoryMethodTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/appender/db/jdbc/AbstractJdbcAppenderTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppenderH2DataSourceTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppenderH2FactoryMethodTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppenderHsqlDataSourceTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppenderHsqlFactoryMethodTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,e7e58a32492444b349b3f65f964239e5b8093920,c81bed05a4813a028dd1a1fb07264dd618db3652,https://github.com/apache/logging-log4j2/commit/e7e58a32492444b349b3f65f964239e5b8093920,"Better tests for [LOG4J2-1474]. Refactor constants.

CronTriggeringPolicy raise exception and fail to rollover log file when
evaluateOnStartup is true.",2016-12-15 23:06:49,ggregory,['log4j-core/src/test/java/org/apache/logging/log4j/core/appender/rolling/CronTriggeringPolicyTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,bdd0e36237a8a30d46b814961140a08181a34ad1,86a037ffc4487cf025669c44137e3790bbf90e97,https://github.com/apache/logging-log4j2/commit/bdd0e36237a8a30d46b814961140a08181a34ad1,"Try to fix test on Jenkins by waiting a little longer for messages to
come. Refactor this waiting in a new ListAppender method.",2016-09-08 20:29:45,Gary Gregory,['log4j-core/src/test/java/org/apache/logging/log4j/core/appender/AsyncAppenderTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,dd5a253234cebade3925c34f0b8ef5e565b2f2dd,0af1bc26d6523aadd21406d7b7d38aec75316a9f,https://github.com/apache/logging-log4j2/commit/dd5a253234cebade3925c34f0b8ef5e565b2f2dd,Refactor context selectors to test.,2016-08-05 19:21:54,ggregory,"['log4j-core/src/test/java/org/apache/logging/log4j/core/appender/JsonCompleteFileAppenderTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/appender/XmlCompleteFileAppenderTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,67ca08b2a69408f1d57d7cb8f074f4a1937fc508,c7be2fe0110da46108b518edda51b5fa358cecb2,https://github.com/apache/logging-log4j2/commit/67ca08b2a69408f1d57d7cb8f074f4a1937fc508,Refactor to add XML test.,2016-04-06 22:00:18,ggregory,"['log4j-core/src/test/java/org/apache/logging/log4j/core/jackson/LevelMixInJsonTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/jackson/LevelMixInTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/jackson/LevelMixInXmlTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,c7be2fe0110da46108b518edda51b5fa358cecb2,57b72ed30ebea345d884aebeb3e62ca054e817a1,https://github.com/apache/logging-log4j2/commit/c7be2fe0110da46108b518edda51b5fa358cecb2,Refactor to add XML test.,2016-04-06 21:28:03,ggregory,['log4j-core/src/test/java/org/apache/logging/log4j/core/impl/ThrowableProxyTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,57b72ed30ebea345d884aebeb3e62ca054e817a1,a2d3215ab02d058e226e13b6d75336595d164447,https://github.com/apache/logging-log4j2/commit/57b72ed30ebea345d884aebeb3e62ca054e817a1,Refactor to add XML test.,2016-04-06 21:23:11,ggregory,['log4j-core/src/test/java/org/apache/logging/log4j/MarkerMixInTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,a2d3215ab02d058e226e13b6d75336595d164447,96a9e998a1bc717bd021034048a1fac30475a489,https://github.com/apache/logging-log4j2/commit/a2d3215ab02d058e226e13b6d75336595d164447,Refactor to add XML test.,2016-04-06 21:21:45,ggregory,"['log4j-core/src/test/java/org/apache/logging/log4j/MarkerMixInJsonTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/MarkerMixInTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/MarkerMixInXmlTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,542b8beb4a5718c3495a45a60529175d7e05c12b,f7d63106b9ded11480e3c243e0b616b4bda3a762,https://github.com/apache/logging-log4j2/commit/542b8beb4a5718c3495a45a60529175d7e05c12b,"Refactor to a new file a very handy filter for users (like me) writing
application tests:
org.apache.logging.log4j.core.net.server.AbstractSocketServerTest.ThreadFilter
-> org.apache.logging.log4j.core.net.server.ThreadFilter.",2015-11-02 10:55:36,ggregory,['log4j-core/src/test/java/org/apache/logging/log4j/core/net/server/AbstractSocketServerTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,6d2baec217094689f36b53188351aa1b26754dac,c1e25297756adf228582389ef5ebca78d9135f2e,https://github.com/apache/logging-log4j2/commit/6d2baec217094689f36b53188351aa1b26754dac,Async Loggers performance test refactoring,2015-10-25 13:51:53,rpopma,['log4j-core/src/test/java/org/apache/logging/log4j/core/async/perftest/MultiThreadPerfTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,c697938585936779a47928f150401cb74967227e,bf3ba25dfe9e4d8a831bea783bed3a6e65b4593b,https://github.com/apache/logging-log4j2/commit/c697938585936779a47928f150401cb74967227e,"LOG4J2-323, 493, 1159 update test for refactoring",2015-10-20 17:08:43,rpopma,['log4j-core/src/test/java/org/apache/logging/log4j/core/async/AsyncLoggerThreadNameStrategyTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,2e092d30127691ded802c9a9aa11c447aa159e0e,0db8c1a2558e6f49afeb88685955564d862da08f,https://github.com/apache/logging-log4j2/commit/2e092d30127691ded802c9a9aa11c447aa159e0e,Refactor duplictate test assert into a method.,2015-08-20 01:09:11,ggregory,['log4j-core/src/test/java/org/apache/logging/log4j/core/LoggerTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,c6e7a59b89e1d9ae8a802235e0f14b76032c4db1,e6af9263772cbd305a868c5989515a4654ae53b7,https://github.com/apache/logging-log4j2/commit/c6e7a59b89e1d9ae8a802235e0f14b76032c4db1,"Refactor console appender test to test both sys out and sys err but only
keeping testing sys out as new sys err tests fail.",2015-04-20 14:50:14,Gary Gregory,['log4j-core/src/test/java/org/apache/logging/log4j/core/appender/ConsoleAppenderTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,2f612f40c9a577cd1ac9f4712f7b15e04d8dcf43,cbeab8131b5d4a9cf215ca5b2c44a201db97aba4,https://github.com/apache/logging-log4j2/commit/2f612f40c9a577cd1ac9f4712f7b15e04d8dcf43,"Refactor tests stopping the LogManager's Core LoggerContext into a
utility class.",2015-03-25 23:52:33,Gary Gregory,"['log4j-core/src/test/java/org/apache/logging/log4j/core/LoggerTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/appender/RollingRandomAccessFileAppenderRolloverTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/appender/XmlCompactFileAppenderTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/appender/XmlCompactFileAsyncAppenderValidationTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/appender/XmlCompleteFileAppenderTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/appender/XmlFileAppenderTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/appender/XmlRandomAccessFileAppenderTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/async/AsyncLoggerConfigAutoFlushTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/async/AsyncLoggerConfigTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/async/AsyncLoggerConfigUseAfterShutdownTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/async/AsyncLoggerContextTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/async/AsyncLoggerLocationTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/async/AsyncLoggerTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/async/AsyncLoggerThreadContextTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/async/AsyncLoggerTimestampMessageTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/async/AsyncLoggerUseAfterShutdownTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,408d0a9ab9e98f8856edccc0a1670b70abaafbdc,260a4a0180d684c704263bf9750f82264ecf4d5c,https://github.com/apache/logging-log4j2/commit/408d0a9ab9e98f8856edccc0a1670b70abaafbdc,Refactor SerializationTestUtils into Hamcrest matchers.,2014-10-04 16:26:46,Matt Sicker,['log4j-api/src/test/java/org/apache/logging/log4j/AbstractSerializationTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,a121ae06c97e18fd945eb615af87fcb676a52523,837e0aa18f73f1956f7cb2f901a2fbe960501c61,https://github.com/apache/logging-log4j2/commit/a121ae06c97e18fd945eb615af87fcb676a52523,"[LOG4J2-428] Implement a GELF layout. Refactor compression type enum to
make it create the deflator stream, which avoid a switch in the layout,
a bit more OO. Also test ZLIB compression and no compression.",2014-09-15 13:35:28,Gary Gregory,"['log4j-core/src/test/java/org/apache/logging/log4j/core/config/plugins/convert/TypeConvertersTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/layout/GelfLayoutTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,2d1c0f87b11c06adedeed2039279e2574045e060,0a7e3a42a25c6c60ff8c903963a004c1a49911b5,https://github.com/apache/logging-log4j2/commit/2d1c0f87b11c06adedeed2039279e2574045e060,Refactor tests and update a few.,2014-09-10 06:41:43,Matt Sicker,"['log4j-jul/src/test/java/org/apache/logging/log4j/jul/AbstractLoggerTest.java', 'log4j-jul/src/test/java/org/apache/logging/log4j/jul/ApiLoggerTest.java', 'log4j-jul/src/test/java/org/apache/logging/log4j/jul/CoreLoggerTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,3faed6d42a6b87e068b431df5fcdf4066cc59a1d,7f3bcce08cbc87a319f653562543d69ccd5df2be,https://github.com/apache/logging-log4j2/commit/3faed6d42a6b87e068b431df5fcdf4066cc59a1d,"Refactor LoggerStream constructors into builder class.

  - Now all the relevant classes can be constructed from a single unified builder class: LoggerStreams.
  - Removed a lot of constructors.
  - All constructors are now protected to allow for extension.
  - Updated tests to use builder.
  - Some documentation updated.",2014-09-04 16:56:30,Matt Sicker,"['log4j-iostreams/src/test/java/org/apache/logging/log4j/io/AbstractLoggerOutputStreamTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/AbstractLoggerWriterTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerBufferedInputStreamCallerInfoTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerBufferedInputStreamTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerBufferedReaderCallerInfoTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerBufferedReaderTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerFilterOutputStreamTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerFilterWriterTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerInputStreamCallerInfoTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerInputStreamTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerOutputStreamCallerInfoTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerOutputStreamTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerPrintStreamCallerInfoTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerPrintStreamTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerPrintWriterCallerInfoTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerPrintWriterTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerReaderCallerInfoTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerReaderTest.java', 'log4j-iostreams/src/test/java/org/apache/logging/log4j/io/LoggerWriterTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,bb5d55b7da937bff91117e39dd62d46004536d76,f892f849e72d59e74f0999d86b8b0fdf54efc218,https://github.com/apache/logging-log4j2/commit/bb5d55b7da937bff91117e39dd62d46004536d76,Test newly refactored LoggerOutputStream and LoggerFilterOutputStream.,2014-09-03 03:23:09,Gary Gregory,"['log4j-streams/src/test/java/org/apache/logging/log4j/streams/AbstractLoggerOutputStreamTest.java', 'log4j-streams/src/test/java/org/apache/logging/log4j/streams/LoggerFilterOutputStreamTest.java', 'log4j-streams/src/test/java/org/apache/logging/log4j/streams/LoggerOutputStreamTest.java', 'log4j-streams/src/test/java/org/apache/logging/log4j/streams/LoggerPrintStreamTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,1002626a1cff6a7066ac4142aced47aed459d13b,1988319b33d7ed1b3ecf6a90085d7fe506097e60,https://github.com/apache/logging-log4j2/commit/1002626a1cff6a7066ac4142aced47aed459d13b,"Refactor CouchDbObject into DefaultNoSqlObject.

  - Back when I was looking into the APIs for some other NoSQL drivers, I noticed that almost all of them use Map<String, Object> as their document type. Only MongoDB uses a more specific class. Therefore, I've renamed the CouchDbObject class due to its versatility in supporting more NoSQL drivers in the future.
  - Updated tests that referenced the old class.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1606953 13f79535-47bb-0310-9956-ffa450edef68",2014-07-01 00:27:25,mattsicker,['log4j-nosql/src/test/java/org/apache/logging/log4j/nosql/appender/NoSqlDatabaseManagerTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,633de9b5430f3337fecc075e3c1fb5e871c2add4,3f7805d0b0f192d9321e150135e20c36d2c3a5d7,https://github.com/apache/logging-log4j2/commit/633de9b5430f3337fecc075e3c1fb5e871c2add4,"Re-used AvailablePortFinder from the Core tests and remove the recently refactored FreePortFinder.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1605658 13f79535-47bb-0310-9956-ffa450edef68",2014-06-26 03:22:33,Gary D. Gregory,"['log4j-flume-ng/src/test/java/org/apache/logging/log4j/flume/appender/FlumeAppenderTest.java', 'log4j-flume-ng/src/test/java/org/apache/logging/log4j/flume/appender/FlumeEmbeddedAgentTest.java', 'log4j-flume-ng/src/test/java/org/apache/logging/log4j/flume/appender/FlumeEmbeddedAppenderTest.java', 'log4j-flume-ng/src/test/java/org/apache/logging/log4j/flume/appender/FlumePersistentAppenderTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,2ba1eac3dd67bb76c3a2d174d435cc4de5e18718,d4a268e95beab64baa1219b493a8ca178ec0d56a,https://github.com/apache/logging-log4j2/commit/2ba1eac3dd67bb76c3a2d174d435cc4de5e18718,"Refactor test to use ILC.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1596486 13f79535-47bb-0310-9956-ffa450edef68",2014-05-21 06:17:18,mattsicker,['log4j-core/src/test/java/org/apache/logging/log4j/core/filter/BurstFilterTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,5b5abc330c8aa3dc982d4e7948d17b7e819288cb,db8b828f7756db30ed1b79cce1d6cd961fd0a24b,https://github.com/apache/logging-log4j2/commit/5b5abc330c8aa3dc982d4e7948d17b7e819288cb,"Refactor tests to use ILC.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1596481 13f79535-47bb-0310-9956-ffa450edef68",2014-05-21 06:01:08,mattsicker,"['log4j-core/src/test/java/org/apache/logging/log4j/core/net/SocketMessageLossTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/net/SocketReconnectTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/net/SocketTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,ce8713ceea39a899ef0629da4ddd4f7a6e9c6002,6896181d9101a5b1104f5f509e45b8dcbe4a74aa,https://github.com/apache/logging-log4j2/commit/ce8713ceea39a899ef0629da4ddd4f7a6e9c6002,"Refactor tests to use InitialLoggerContext and other assertion clean-ups.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1596458 13f79535-47bb-0310-9956-ffa450edef68",2014-05-21 04:58:01,mattsicker,"['log4j-core/src/test/java/org/apache/logging/log4j/core/LogEventFactoryTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/LoggerDateTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/LoggerTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/LoggerUpdateTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/ShutdownDisabledTest.java', 'log4j-core/src/test/java/org/apache/logging/log4j/core/StrictXMLConfigTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,6896181d9101a5b1104f5f509e45b8dcbe4a74aa,1656f5522acff1480018c402ec86e5cad0bc09a6,https://github.com/apache/logging-log4j2/commit/6896181d9101a5b1104f5f509e45b8dcbe4a74aa,"Refactor test to use InitialLoggerContext and stuff.

  - Use AtomicInteger to maintain proper counter.
  - Added to performance tests category.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1596457 13f79535-47bb-0310-9956-ffa450edef68",2014-05-21 04:56:44,mattsicker,['log4j-core/src/test/java/org/apache/logging/log4j/core/ThreadedTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,1656f5522acff1480018c402ec86e5cad0bc09a6,b63b8576a71a0b871a939f36d8fd05a5db490b13,https://github.com/apache/logging-log4j2/commit/1656f5522acff1480018c402ec86e5cad0bc09a6,"Refactor test to use InitialLoggerContext.

  - Also fixed warning about raw types.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1596456 13f79535-47bb-0310-9956-ffa450edef68",2014-05-21 04:54:18,mattsicker,['log4j-core/src/test/java/org/apache/logging/log4j/core/LookupTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,e3e517e5b61056fbdc3e3ea63a6a307aff59fcbc,48c61f9d4a0c2ae2eb8d01bc90374731eb78ce1b,https://github.com/apache/logging-log4j2/commit/e3e517e5b61056fbdc3e3ea63a6a307aff59fcbc,"Refactor test to use InitialLoggerContext.

  - Removed * static import on Level.
  - Made Expected a static inner class.
  - Assertion statement clarifications.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1596453 13f79535-47bb-0310-9956-ffa450edef68",2014-05-21 03:49:59,mattsicker,['log4j-core/src/test/java/org/apache/logging/log4j/core/LevelTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,465e912e14db519693fd2d337ae44fdad1043a2d,5f69d03a0052fc2f600a1ba9e7baaf3fe524e1c3,https://github.com/apache/logging-log4j2/commit/465e912e14db519693fd2d337ae44fdad1043a2d,"Refactor test to use InitialLoggerContext rule.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1596445 13f79535-47bb-0310-9956-ffa450edef68",2014-05-21 02:49:22,mattsicker,['log4j-core/src/test/java/org/apache/logging/log4j/core/HostNameTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,5f69d03a0052fc2f600a1ba9e7baaf3fe524e1c3,5f3604dccf0f275086378462f8cf91849e94be71,https://github.com/apache/logging-log4j2/commit/5f69d03a0052fc2f600a1ba9e7baaf3fe524e1c3,"Refactor test to use InitialLoggerContext rule.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1596443 13f79535-47bb-0310-9956-ffa450edef68",2014-05-21 02:44:36,mattsicker,['log4j-core/src/test/java/org/apache/logging/log4j/core/FileConfigTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,ba48ae7af9349515cd3cbf9a6eefa039b4fc82b7,2fd3880c1d5748feaab5a758bdc32a44f44162b6,https://github.com/apache/logging-log4j2/commit/ba48ae7af9349515cd3cbf9a6eefa039b4fc82b7,"Refactor test to use InitialLoggerContext rule.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1595726 13f79535-47bb-0310-9956-ffa450edef68",2014-05-19 02:17:19,mattsicker,['log4j-core/src/test/java/org/apache/logging/log4j/core/ExtendedLevelTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,2fd3880c1d5748feaab5a758bdc32a44f44162b6,9ac560997ae6d4f107b6299c620ae3ceaa309599,https://github.com/apache/logging-log4j2/commit/2fd3880c1d5748feaab5a758bdc32a44f44162b6,"Refactor test to use InitialLoggerContext rule.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1595725 13f79535-47bb-0310-9956-ffa450edef68",2014-05-19 02:13:35,mattsicker,['log4j-core/src/test/java/org/apache/logging/log4j/core/CollectionLoggingTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,b4a2b3f9c6bbde673816e9ebe6712dcb79f1ae09,e60415c41d68082c1308267e13fec921e3b1ca46,https://github.com/apache/logging-log4j2/commit/b4a2b3f9c6bbde673816e9ebe6712dcb79f1ae09,"Refactor test to use InitialLoggerContext rule.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1595720 13f79535-47bb-0310-9956-ffa450edef68",2014-05-19 01:59:31,mattsicker,['log4j-core/src/test/java/org/apache/logging/log4j/core/AppenderRefLevelJsonTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,997e102e468125f8d136042ebecc6dcf769e872f,ba3c7fc3e5bfab09259e603fcc7e5d239b734b9e,https://github.com/apache/logging-log4j2/commit/997e102e468125f8d136042ebecc6dcf769e872f,"Refactor magic string into a constant. Oops created sanity test in the wrong module.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1594355 13f79535-47bb-0310-9956-ffa450edef68",2014-05-13 19:58:28,Gary D. Gregory,['log4j-api/src/test/java/org/apache/log4j/util/StringsTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,776cf7e3ec02faab09493cadd072b6df0876fd13,49954b01e3fda1e5e9eec7c64f75de0a633e82df,https://github.com/apache/logging-log4j2/commit/776cf7e3ec02faab09493cadd072b6df0876fd13,"Test order should not matter. When this test class is invoked from Eclipse for example, while running all tests in the project, it will fail. Use recently refactored static block into the new ThreadContext.init().


git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1593321 13f79535-47bb-0310-9956-ffa450edef68",2014-05-08 16:26:25,Gary D. Gregory,['log4j-api/src/test/java/org/apache/logging/log4j/ThreadContextInheritanceTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,bd765e2e150eac86a0cb60c3e6e357fec3792acc,f8e637899cdcac200c7d76ac29560681e3956c3f,https://github.com/apache/logging-log4j2/commit/bd765e2e150eac86a0cb60c3e6e357fec3792acc,"Test order should not matter. When this test class is invoked from Eclipse for example, while running all tests in the project, it will fail. This change extracts the static block code into a method to be invoked from the test set up and tear down methods. Also make sure we do disable everything in the test. The refactoring also renames the svar all (all what?) to disableAll. I'm not sure why we even need this ivar...

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1593318 13f79535-47bb-0310-9956-ffa450edef68",2014-05-08 16:19:29,Gary D. Gregory,['log4j-api/src/test/java/org/apache/logging/log4j/NoopThreadContextTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,05f21996d0c598910e2ddb614453b6b4fb41d0c8,8bed481825455a1af1588d3fff7fde66d4445c5f,https://github.com/apache/logging-log4j2/commit/05f21996d0c598910e2ddb614453b6b4fb41d0c8,"Refactor OSGi tests using new test rule.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1587790 13f79535-47bb-0310-9956-ffa450edef68",2014-04-16 03:22:37,mattsicker,"['log4j-api/src/test/java/org/apache/logging/log4j/osgi/AbstractLoadBundleTest.java', 'log4j-api/src/test/java/org/apache/logging/log4j/osgi/equinox/AbstractEquinoxLoadBundleTest.java', 'log4j-api/src/test/java/org/apache/logging/log4j/osgi/felix/AbstractFelixLoadBundleTest.java']"
apache/logging-log4j2,https://github.com/apache/logging-log4j2,e339c0c7b48653d644a10d8aa9d7dfe65b5defb1,eacbbd23ce0097bcbb883e55c13a47a9e3d5a509,https://github.com/apache/logging-log4j2/commit/e339c0c7b48653d644a10d8aa9d7dfe65b5defb1,"[LOG4J2-341] Enable XInclude for XML configurations. Start work on getting XML configs using XInclude to be validated. Refactor the creation of the document builder in a method; refactor enablement of XInclude in a method. Tests must process the XML document to allow XInclude to kick in before validation is performed.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1514013 13f79535-47bb-0310-9956-ffa450edef68",2013-08-14 19:28:17,Gary D. Gregory,['core/src/test/java/org/apache/logging/log4j/core/config/XMLConfigurationTest.java']
apache/logging-log4j2,https://github.com/apache/logging-log4j2,3d5e5587fc99671063e8d63e7c34b5ed915fe370,6743d2cd2249caecfc348c7482bbb7a8030143a2,https://github.com/apache/logging-log4j2/commit/3d5e5587fc99671063e8d63e7c34b5ed915fe370,"Refactor the JDBC test class to test another database: H2. I think this raises the level of confidence in the JDBC appender code and tests.

git-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1482660 13f79535-47bb-0310-9956-ffa450edef68",2013-05-15 02:23:46,Gary D. Gregory,"['core/src/test/java/org/apache/logging/log4j/core/appender/db/jdbc/AbstractJdbcAppenderTest.java', 'core/src/test/java/org/apache/logging/log4j/core/appender/db/jdbc/JdbcH2AppenderTest.java', 'core/src/test/java/org/apache/logging/log4j/core/appender/db/jdbc/JdbcHyperSqlAppenderTest.java']"
javaee/jersey,https://github.com/javaee/jersey,a6ff4d50da13d45ad90fd7375a15a31afa02e489,632888b34739b9a1add122cfc20f26a406d224e2,https://github.com/javaee/jersey/commit/a6ff4d50da13d45ad90fd7375a15a31afa02e489,"LocationHeaderTest Refactoring

Change-Id: I0186464d3ed00c6a02cd21ba25122e975a97d5a9",2015-10-07 15:24:06,Adam Lindenthal,"['tests/e2e/src/test/java/org/glassfish/jersey/tests/api/LocationHeaderAsyncTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/api/LocationHeaderBasicTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/api/LocationHeaderFiltersTest.java']"
javaee/jersey,https://github.com/javaee/jersey,96e89fcc8dca8f39511828ed8b9bcf4d3a9d942c,e40a10cd3c226cbc4b8bdfadec4ecd1e5ef6d75c,https://github.com/javaee/jersey/commit/96e89fcc8dca8f39511828ed8b9bcf4d3a9d942c,"LocationHeaderTest Refactoring

Change-Id: I0186464d3ed00c6a02cd21ba25122e975a97d5a9",2015-10-07 15:24:06,Adam Lindenthal,"['tests/e2e/src/test/java/org/glassfish/jersey/tests/api/LocationHeaderAsyncTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/api/LocationHeaderBasicTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/api/LocationHeaderFiltersTest.java']"
javaee/jersey,https://github.com/javaee/jersey,303742e9496b826a605fe5c8612e8bda2a7e2e4d,cb0261bd6217e4617009bf7ed56ca5697acfaeee,https://github.com/javaee/jersey/commit/303742e9496b826a605fe5c8612e8bda2a7e2e4d,"Fixed missing propagation of media type parameters into entity providers.

- See new test method in MessageBodyWriterTest in E2E tests for the reproducer test.
- Some additional core media type and header parser refactoring & cleanup.
  - Consolidation and renaming in MediaTypes utility.
  - Quality source parameters reuse the same parsing as quality parameters; this means that values higher than ""1.0"" throw ParseException.
  - Header parser (and any dependent code) updated to work with CharSequence
  - MethodSelectingRouter updated to re-use common entity provider information

Change-Id: If16fe49345b32edf9f6e121ac238f1ad7716e1a4
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2015-02-05 13:31:53,Marek Potociar,"['core-common/src/test/java/org/glassfish/jersey/internal/util/collection/KeyComparatorLinkedHashMapTest.java', 'core-common/src/test/java/org/glassfish/jersey/message/internal/MediaTypesTest.java', 'core-common/src/test/java/org/glassfish/jersey/message/internal/OutboundMessageContextTest.java', 'core-common/src/test/java/org/glassfish/jersey/message/internal/QualityTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/CombinedMediaTypeTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AcceptAnnotatedReaderWriterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/OptionsTest.java', 'examples/extended-wadl-webapp/src/test/java/org/glassfish/jersey/examples/extendedwadl/ExtendedWadlWebappOsgiTest.java', 'examples/extended-wadl-webapp/src/test/java/org/glassfish/jersey/examples/extendedwadl/ExtendedWadlWebappTest.java', 'examples/json-jackson/src/test/java/org/glassfish/jersey/examples/jackson/JacksonTest.java', 'examples/json-jackson1/src/test/java/org/glassfish/jersey/examples/jackson1/Jackson1Test.java', 'examples/managed-beans-webapp/src/test/java/org/glassfish/jersey/examples/managedbeans/ManagedBeanWebAppTest.java', 'examples/simple-console/src/test/java/org/glassfish/jersey/examples/console/MainTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/api/AcceptMediaTypeProviderTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/api/MediaTypeProviderTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/api/MessageBodyWriterTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/api/QualitySourceMediaTypeProviderTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/api/VariantsTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/mvc/ImplicitProducesViewProcessorTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/mvc/MvcEncodingTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/wadl/ResourceExtendedFlagTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/wadl/WadlResourceTest.java']"
javaee/jersey,https://github.com/javaee/jersey,1b9b0772e15fe2378c1b68705dd6146f75e5d6b3,b42afa4ddf015d0cebaa2181e0947f6986539b4b,https://github.com/javaee/jersey/commit/1b9b0772e15fe2378c1b68705dd6146f75e5d6b3,"Resolved JERSEY-2259: major test framework revamp.

- Introduced concept of container deployment contexts (inspired by AppDescriptor from Jersey 1.x).
- TestContainerFactory.create signature changed to use DeploymentContext.
- Added support for ServletDeploymentContext via GrizzlyWebTestContainerFactory.
- Fixed all locations where JerseyTest.getClient has been overridden.
- Protected JerseyTest.getClient method refactored and made private.
- Removed support for specifying test container factory as one of the application providers.
- Removed protected JerseyTest.setTestContainerFactory method that was not working anyway.

Change-Id: Ia72ffd4d826541bbef403407b0570b20aa19b27a
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2014-03-29 09:25:38,Marek Potociar,"['connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/EntityTest.java', 'examples/bookmark-em/src/test/java/org/glassfish/jersey/examples/bookmark_em/BookmarkTest.java', 'examples/bookmark/src/test/java/org/glassfish/jersey/examples/bookmark/BookmarkTest.java', 'examples/extended-wadl-webapp/src/test/java/org/glassfish/jersey/examples/extendedwadl/ExtendedWadlWebappTest.java', 'examples/system-properties-example/src/test/java/org/glassfish/jersey/examples/sysprops/SysPropsTest.java', 'test-framework/core/src/main/java/org/glassfish/jersey/test/JerseyTest.java', 'test-framework/core/src/test/java/org/glassfish/jersey/test/JerseyTestTest.java', 'test-framework/providers/grizzly2/src/test/java/org/glassfish/jersey/test/grizzly/BaseUriTest.java', 'test-framework/providers/grizzly2/src/test/java/org/glassfish/jersey/test/grizzly/pckg/GrizzlyPackageTest.java', 'test-framework/providers/grizzly2/src/test/java/org/glassfish/jersey/test/grizzly/web/GrizzlyRequestDispatchFilterTest.java', 'test-framework/providers/grizzly2/src/test/java/org/glassfish/jersey/test/grizzly/web/GrizzlyWebInjectionTest.java', 'test-framework/providers/grizzly2/src/test/java/org/glassfish/jersey/test/grizzly/web/GrizzlyWebServletAndFilterTest.java', 'test-framework/providers/grizzly2/src/test/java/org/glassfish/jersey/test/grizzly/web/GrizzlyWebTest.java', 'test-framework/providers/grizzly2/src/test/java/org/glassfish/jersey/test/grizzly/web/context/GrizzlyWebContextPathTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/json/AbstractJsonTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/json/JsonWithPaddingTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/AbstractDisableMetainfServicesLookupTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ApplicationPreDestroyTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/CustomInjectablesApplicationTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/MetainfServicesLookupDisabledTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/PostConstructTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/mvc/MvcEncodingTest.java']"
javaee/jersey,https://github.com/javaee/jersey,23ed50d93475279de351997bf611282922612c04,325a2f214e093859d41d81f9f06652c169a03aa4,https://github.com/javaee/jersey/commit/23ed50d93475279de351997bf611282922612c04,"JERSEY-2358: - internal Jersey Hk2 bindings propagated to CDI
             - test application added
             - added support for constructor injection
             - added support for custom made HK2 injection bindings
             - incorporated review feedback
             - filed JERSEY-2413 to refactor cdi provider

Change-Id: Ia4936457bd438fcd8ca8f89e1662f055967d4f3d
Signed-off-by: Jakub Podlesak <jakub.podlesak@oracle.com>",2014-02-12 17:51:33,Jakub Podlesak,"['tests/integration/cdi-with-jersey-injection-webapp/src/test/java/org/glassfish/jersey/tests/cdi/resources/CdiTest.java', 'tests/integration/cdi-with-jersey-injection-webapp/src/test/java/org/glassfish/jersey/tests/cdi/resources/CustomInjectionTest.java', 'tests/integration/cdi-with-jersey-injection-webapp/src/test/java/org/glassfish/jersey/tests/cdi/resources/ExceptionMappersTest.java', 'tests/integration/cdi-with-jersey-injection-webapp/src/test/java/org/glassfish/jersey/tests/cdi/resources/MonitoringTest.java', 'tests/integration/cdi-with-jersey-injection-webapp/src/test/java/org/glassfish/jersey/tests/cdi/resources/RequestSensitiveTest.java']"
javaee/jersey,https://github.com/javaee/jersey,30a4f8aa71ef6e9295b4da318f3316da37cc61e8,e87aaa5923b3ba6a5c8ff93a546efdf4310ceea1,https://github.com/javaee/jersey/commit/30a4f8aa71ef6e9295b4da318f3316da37cc61e8,"JERSEY-2120: Update MVC documentation
JERSEY-2103: not optimal implementation of the FreemarkerViewProcessor

 - Major update of MVC documentation
 - resolving class marked as deprecated
 - refactored SPI (AbstractTemplateProcessor + test)
 - optimized Freemarker template processor
 - introduced caching property and ability to set custom template object factory
 - properties of supported templating engines moved to *Feature file instead of *Properties
 - Review of MVC documentation incorporated

Change-Id: I580d0c9aec1c7d38c15d4fa591706a6b831b52e3
Signed-off-by: Michal Gajdos <michal.gajdos@oracle.com>",2013-11-27 10:12:13,Michal Gajdos,"['tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/mvc/ErrorTemplateTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/mvc/spi/AbstractTemplateProcessorTest.java']"
javaee/jersey,https://github.com/javaee/jersey,e87aaa5923b3ba6a5c8ff93a546efdf4310ceea1,333218755bc94e1709c597abe190e9bcda916803,https://github.com/javaee/jersey/commit/e87aaa5923b3ba6a5c8ff93a546efdf4310ceea1,"Fixed JERSEY-2205, JERSEY-2258 & JERSEY-2261.

- JERSEY-2261: Executor provider SPI & impl refactoring.
- JERSEY-2205: properly closing async executors.
- JERSEY-2258: (relates to JERSEY-2222), Introduced ConnectorProvider SPI and refactored Connector implementations.

- Other changes:
  - Updated Jersey test framework to properly dispose test client instances.
  - Bumped Grizzly server version to 2.3.8 
    - Removed stale Grizzly module references from our OSGi test configurations
    - Replaced deprecated HttpServer.stop() calls
  - Bumped Grizzly async client version to 1.6

Change-Id: I4f134c50dfb11e130842a25cd47531eec48ca7b8
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2013-12-06 14:03:34,Marek Potociar,"['connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/AuthTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/CookieTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/FollowRedirectsTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/GZIPContentEncodingTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/HelloWorldTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/HttpHeadersTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/HttpMethodTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/HttpMethodWithClientFilterTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/ManagedClientTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/NoEntityTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/TimeoutTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/TraceSupportTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/ssl/MainTest.java', 'connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/FollowRedirectsTest.java', 'connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/HttpHeadersTest.java', 'connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/MethodTest.java', 'connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/NoEntityTest.java', 'connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/ParallelTest.java', 'connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/TimeoutTest.java', 'connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/TraceSupportTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/AsyncTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/AuthFilterTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/AuthTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/CookieTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/EntityTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/ErrorTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/FollowRedirectsTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/GZIPContentEncodingTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/HelloWorldTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/HttpHeadersTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/ManagedClientTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/MethodTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/NoEntityTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/TimeoutTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/TraceSupportTest.java', 'connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/ssl/MainTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/CustomConnectorTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/HttpUrlConnectorTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/JerseyClientTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/filter/CsrfProtectionFilterTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/filter/EncodingFilterTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/filter/HttpBasicAuthFilterTest.java', 'examples/extended-wadl-webapp/src/test/java/org/glassfish/jersey/examples/extendedwadl/ExtendedWadlWebappOsgiTest.java', 'examples/http-trace/src/test/java/org/glassfish/jersey/examples/httptrace/TraceSupportTest.java', 'examples/https-clientserver-grizzly/src/test/java/org/glassfish/jersey/examples/httpsclientservergrizzly/MainTest.java', 'examples/sse-item-store-webapp/src/test/java/org/glassfish/jersey/examples/sseitemstore/ItemStoreResourceTest.java', 'test-framework/core/src/main/java/org/glassfish/jersey/test/JerseyTest.java', 'test-framework/providers/inmemory/src/test/java/org/glassfish/jersey/test/inmemory/InMemoryContainerTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/RequestExecutorProviderTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/BasicClientTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/BufferingTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/ClientBufferingDisabledTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/AbstractDisableMetainfServicesLookupTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/MetainfServicesLookupDisabledTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ResponseStatusTypeTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/sse/EventOutputTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/AbstractJsonOsgiIntegrationTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/BasicOsgiIntegrationTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/BeanValidationTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/JaxRsRiBundleTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/JsonProcessingTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/MultiPartTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/PackageScanningTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/SseTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/WebResourceFactoryTest.java']"
javaee/jersey,https://github.com/javaee/jersey,a33f3245e004812ae61b50f2047db902dfb765c1,d7527f27bae3b56bb54e62e6019c171991707742,https://github.com/javaee/jersey/commit/a33f3245e004812ae61b50f2047db902dfb765c1,"JERSEY-728: Multipart unmarshalling should throw exceptions instead of returning null when it fails.

 - Fix (throwing ProcessingException instead of doing nothing when IOException occurs).
 - Added test case.
 - Refactorings (localization, javadocs, ..).

Change-Id: I3f4a346b67f61c0cb517fe25bf2df716ac6316f1",2013-12-04 13:42:11,Michal Gajdos,"['media/multipart/src/test/java/org/glassfish/jersey/media/multipart/FormDataBodyPartTest.java', 'media/multipart/src/test/java/org/glassfish/jersey/media/multipart/FormDataMultiPartTest.java', 'media/multipart/src/test/java/org/glassfish/jersey/media/multipart/file/FileDataBodyPartTest.java', 'media/multipart/src/test/java/org/glassfish/jersey/media/multipart/internal/FormDataMultiPartReaderWriterTest.java', 'media/multipart/src/test/java/org/glassfish/jersey/media/multipart/internal/MultiPartReaderWriterTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/MultipartTest.java']"
javaee/jersey,https://github.com/javaee/jersey,3cb331d659cfe3944410f7543c6d93ee0edfc65d,26871e3e713cfc7d6c4b9cc76e151b61ff1038ac,https://github.com/javaee/jersey/commit/3cb331d659cfe3944410f7543c6d93ee0edfc65d,"JERSEY-2115: Fixed selection of the resource method annotated with @Template.
	- Refactored validateMethod and handlingMethod of the Invocable.
	PS2: copyright hedaers fixed
	PS3: test fixed
	PS4: review comments incorporated

Change-Id: Ic51b254c9721df485b146084a8bd042a2febc515",2013-11-22 17:45:44,Miroslav Fuksa,"['core-server/src/test/java/org/glassfish/jersey/server/ResourceMergeTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/monitoring/MonitoringStatisticsTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/mvc/TemplateMethodSelectionTest.java']"
javaee/jersey,https://github.com/javaee/jersey,4aee5f736d3872074858faa9a9b94e223cf975c8,5a0a539daf1c2ec289bb0d1a40aac1000190c994,https://github.com/javaee/jersey/commit/4aee5f736d3872074858faa9a9b94e223cf975c8,"Resolved JERSEY-2159: Support Jetty 9 based Jersey Server container.

Refactored jetty-http container tests to not use jetty-connector which causes maven cyclic dependency. This should make buildhive happy.",2013-10-21 01:09:51,Arul Dhesiaseelan,"['containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/AsyncTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/ExceptionTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/GZIPContentEncodingTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/HeadTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/HttpMethodTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/LifecycleListenerTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/MatrixParamTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/OptionsTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/OutputStreamTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/QueryParamTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/ResponseWriterMetadataTest.java']"
javaee/jersey,https://github.com/javaee/jersey,6a00ba2b6848681c9fad58f6a1d008c5a3b2ae3d,e3b16f4b7c8b1dd1f5312c1b6e1234ae873daa9d,https://github.com/javaee/jersey/commit/6a00ba2b6848681c9fad58f6a1d008c5a3b2ae3d,"Resolved JERSEY-2159: Support Jetty 9 based Jersey Server container.

Refactored Jetty connector tests to use Jetty 9 container and vice versa.",2013-10-20 20:32:35,Arul Dhesiaseelan,"['connectors/jetty-connector/src/test/java/org/glassfish/jersey/jetty/connector/ssl/MainTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/AsyncTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/ExceptionTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/GZIPContentEncodingTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/HeadTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/HttpMethodTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/LifecycleListenerTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/MatrixParamTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/OptionsTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/OutputStreamTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/QueryParamTest.java', 'containers/jetty-http/src/test/java/org/glassfish/jersey/jetty/ResponseWriterMetadataTest.java', 'test-framework/providers/jetty/src/test/java/org/glassfish/jersey/test/jetty/JettyContainerTest.java']"
javaee/jersey,https://github.com/javaee/jersey,5ca489bc902c6a0d9e56a75fdf40dc80397da729,0cd2db648ac9c58bed5c5a651282b0273315cb91,https://github.com/javaee/jersey/commit/5ca489bc902c6a0d9e56a75fdf40dc80397da729,"Fixed JERSEY-1845.

- Interceptor stream closed properly after read if not cleaned-up by the interceptor.
- Added reproducer test.
- Minor refactoring of EntityContent.

Change-Id: Ifabec9e1df3b600f45fe041ceb243ff88f5dc427
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2013-09-11 10:48:18,Marek Potociar,['tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/InterceptedStreamCloseTest.java']
javaee/jersey,https://github.com/javaee/jersey,3ef2863184ef649c4b947375a771185bc65842ef,7decd02618941294392ff5f16737d7b6f547d035,https://github.com/javaee/jersey/commit/3ef2863184ef649c4b947375a771185bc65842ef,"Fixed JERSEY-1990.

- MBR.isReadable and MBW.isWriteable are wrapped in try/catch to deal with potential exceptions thrown from these methods.
- Added reproducer test.
- Refactored MessageBodyFactory (renames, switched to new concurrency maps, removed redundant fields, all fields made final.

Change-Id: Ibea93e091dd40e8f6e98d5057f8054867d32d4ac
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2013-09-10 20:36:41,Marek Potociar,"['tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/MessageBodyExceptionWrappingTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/common/ProvidersOrderingTest.java']"
javaee/jersey,https://github.com/javaee/jersey,9fc2a5d18241c506489ffb4a92d4d245bc5bde13,a66bcc8908438da483cc92ee64733336248f688d,https://github.com/javaee/jersey/commit/9fc2a5d18241c506489ffb4a92d4d245bc5bde13,"Jersey project build profiles refactoring.

- Removed profiles: attach-src, attach-src-and-docs, all-tests, examples-source-zip
  - Producing source jars made part of a default build lifecycle
  - Running all tests made part of the default lifecycle
  - Producing example zips made part of release profile

- Renamed profile: maven-project-info-reports-plugin -> project-info

- Fixed copyright headers

- Updated readme files, comments

Change-Id: I855bf1e4ca885410e6fc1f3a324a62add6c622c5
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2013-09-02 17:09:26,Marek Potociar,"['tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/ClientBufferingDisabledTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/ClientEntityAnnotationTest.java', 'tests/integration/cdi-test-webapp/src/test/java/org/glassfish/jersey/tests/cdi/resources/PerRequestBeanTest.java', 'tests/integration/cdi-test-webapp/src/test/java/org/glassfish/jersey/tests/cdi/resources/PerRequestDependentBeanTest.java']"
javaee/jersey,https://github.com/javaee/jersey,a66bcc8908438da483cc92ee64733336248f688d,19b3661a0e256a3c646015ca975d124565bb1579,https://github.com/javaee/jersey/commit/a66bcc8908438da483cc92ee64733336248f688d,"SSE updates, fixes and refactorings.

- Resolved JERSEY-2039: Added support for retry SSE field
- Resolved JERSEY-2073: Fixed broadcaster registration strategy that could lead to new registration rejections caused by false-positive ""contains"" checks.
- Resolved JERSEY-2073: Introduced SSE EventSource.Builder, EventSource reconnect support + example
- Added reproducer test for JERSEY-2045: Unable to reproduce (see EventOutputTest)
- Other changes:
  - Refactored InboundEvent methods getData(…) -> readData(…)
  - Updated Migration chapter in User guide with a list of breaking changes
  - Updated SSE chapter in User Guide to match SSE API changes
  - Updated SSE API javadoc
  - Cosmetic renames in JerseyTest
  - Fixed wrong copyrights in E2E and integration test project files

Change-Id: I2e66734e306b54c03de3281082d406b98b1a5777
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2013-08-20 19:40:22,Marek Potociar,"['connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/HelloWorldTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/HttpHeadersTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/ManagedClientTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/NoEntityTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/TimeoutTest.java', 'connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/TraceSupportTest.java', 'connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/MethodTest.java', 'connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/ParallelTest.java', 'connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/TimeoutTest.java', 'examples/bean-validation-webapp/src/test/java/org/glassfish/jersey/examples/beanvalidation/webapp/ContactCardTest.java', 'examples/clipboard/src/test/java/org/glassfish/jersey/examples/clipboard/ClipboardTest.java', 'examples/json-moxy/src/test/java/org/glassfish/jersey/examples/jsonmoxy/JsonResourceTest.java', 'examples/multipart-webapp/src/test/java/org/glassfish/jersey/examples/multipart/webapp/MultiPartWebAppTest.java', 'examples/server-sent-events/src/test/java/org/glassfish/jersey/examples/sse/ServerSentEventsTest.java', 'examples/simple-console/src/test/java/org/glassfish/jersey/examples/console/MainTest.java', 'examples/sse-item-store-webapp/src/test/java/org/glassfish/jersey/examples/sseitemstore/ItemStoreResourceTest.java', 'examples/xml-moxy/src/test/java/org/glassfish/jersey/examples/xmlmoxy/MoxyAppTest.java', 'media/multipart/src/test/java/org/glassfish/jersey/media/multipart/internal/MultiPartJerseyTest.java', 'media/sse/src/test/java/org/glassfish/jersey/media/sse/OutboundEventTest.java', 'test-framework/core/src/main/java/org/glassfish/jersey/test/JerseyTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/api/ExceptionTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/InterceptorCustomTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/ClientEntityAnnotationTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/ClientPathTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/ResponseCloseTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/common/AutoDiscoverableTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/common/DetermineContentLengthTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/BeanStreamingTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/CharsetTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/EmptyRequestWithJaxbTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/EntityTypesTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/GenericTypeAndEntityTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/InjectedProviderTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/JsonMoxyTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/XmlMoxyTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/BroadcasterTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/EventChannelTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/InterceptorNameAndDynamicBindingTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ResourceConfigTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ResponseStatusTypeTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/validation/BasicValidationTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/validation/CustomConfigValidationTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/sse/EventOutputTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/sse/EventSourceWithNamedEventsTest.java', 'tests/integration/ejb-test-webapp/src/test/java/org/glassfish/jersey/tests/ejb/resources/EjbTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/SseTest.java']"
javaee/jersey,https://github.com/javaee/jersey,04f87679f06a3d3c900bc8d2c7902099f09ad3ee,f7291a5703bb889106ef0a14c8580d1f2b20fa0b,https://github.com/javaee/jersey/commit/04f87679f06a3d3c900bc8d2c7902099f09ad3ee,"JERSEY-1694: NameBound interceptors fixed
	- Interceptors refactored (removed from MessageBodyWorkers, removed WrapperInterceptor on the client, ProcessingProviders are injectable)
	- added tests for name bound interceptors
	PS2, PS3: copyright fixed

Change-Id: I966cf0dd09e11517d5009458f006211370a49094",2013-03-19 18:52:57,Miroslav Fuksa,"['core-server/src/test/java/org/glassfish/jersey/server/internal/routing/UriRoutingContextTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/MessageBodyExceptionWrappingTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/GlobalNameBoundInterceptorTest.java']"
javaee/jersey,https://github.com/javaee/jersey,6e39f43b1965dea089eb24338639c509328a62d7,729d0c6ed9a7a6b218465580fe7368b51f112e7f,https://github.com/javaee/jersey/commit/6e39f43b1965dea089eb24338639c509328a62d7,"JERSEY-1713: Implement support for BV @ValidateExecutable

 - refactored and enhanced ConfiguredValidator (+impl)
 - added reference to validateMethod into AnnotatedMethod, IntrospectionModeller, Invocable
 - changed property in ServerProperties
 - caching in ConfiguredValidatorProvider and ConfiguredValidatorImpl
 - added e2e tests

Patch 2:

 - *Configuration -> *Config

Change-Id: Iee23be102e3912c0bc66de7e6be00c654b18d607",2013-03-11 09:26:51,Michal Gajdos,"['tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/EmptyRequestWithJaxbTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/JsonMoxyTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/json/AbstractJsonTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/validation/CustomConfigValidationTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/validation/InheritanceValidationTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/validation/validateexecutable/ValidateExecutableAbstractTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/validation/validateexecutable/ValidateExecutableBasicTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/validation/validateexecutable/ValidateExecutableInheritanceGenericsTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/validation/validateexecutable/ValidateExecutableInheritanceTest.java']"
javaee/jersey,https://github.com/javaee/jersey,acfb9b3f5ac9534140d9b1ede5e5575082d102eb,d99f48ef4d2660df90f276739eb181b95809506e,https://github.com/javaee/jersey/commit/acfb9b3f5ac9534140d9b1ede5e5575082d102eb,"JERSEY-1617: Content length determining
  - Added buffering functionality to CommitingOutputStream
  - MBWorkers.MessageBodySizeCallback merged to (Buffering)StreamProvider
  - Added configuration enableBuffering() into ContainerResponseWriter
  - Refactored writing and buffering entity on ther client side
    - RequestEnityWriter unified
    - connectors refactored (InMemory connector simulates now Container side)
    - non needed callback interfacess removed
  - Settable added for the future use
  - PS4:
    - minor stylistic changes and javadoc updates.
    - uncommented tests that should have been fixed as part of the task (still failing)
  - PS5:
    - added support for HEAD methods
    - enabled buffering for grizzly container
    - committing of response replaced by closing (fixes gzip streams)
    - PropertiesHelper: RuntimeType support added to all methods (tests added)
    - Removed BufferedOutputStream, buffering refactored (simplified)
    - Removed RequestEntityWriter (part of ClientRequest now)
  - PS6:
  	- review comments incorporated
  - PS7:
  	- copyright fixed

Change-Id: I0a232619e1c3abf8993d51ac88757fb567fcaa1b",2013-02-18 09:27:52,Miroslav Fuksa,"['connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/AuthTest.java', 'core-common/src/test/java/org/glassfish/jersey/internal/util/PropertiesHelperTest.java', 'core-common/src/test/java/org/glassfish/jersey/message/internal/CommittingOutputStreamTest.java', 'core-common/src/test/java/org/glassfish/jersey/message/internal/OutboundJaxrsResponseTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/HeadTest.java', 'examples/extended-wadl-webapp/src/test/java/org/glassfish/jersey/examples/extendedwadl/ExtendedWadlWebappOsgiTest.java', 'examples/extended-wadl-webapp/src/test/java/org/glassfish/jersey/examples/extendedwadl/ExtendedWadlWebappTest.java', 'test-framework/providers/inmemory/src/test/java/org/glassfish/jersey/test/inmemory/InMemoryContainerTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/common/ContentLengthTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/common/DetermineContentLengthTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ExceptionMapperTest.java']"
javaee/jersey,https://github.com/javaee/jersey,31282668a10fc115686fd6d4c181380b9bac5ee8,7bf0ace574a0b78433585e88d1e590725f1d59ed,https://github.com/javaee/jersey/commit/31282668a10fc115686fd6d4c181380b9bac5ee8,"Fix for JERSEY-1342: Introduce proxiable request scope
  - AllInjectablesTest migrated from Jersey 1 to JaxRsInjectablesTest
      to test request scoped JAX-RS injectables
  - refactored Jersey to use HK2 binding builders,
       removed original Jersey builders
  - Introduced JAX-RS specific proxiable injectee wrappers
       that hold request scoped values
       for Request, HttpHeaders, SecurityContext and UriInfo
  - migrated test list cleanup

Change-Id: I250742a2fc1303d6aeb26c1ec0208cc537acf420",2013-02-07 15:07:02,Jakub Podlesak,"['core-client/src/test/java/org/glassfish/jersey/client/JerseyClientTest.java', 'core-common/src/test/java/org/glassfish/jersey/config/ServiceFinderBinderTest.java', 'core-common/src/test/java/org/glassfish/jersey/internal/ContextResolverFactoryTest.java', 'core-common/src/test/java/org/glassfish/jersey/internal/JaxrsProvidersTest.java', 'core-common/src/test/java/org/glassfish/jersey/internal/inject/ReferencingFactoryTest.java', 'core-common/src/test/java/org/glassfish/jersey/message/internal/SaxParserFactoryInjectionProviderTest.java', 'core-common/src/test/java/org/glassfish/jersey/message/internal/SourceProviderTest.java', 'core-common/src/test/java/org/glassfish/jersey/model/internal/CommonConfigTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ResourceConfigTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/SecurityContextTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/filter/ApplicationFilterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/ContextBasedInjectionTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/CookieParamAsCookieTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/CookieParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/CookieParamAsStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/CookieParamStringConstructorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/EncodedParamsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/FormParamTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/HeaderParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/HeaderParamAsStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/HeaderParamStringConstructorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/InvalidParamsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/JaxRsInjectablesTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/JaxbStringReaderProviderTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/MatrixParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/MatrixParamAsStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/MatrixParamStringConstructorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/ParamConverterInternalTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/ParamExceptionMappingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/PathParamAsPathSegmentTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/PathParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/PathParamAsStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/PathParamStringConstructorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/QueryParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/QueryParamAsSetPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/QueryParamAsSetStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/QueryParamAsSortedSetPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/QueryParamAsSortedSetStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/QueryParamAsStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/QueryParamEnumTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/QueryParamFromStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/QueryParamSetStringConstructorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/QueryParamSortedSetStringConstructorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/QueryParamStringConstructorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/UriTest.java', 'media/multipart/src/test/java/org/glassfish/jersey/media/multipart/internal/FormDataMultiPartBufferTest.java', 'test-framework/core/src/test/java/org/glassfish/jersey/test/JerseyTestTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/InjectedProviderTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/CustomInjectablesApplicationTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/CustomInjectablesResourceConfigTest.java']"
javaee/jersey,https://github.com/javaee/jersey,f44103ee86874aee9009fa1417d9f05a3ce926fa,8b74fe7472e68785cb4cb254cd9fe11ebd336d4a,https://github.com/javaee/jersey/commit/f44103ee86874aee9009fa1417d9f05a3ce926fa,"JERSEY-1250: Managed client support.

- Implemented support for ClientBinding & managed clients.
- Added programmatic managed client support example.
- Added web app managed client support example.

- Other changes:
  - Fixed compilation error in the bookmark example test.
  - Some minor rename refactorings in Parameter class.

Change-Id: I7bbdca2f6a6fa60ae9dcb01b666af355dea99b9b
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2013-01-20 20:05:16,Marek Potociar,"['core-server/src/test/java/org/glassfish/jersey/server/internal/inject/UriTest.java', 'examples/bookmark/src/test/java/org/glassfish/jersey/examples/bookmark/BookmarkTest.java', 'examples/managed-client-webapp/src/test/java/org/glassfish/jersey/examples/managedclient/ManagedClientTest.java', 'examples/managed-client/src/test/java/org/glassfish/jersey/examples/managedclient/ManagedClientTest.java']"
javaee/jersey,https://github.com/javaee/jersey,60c514e7000369b56e8ee75947d903956e2419d7,e6946f300d4f8ec47d53c2664cbc6a1ec6944187,https://github.com/javaee/jersey/commit/60c514e7000369b56e8ee75947d903956e2419d7,"JERSEY-1599: Migration to JAX_RS API 2.0-m15.

- Main change: refactoring of internal configuration components.
- JaxbTest fixed (jdk6+jdk7)

Change-Id: I656d576ebff24f8f668bcebd1a4be312302dc71d
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2012-12-07 13:41:08,Marek Potociar,"['connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/FollowRedirectsTest.java', 'connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/HttpHeadersTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/ClientConfigTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/CustomConnectorTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/JerseyClientTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/JerseyInvocationTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/JerseyWebTargetTest.java', 'core-common/src/test/java/org/glassfish/jersey/internal/inject/ProviderBinderTest.java', 'core-common/src/test/java/org/glassfish/jersey/message/DeflateEncodingTest.java', 'core-common/src/test/java/org/glassfish/jersey/message/internal/SaxParserFactoryInjectionProviderTest.java', 'core-common/src/test/java/org/glassfish/jersey/model/ConfigurableTest.java', 'core-common/src/test/java/org/glassfish/jersey/model/internal/CommonConfigTest.java', 'core-common/src/test/java/org/glassfish/jersey/uri/internal/JerseyUriBuilderTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ApplicationFilterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ApplicationHandlerTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/AsyncApplicationBuildingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/AsyncCallbackServerTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ResourceConfigBuilderTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ResourceConfigTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/ContextBasedInjectionTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/JaxbStringReaderProviderTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/UriTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AcceptQsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ConstrainedToServerTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/DynamicFeatureTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/MixedResourceConfigurationTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/PathAndResourceMethodErrorsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ProgrammaticResourceMethodsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ProgrammaticResourceTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ResourceNotFoundTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ResourcePathOverrideTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/internal/ChildResourceTest.java', 'examples/extended-wadl-webapp/src/test/java/org/glassfish/jersey/examples/extendedwadl/ExtendedWadlWebappTest.java', 'examples/helloworld/src/test/java/org/glassfish/jersey/examples/helloworld/HelloWorldTest.java', 'examples/http-trace/src/test/java/org/glassfish/jersey/examples/httptrace/TraceSupportTest.java', 'examples/https-clientserver-grizzly/src/test/java/org/glassfish/jersey/examples/httpsclientservergrizzly/MainTest.java', 'examples/jaxrs-types-injection/src/test/java/org/glassfish/jersey/examples/jaxrstypeinjection/JaxrsTypeInjectionTest.java', 'examples/reload/src/test/java/org/glassfish/jersey/examples/reload/ReloadTest.java', 'examples/server-async-webapp/src/test/java/org/glassfish/jersey/examples/server/async/AsyncResourcesTest.java', 'examples/server-sent-events/src/test/java/org/glassfish/jersey/examples/sse/ServerSentEventsTest.java', 'examples/system-properties-example/src/test/java/org/glassfish/jersey/examples/sysprops/SysPropsTest.java', 'media/multipart/src/test/java/org/glassfish/jersey/media/multipart/internal/FormDataMultiPartBufferTest.java', 'media/multipart/src/test/java/org/glassfish/jersey/media/multipart/internal/MultiPartJerseyTest.java', 'test-framework/core/src/main/java/org/glassfish/jersey/test/JerseyTest.java', 'test-framework/core/src/test/java/org/glassfish/jersey/test/JerseyTestTest.java', 'test-framework/providers/inmemory/src/test/java/org/glassfish/jersey/test/inmemory/internal/FollowRedirectsTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/InterceptorCustomTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/InterceptorGzipTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/AbortResponseClientTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/BasicClientTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/ClientFilterTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/FollowRedirectsTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/RequestScopedReadEntityTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/ResponseBufferEntityTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/common/ConstrainedToTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/common/ContentLengthTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/common/ContentTypeTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/common/EncodingTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/common/MessageBodyReaderUnsupportedTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/common/ProvidersOrderingTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/JAXBContextResolverTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/json/AbstractJsonTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/json/GenericTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/json/InheritanceTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/json/JaxbTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/json/Jersey1199Test.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/json/JsonWithPaddingTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ContainerListenerRegistrationAsProvidersTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/CustomInjectablesResourceConfigTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/InterceptorNameAndDynamicBindingTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ReloadTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ResourceConfigTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ResourceFilterTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/RuntimeConfigTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/SingletonProvidersResourcesTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/SingletonResourceTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/scanning/RankedProviderScanningTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/AbstractJsonOsgiIntegrationTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/SseTest.java']"
javaee/jersey,https://github.com/javaee/jersey,e6946f300d4f8ec47d53c2664cbc6a1ec6944187,d29d742fcd6711e27053a98e175651f4eb9a3868,https://github.com/javaee/jersey/commit/e6946f300d4f8ec47d53c2664cbc6a1ec6944187,"JERSEY-1569: Refactored resource model
	- SubResource Methods and SubResource Locators were moved into a child resources attached to a parent resource
	- This means that the structure has changed from flat to hiearchical with two levels (root resource and child resources)
	- Validation was changed to validate new model structure. Also other improvemets were made to enable better validation of sub resources (new tests in BasicValidatorTest)
Patch 2:
	- Refactoring of child resources (now it is possible to register any resource as child resource and it does not need to be built as part of the parent Resource.Builder)
	- Added merging of ChildResources (+ tests added)
	- Added test for PathParam default value for SubResource Locator
	- Fixed bug in ResourceMethod.consumes(...) methods + added tests (previously it was internally calling produces instead of consumes)
Patch 3:
	- Now resources merge based on PathPatter and not Path (tests added)
	- Bug from Patch 2 with ""sub resource locators and sub resource methods not working on the same path"" fixed
	- Sub resource locators are now working also on the empty path (@Path("""") or @Path(""/""))
	- Other review comments reflected
	- Refactoring of BasicValidator: specific validation split into separate validator, added ResourceModelComponent for resource model (=list of root resources) and for child resource.
Patch 4:
	- Patch set 3 did not compile with attach-src profile -> fixed
Patch 5:
	- Jakub's and Marek's review comments implemented.

Change-Id: I87f3a676f96caeb60dd0e5ae4db6efa954a0f11c",2012-11-09 14:27:55,Miroslav Fuksa,"['core-server/src/test/java/org/glassfish/jersey/server/ResourceMergeTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/PathParamDefaultValueTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/PathAndResourceMethodErrorsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ProgrammaticResourceMethodsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ResourcePathOverrideTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ValidatorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/internal/ChildResourceTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/modelapi/annotation/IntrospectionModellerTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ResourceRoutingTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/SubResourceTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/wadl/WadlResourceTest.java']"
javaee/jersey,https://github.com/javaee/jersey,a19cec55e8732bcc4c227b8693e0d2ea85cac266,4c5213c7a9c50a7840b31122a28e7a8282da8de1,https://github.com/javaee/jersey/commit/a19cec55e8732bcc4c227b8693e0d2ea85cac266,"fix for JERSEY-1409
 - ReflectionHelper: added utility method, getResourceAsStream, to lookup resources in OSGi bundles
 - WadlGeneratorDescription: added reference to original WadlGeneratorConfig
 - added OSGi test to extended wadl webapp example
 - refactored OSGi test dependency management in pom files

Change-Id: Ib8a583e91751e7eba240cf52c15dac2f0cdf6ea0",2012-11-08 09:28:41,Jakub Podlesak,"['examples/extended-wadl-webapp/src/test/java/org/glassfish/jersey/examples/extendedwadl/ExtendedWadlWebappOsgiTest.java', 'examples/osgi-helloworld-webapp/functional-test/src/test/java/org/glassfish/jersey/examples/helloworld/test/AbstractWebAppTest.java']"
javaee/jersey,https://github.com/javaee/jersey,28380677cc895c2e3434de6258e91e42047c4694,46eacdada453ffdb3dd07ff6023baeb540dfbafa,https://github.com/javaee/jersey/commit/28380677cc895c2e3434de6258e91e42047c4694,"JERSEY-1472, JERSEY-1473: SSE client side ported to use ChunkedInput.

- added support for EventSource.start().
- refactored EventSource to use internal executor only.
- fixed blocking issues when starting/closing the event source.
- incorporated review comments:
  - introduced EventInput, EventInputReader
  - renamed EventChannel to EventOutput
  - added SseFeature (needs enabling once common config is fully implemented)
- PS5: fixed EventInput/Output javadoc.
- PS6: rebased to latest origin master branch HEAD & resolved conflicts.

Change-Id: I1200940f184a6b42785383317552e381cf184c57
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2012-10-15 00:54:00,Marek Potociar,"['examples/server-sent-events/src/test/java/org/glassfish/jersey/examples/sse/ServerSentEventsTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/EventChannelTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/SseTest.java']"
javaee/jersey,https://github.com/javaee/jersey,e4c82eac875f6804612ed10e372e466b3bd03218,047e8161864ace27b219171c5dd5077176362c97,https://github.com/javaee/jersey/commit/e4c82eac875f6804612ed10e372e466b3bd03218,"JERSEY-1329: UriBuilder#resolveTemplate refactoring + switched to new JAX-RS m11
	- created new 6 methods resolveTemplate(s) in JerseyUriBuilder and JerseyWebTarget
	- tests added
	- current tests switched from pathParam to resolveTemplate (pathParam will be removed from JAX-RS)
	- current tests switched from WebTarget#queryParams to multiple call of queryParam (queryParams will be removed from JAX-RS)
	- I had to make profile 'attach-src' activated by default in /pom.xml (there was problem with building bundles/jax-rs-ri-bundle).
	- Switched to new JAX-RS m11 API (UriBuilder, WebTarget, ResourceContext)
 Patch 2: JAX-RS m11
 Patch 3: small fix based on Marek's comment

Change-Id: I4830e1ecaafe1cd14d3bc954200d837010dd2edb",2012-09-04 12:48:32,Miroslav Fuksa,"['core-client/src/test/java/org/glassfish/jersey/client/JerseyWebTargetTest.java', 'core-common/src/test/java/org/glassfish/jersey/uri/internal/JerseyUriBuilderTest.java', 'examples/jaxrs-types-injection/src/test/java/org/glassfish/jersey/examples/jaxrstypeinjection/JaxrsTypeInjectionTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/api/ResourceContextTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/ClientPathTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/json/JsonWithPaddingTest.java']"
javaee/jersey,https://github.com/javaee/jersey,13e7ea44cb3c19ad4cf384fae6abc5d3ea9ad101,1e1cea9783bbe1c472ae0558a15236f9c946b445,https://github.com/javaee/jersey/commit/13e7ea44cb3c19ad4cf384fae6abc5d3ea9ad101,"JERSEY-1326: Refactored server-side processing runtime.

- renamed client-side Runtime class to ClientRuntime to avoid clashes and make the naming consistent.
- most of the server-side runtime is now consolidated in a single runtime class.
- fixed some issues in exception mapping processing.
- sync execution path now does not require switching threads or request scopes.
- updated AsyncResponse.cancel() logic to match the latest JAX-RS API changes.
- added support for @ManagedAsync annotation.
- Async example tests updated to deal with intermittent HTTPURLConnection issues via request retry.
- Managed async example tests commented out for now (see JERSEY-1269).
- Fixed more javaodc & import issues.
- Moved server-side processing impl into o.g.j.server package and made classes package-private.
- Made some other impl-specific public methods and classes in o.g.j.server package-private.

Change-Id: I4e08184c8185a179f4a9991da16d95ce188fb8ab
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2012-09-14 20:34:14,Marek Potociar,"['core-common/src/test/java/org/glassfish/jersey/uri/internal/JerseyUriBuilderTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/AsyncApplicationBuildingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ContainerRequestTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ResourceConfigTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/RuntimeDelegateImplTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/ConstructorParameterInjectionTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/ContextBasedInjectionTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/StringReaderTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/UriTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/ContextInjectedAsyncAppTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/PathPatternRoutingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/PatternRoutingAsyncInflectorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/PatternRoutingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/scanning/ResourceFinderStackTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AcceptQsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AncestorsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ConsumeProduceWildcardTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/HeadSubResourceMethodTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/HeadTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/InnerClassWithGenericTypeTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/MixedResourceConfigurationTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/OptionsSubResourceMethodTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ParameterWithMultipleAnnotationsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/PathAndResourceMethodErrorsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ProgrammaticResourceMethodsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/RMBuilderTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ResourceNotFoundTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ResourcePathOverrideTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceDynamicTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceDynamicWithDuplicateTemplateNamesTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceDynamicWithParametersTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceHttpMethodsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceNullTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/modelapi/annotation/IntrospectionModellerTest.java', 'examples/server-async-managed/src/test/java/org/glassfish/jersey/examples/server/async/managed/ManagedAsyncResourceTest.java', 'examples/server-async/src/test/java/org/glassfish/jersey/examples/server/async/AsyncResourceTest.java']"
javaee/jersey,https://github.com/javaee/jersey,81c6d5e491d2ece48be848c60f992042f969af0f,f842964ec31a605baf3b8861522d7d20de642d69,https://github.com/javaee/jersey/commit/81c6d5e491d2ece48be848c60f992042f969af0f,"Client request processing refactoring.

- Client processing separated & customized to fit the specific needs of the client-side processing.
- Runtime class created to contain the initialization and processing logic.
- Transport connector SPI introduced; existing connectors refactored to use the new SPI.
- Patch Set #3:
  - Fixed issue in GrizzlyConnector with not calling the connector callback in async invocation.
  - Updated client API test to cover main client invocation flows.
  - Fixed issues found in the client invocation flows, including JERSEY-1403.


Change-Id: Iaac2f0b1f45434a833607bda2e4c691d8f875f69
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2012-09-03 22:20:45,Marek Potociar,"['core-client/src/test/java/org/glassfish/jersey/client/CustomConnectorTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/filter/CsrfProtectionFilterTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/filter/EncodingFilterTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/filter/HttpBasicAuthFilterTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/BasicClientTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/ClientAsyncTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/RequestScopedReadEntityTest.java']"
javaee/jersey,https://github.com/javaee/jersey,3ff8c835147ca0ca2528a1cea09adacdb4465fc1,1842f3cac7d7fee26eaa0db19b029ac1c6bd02c9,https://github.com/javaee/jersey/commit/3ff8c835147ca0ca2528a1cea09adacdb4465fc1,"JERSEY-1395: ResourceContext.getResource() implemented.

- migrated Jersey 1.x ResourceContext E2E test
- introduced contract provider model to reduce the amount of class introspections happening dugring app initialization
- refactored server-side application initialization
- fixed sub-resource binding

Change-Id: I287212472cb1c0b5e60a297fe8c4c420758c7569
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2012-08-31 20:54:12,Marek Potociar,"['core-server/src/test/java/org/glassfish/jersey/server/AsyncApplicationBuildingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/ResourceContextTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/ContextBasedInjectionTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/BasicValidatorTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/api/ResourceContextTest.java']"
javaee/jersey,https://github.com/javaee/jersey,3b4358efd3f695987483165147aa59411450c6af,4d63aaf1ea4df3a6d7116beebdd3c3496b211cd0,https://github.com/javaee/jersey/commit/3b4358efd3f695987483165147aa59411450c6af,"Fixed JERSEY-1347.

- fixed implementation, added unit tests.
- refactored Quality constants into a separate class.
- unified usage of Quality constants
- completed javadoc

Change-Id: I1315dc1807cfe81634792ae166cf09c9ec490784
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2012-08-17 12:06:58,Marek Potociar,['core-common/src/test/java/org/glassfish/jersey/message/internal/QualitySourceMediaTypeTest.java']
javaee/jersey,https://github.com/javaee/jersey,50ad12b6e4c2915ea66fb476e0e35b76d4e686da,40bc1faf5c4df7faea20f37ffce6a62fb90b8cd9,https://github.com/javaee/jersey/commit/50ad12b6e4c2915ea66fb476e0e35b76d4e686da,"Switching Jersey to new HK2.

- general code refactoring to use the new HK2 API.
- get rid of the tiger-types dependency
- removed custom @Singleton annotation in favor of JSR-330 @Singleton.
- rebased to latest Jersey HEAD.
- fixed SNAPSHOT version references in poms.
- after HK2-switch cleanup.
  - removed temporary tiger-types artifacts, relevant code moved to ReflectionHelper.
  - parameter value provider constructors refactored to remove the unnecessary types.
  - got rid of the Module interface.
  - added new fluent binding construction API similar to the old HK2 API.
  - renamed ""services"" to ""locator"" or ""serviceLocator"".
- PatchSet 2:
  - added missing javadoc to fluent binder API.
  - fixed typos in grizzly archetype.
- PatchSet 3:
  - fixed copyright headers.
- PatchSet 4:
  - updated EJBComponentProvider to bind factory to the EJB class too.
- PatchSet 5:
  - fixes based on review comments.
- PatchSet 6:
  - minor nit missed out in PatchSet 5 (unnecessary change in ApplicationHandler)

Change-Id: I773f326a6b8ac5fa594b70c66be9243db1281020
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2012-07-09 03:21:27,Marek Potociar,"['archetypes/jersey-quickstart-grizzly2/src/main/resources/archetype-resources/src/test/java/MyResourceTest.java', 'core-common/src/test/java/org/glassfish/jersey/config/ServiceFinderBinderTest.java', 'core-common/src/test/java/org/glassfish/jersey/internal/ContextResolverFactoryTest.java', 'core-common/src/test/java/org/glassfish/jersey/internal/JaxrsProvidersTest.java', 'core-common/src/test/java/org/glassfish/jersey/internal/ProviderBinderTest.java', 'core-common/src/test/java/org/glassfish/jersey/internal/inject/ReferencingFactoryTest.java', 'core-common/src/test/java/org/glassfish/jersey/message/internal/AbstractJaxbProviderTest.java', 'core-common/src/test/java/org/glassfish/jersey/message/internal/SaxParserFactoryInjectionProviderTest.java', 'core-common/src/test/java/org/glassfish/jersey/message/internal/SourceProviderTest.java', 'core-common/src/test/java/org/glassfish/jersey/process/internal/CustomProcessingExecutorsProviderTest.java', 'core-common/src/test/java/org/glassfish/jersey/process/internal/RequestInvokerTest.java', 'core-common/src/test/java/org/glassfish/jersey/process/internal/RequestScopeTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ApplicationFilterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/AsyncApplicationBuildingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ResourceConfigBuilderTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ResourceConfigTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/SecurityContextTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/ContextBasedInjectionTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/JaxbStringReaderProviderTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/ContextInjectedAsyncAppTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/PathPatternRoutingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/PatternRoutingAsyncInflectorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/PatternRoutingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/BasicValidatorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/RMBuilderTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ResourceMethodDispatcherFactoryTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceClassDynamicTest.java', 'examples/multipart-webapp/src/test/java/org/glassfish/jersey/examples/multipart/webapp/MultiPartWebAppTest.java', 'examples/osgi-helloworld-webapp/functional-test/src/test/java/org/glassfish/jersey/examples/helloworld/test/AbstractWebAppTest.java', 'examples/osgi-helloworld-webapp/functional-test/src/test/java/org/glassfish/jersey/examples/helloworld/test/WebAppFelixTest.java', 'examples/osgi-http-service/functional-test/src/test/java/org/glassfish/jersey/examples/osgihttpservice/test/AbstractHttpServiceTest.java', 'examples/osgi-http-service/functional-test/src/test/java/org/glassfish/jersey/examples/osgihttpservice/test/GrizzlyHttpServiceFelixTest.java', 'examples/osgi-http-service/functional-test/src/test/java/org/glassfish/jersey/examples/osgihttpservice/test/JettyHttpServiceFelixTest.java', 'media/multipart/src/test/java/org/glassfish/jersey/media/multipart/internal/MultiPartJerseyTest.java', 'test-framework/core/src/main/java/org/glassfish/jersey/test/JerseyTest.java', 'test-framework/core/src/test/java/org/glassfish/jersey/test/JerseyTestTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/common/MessageBodyReaderUnsupportedTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/CharsetTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/EmptyRequestWithJaxbTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/EntityTypesTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/JsonMoxyTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/entity/XmlMoxyTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/CustomInjectablesApplicationTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/CustomInjectablesResourceConfigTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ResourceConfigTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/SecurityContextFilterTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/SingletonResourceTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/BasicOsgiIntegrationTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/JsonTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/MultiPartTest.java', 'tests/osgi/functional/src/test/java/org/glassfish/jersey/osgi/test/basic/SseTest.java']"
javaee/jersey,https://github.com/javaee/jersey,7cb9c5f4b7a249b710895f832eeeb2c5833b2319,d2790398eb8f01790b6ba09af02dcb310697703c,https://github.com/javaee/jersey/commit/7cb9c5f4b7a249b710895f832eeeb2c5833b2319,"JERSEY-972: Support for name bound filters and DynamicBinder.

- added discovery of dynamic binders and name-bound filters
to the application bootstrapping
- updated filtering stage with support for name-bound and
dynamically bound filter invocation
- moved discovery of filters to the bootstrapping phase, rather
than request processing phase
- added resource filters and interceptors info to RoutingContext
and ResourceMethodInvocator
- fixed a bug that caused double invocation of response filters
- prepared things to make adding support for dynamically bound
interceptors easier
- refactored SecurityContext tests, filed issue JERSEY-1282
- refactored RuntimeModelBuilder so that the same instance
can be reused for sub-resource model creation
- added tests covering name-bound, dynamically bound and
post-matching filter execution

PatchSet 2:
- rebase master

PatchSet 3:
- added support for name bindings attached to application class
- name binding annotations are now available in the abstract model
(on ResourceMethod)
- added test for security context injection (currently ignored)

PatchSet 4:
- removed unused localized message

PatchSet 5:
- rebase master

Change-Id: Ib3a3105a061331324674085eedbb7f331a578edf",2012-07-11 16:36:19,Martin Matula,"['core-server/src/test/java/org/glassfish/jersey/server/ApplicationFilterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/SecurityContextTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/RMBuilderTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/AppNameBindingTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ResourceFilterTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/SecurityContextFilterTest.java']"
javaee/jersey,https://github.com/javaee/jersey,35b83cb2d76fa9a38a9016f5a064aaff4ff20444,f581fc3e8766f7ec6e1baa6f44aa2d13e8c13428,https://github.com/javaee/jersey/commit/35b83cb2d76fa9a38a9016f5a064aaff4ff20444,"Core & Server refactoring.

- removed Requests class and usages in runtim-code
   - fixed request context initialization in web component
- replaced calls to Requests class by calls to RequestContextBuilder in tests
- added missing support getting for UriInfo from JerseyContainerRequestContext
- implemented injectable HttpHeaders on top of JerseyContainerRequestContext

Change-Id: Id9afab69600d684a5175e8c35ba7ddf31cab289f
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2012-06-19 18:51:23,Marek Potociar,"['core-common/src/test/java/org/glassfish/jersey/internal/inject/ReferencingFactoryTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ApplicationHandlerTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ResourceConfigTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/SecurityContextTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/UriInfoMatchedResourcesTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/UriInfoMatchedUrisTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/filter/UriConnegFilterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/AbstractTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/ContextBasedInjectionTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/CookieParamAsCookieTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/CookieParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/CookieParamAsStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/CookieParamStringConstructorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/FormParamTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/HeaderParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/HeaderParamAsStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/HeaderParamStringConstructorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/InvalidParamsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/MatrixParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/MatrixParamAsStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/PathParamAsPathSegmentTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/PathParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/PathParamAsStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/QueryParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/QueryParamAsStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/StringReaderTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/ContextInjectedAsyncAppTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/PathPatternRoutingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/PatternRoutingAsyncInflectorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/PatternRoutingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/UriRoutingContextTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AcceptQsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AcceptTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AcceptWriterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AncestorsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ConsumeProduceSimpleTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ConsumeProduceWildcardTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/HeadSubResourceMethodTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/HeadTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/InnerClassWithGenericTypeTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/OptionsSubResourceMethodTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/OptionsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ProgrammaticResourceMethodsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/RMBuilderTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ResourceNotFoundTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ResourcePathOverrideTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceClassDynamicTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceDynamicTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceDynamicWithDuplicateTemplateNamesTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceDynamicWithParametersTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceHttpMethodsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceNullTest.java']"
javaee/jersey,https://github.com/javaee/jersey,94c89af0bf7a8aef44998e730a21ac5aa41a79ff,d8fba02811f5904f20b11952ef5767e62e90555a,https://github.com/javaee/jersey/commit/94c89af0bf7a8aef44998e730a21ac5aa41a79ff,"some of server tests refactored

Change-Id: If6173573b814d182f0e15d32aec3dd087ee44f96",2012-06-19 16:55:25,Jakub Podlesak,"['core-server/src/test/java/org/glassfish/jersey/server/ChunkedResponseTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AcceptAnnotatedReaderWriterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AcceptQsTest.java']"
javaee/jersey,https://github.com/javaee/jersey,07aff1f3e029e7cddc1aefc676300d6b3750cd65,d42eff110e5ebd26aba4e4df975986fcadade091,https://github.com/javaee/jersey/commit/07aff1f3e029e7cddc1aefc676300d6b3750cd65,"Server-side refactoring to the new JAX-RS API.

- server side code compiles (excl. tests)

Change-Id: I91662baf664254e02a487e003c30d7171da4ced5
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2012-06-19 11:01:10,Marek Potociar,"['core-common/src/test/java/org/glassfish/jersey/filter/LoggingFilterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ApplicationFilterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/filter/CsrfProtectionFilterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/RedirectingFilterTest.java']"
javaee/jersey,https://github.com/javaee/jersey,ecdf7a851cd5834d227d7bccd4b845efcc627fb4,76527801f6f99ec2312eee9052c98e52c5faed91,https://github.com/javaee/jersey/commit/ecdf7a851cd5834d227d7bccd4b845efcc627fb4,"Client & core refactoring.

- New filtering API enabled for the client side, remove some old filters.
- Fixed a potential deadlock in core processing (e.g. if a test filter throws an Assertion Error)
- rebased to the latest origin/master
- switched to JAX-RS 2.0-m09

Change-Id: I98b15c2e328c02929a35a0a6f0046fb27f9b29a0
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2012-06-18 21:36:57,Marek Potociar,"['core-client/src/test/java/org/glassfish/jersey/client/filter/CsrfProtectionFilterTest.java', 'core-client/src/test/java/org/glassfish/jersey/client/filter/HttpBasicAuthFilterTest.java', 'examples/helloworld/src/test/java/org/glassfish/jersey/examples/helloworld/HelloWorldTest.java', 'examples/https-clientserver-grizzly/src/test/java/org/glassfish/jersey/examples/httpsclientservergrizzly/MainTest.java', 'examples/server-async/src/test/java/org/glassfish/jersey/examples/server/async/AsyncResourceTest.java']"
javaee/jersey,https://github.com/javaee/jersey,efbf0e1748e5606eeba2586e57fbd7a25b6cbba3,1c33e7b3c3de50951d6d80d65c718d62c7c6283c,https://github.com/javaee/jersey/commit/efbf0e1748e5606eeba2586e57fbd7a25b6cbba3,"JIRA-1090
	- fixed leaking of the Request Scope in ResponseProcessor during async processing
	- Request scope refactored from ""enter/exit"" pattern into ""runInScope(task)"" pattern

Added reviewer changes:
- javadoc updates
- class & method renames
- file/import reformattings
- rebased to latest master branch & resolved merge conflicts

Change-Id: I2bcd210da7cb745c1731f10354b081334613b530
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2012-05-16 08:28:02,Miroslav Fuksa,"['core-common/src/test/java/org/glassfish/jersey/filter/LoggingFilterTest.java', 'core-common/src/test/java/org/glassfish/jersey/internal/JaxrsProvidersTest.java', 'core-common/src/test/java/org/glassfish/jersey/process/internal/CustomProcessingExecutorsProviderTest.java', 'core-common/src/test/java/org/glassfish/jersey/process/internal/HierarchicalRequestProcessorTest.java', 'core-common/src/test/java/org/glassfish/jersey/process/internal/LinearRequestProcessorTest.java', 'core-common/src/test/java/org/glassfish/jersey/process/internal/RequestInvokerTest.java', 'core-common/src/test/java/org/glassfish/jersey/process/internal/RequestScopeTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/filter/CsrfProtectionFilterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/ContextInjectedAsyncAppTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/PathPatternRoutingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/PatternRoutingAsyncInflectorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/PatternRoutingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/RMBuilderTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/CustomInjectablesApplicationTest.java']"
javaee/jersey,https://github.com/javaee/jersey,b55ecd15b1ec6a9d2abdecb4ac8cb47cf84158a2,bab61346da74f8287141f2346906cdaa1f6187f1,https://github.com/javaee/jersey/commit/b55ecd15b1ec6a9d2abdecb4ac8cb47cf84158a2,"Programmatic resource modeling API refactored.

- Runtime code updated.
- Improved Resource class javadoc.
- Automatic resource method building support added.
- Updated examples & tests to use the new programmatic resource modeling API.

Change-Id: I1a50eae828563014cff19647ee5f5f48325cea5e
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2012-05-09 17:31:28,Marek Potociar,"['core-common/src/test/java/org/glassfish/jersey/uri/PathPatternTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ApplicationFilterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/AsyncApplicationBuildingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/ContextBasedInjectionTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/routing/PathPatternRoutingTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AcceptQsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AcceptTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/BasicValidatorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/MixedResourceConfigurationTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/PathAndResourceMethodErrorsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ProgrammaticResourceMethodsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/RMBuilderTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ResourceMethodDispatcherFactoryTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ResourceNotFoundTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ResourcePathOverrideTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/modelapi/annotation/IntrospectionModellerTest.java']"
javaee/jersey,https://github.com/javaee/jersey,0ad6af00d5f441c2fc7be8c2aaa9140a46be0e95,7bfd2df8b51a808a4722b4ff3130ec1fbf345fc0,https://github.com/javaee/jersey/commit/0ad6af00d5f441c2fc7be8c2aaa9140a46be0e95,"Container, ResourceConfig, Programmatic resource builder refactoring.

- introduced Container, Container callback SPI
	- preparation for reload support
- JerseyApplication renamed to ApplicationHandler
	- removed builder, exposed constructors
	- API updated so that end users need to work only with ResourceConfig
- Programmatic resource builder API exposed for now as standalone, still using the old API format
	- programmatically created resources are now added to the ResourceConfig
    - TODO: right now the class-based inflector registration is not working
- Updated test framework API
- Updated all files in all modules to use the new API version
- Fixed some failing server unit tests due to some tests bug that caused tested resource to fail, but also did not discover the failures

Change-Id: I9e0eea26cb1d920723ed6bbda97ee622fd978055
Signed-off-by: Marek Potociar <marek.potociar@oracle.com>",2012-04-06 23:17:51,Marek Potociar,"['core-server/src/test/java/org/glassfish/jersey/server/ApplicationBuilderHttpMethodsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ApplicationBuilderMixedAnnotationDynamicTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ApplicationBuilderTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/ApplicationFilterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/JerseyApplicationTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/SecurityContextTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/UriInfoMatchedResourcesTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/UriInfoMatchedUrisTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/AbstractTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/ContextBasedInjectionTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/CookieParamAsCookieTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/CookieParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/HeaderParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/HeaderParamAsStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/HeaderParamStringConstructorTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/MatrixParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/MatrixParamAsStringTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/PathParamAsPathSegmentTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/PathParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/internal/inject/QueryParamAsPrimitiveTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AcceptAnnotatedReaderWriterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AcceptQsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AcceptTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AcceptWriterTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/AncestorsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ConsumeProduceSimpleTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ConsumeProduceWildcardTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/HeadSubResourceMethodTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/HeadTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/InnerClassWithGenericTypeTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/OptionsSubResourceMethodTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/OptionsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/PathAndResourceMethodErrorsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/ResourceNotFoundTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceClassDynamicTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceDynamicTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceDynamicWithDuplicateTemplateNamesTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceDynamicWithParametersTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceHttpMethodsTest.java', 'core-server/src/test/java/org/glassfish/jersey/server/model/SubResourceNullTest.java', 'examples/clipboard-programmatic/src/test/java/org/glassfish/jersey/examples/clipboard/ClipboardTest.java', 'examples/clipboard/src/test/java/org/glassfish/jersey/examples/clipboard/ClipboardTest.java', 'examples/exception-mapping/src/test/java/org/glassfish/jersey/examples/exception/ExceptionMappingFilterTest.java', 'examples/exception-mapping/src/test/java/org/glassfish/jersey/examples/exception/ExceptionMappingTest.java', 'examples/helloworld-programmatic/src/test/java/org/glassfish/jersey/examples/helloworld/HelloWorldTest.java', 'examples/helloworld/src/test/java/org/glassfish/jersey/examples/helloworld/HelloWorldTest.java', 'examples/http-trace/src/test/java/org/glassfish/jersey/examples/httptrace/TraceSupportTest.java', 'examples/jaxb/src/test/java/org/glassfish/jersey/examples/jaxb/JaxbTest.java', 'examples/jaxrs-types-injection/src/test/java/org/glassfish/jersey/examples/jaxrstypeinjection/JaxrsTypeInjectionTest.java', 'examples/json-jackson/src/test/java/org/glassfish/jersey/examples/jackson/JacksonTest.java', 'examples/json-jaxb/src/test/java/org/glassfish/jersey/examples/jsonjaxb/JsonJaxbTest.java', 'examples/json-with-padding/src/test/java/org/glassfish/jersey/examples/jsonp/JsonpTest.java', 'examples/server-async/src/test/java/org/glassfish/jersey/examples/server/async/AsyncResourceTest.java', 'examples/server-async/src/test/java/org/glassfish/jersey/examples/server/async/managed/ManagedAsyncResourceTest.java', 'incubator/proxy-client/jersey-proxy-client/src/test/java/org/glassfish/jersey/client/proxy/WebResourceFactoryTest.java', 'test-framework/core/src/main/java/org/glassfish/jersey/test/JerseyTest.java', 'test-framework/core/src/test/java/org/glassfish/jersey/test/JerseyTestTest.java', 'test-framework/providers/inmemory/src/test/java/org/glassfish/jersey/test/inmemory/InMemoryContainerTest.java', 'test-framework/providers/jdk-http/src/test/java/org/glassfish/jersey/test/jdkhttp/JdkHttpServerContainerTest.java', 'tests/api/src/test/java/org/glassfish/jersey/tests/api/OptionsTest.java', 'tests/api/src/test/java/org/glassfish/jersey/tests/api/ResponseIntegrationTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/ClientTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/common/MessageBodyReaderUnsupportedTest.java', 'tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/SecurityContextFilterTest.java']"
javaee/jersey,https://github.com/javaee/jersey,ef68e339d90e32f47dff776ccd9f083a8bc989ff,fc143d1a45996926e27db060e1c4a7b3c3e6c2e7,https://github.com/javaee/jersey/commit/ef68e339d90e32f47dff776ccd9f083a8bc989ff,"Added war-based archetype, fixed grizzly archetype.

Added archetype for servlet-based applications using war packaging.
For now the archetype uses deployment descriptor. Once the ResourceConfig/JerseyApplication
are refactored, need to change it to use the application class instead.

For Grizzly artifact had to change Application to JerseyApplication as seems it was missed
during the refactoring. Also made a minor change to the name of the grizzly archetype.

Made both artifacts consistent and did some more cleanups.
Ouch, and mised deleting MainTest in the previous patchset. Fixed now.

Change-Id: I5c7314e0381b11493b3f6ef721cd8a6606c93ff8",2012-03-23 10:15:36,Martin Matula,['archetypes/jersey-quickstart-grizzly2/src/main/resources/archetype-resources/src/test/java/MyResourceTest.java']
javaee/jersey,https://github.com/javaee/jersey,32d225546493e58f87c8d77bd4cba0c372310cc2,84faf6b2cd89c415bf4acf61ff2d6695b6d5f285,https://github.com/javaee/jersey/commit/32d225546493e58f87c8d77bd4cba0c372310cc2,"Support for pluggable processing executors.

Also updated javadoc.
Updated async chat resources in async processing example, added new test, test execution refactored.

Signed-off-by: Marek Potociar <marek.potociar@oracle.com>
Change-Id: Iee5c9b1b701b4b6007e57e3831632c0531c9f9e8",2012-03-08 14:09:12,Marek Potociar,['examples/server-async/src/test/java/org/glassfish/jersey/examples/server/async/AsyncResourceTest.java']
dcm4che/dcm4che,https://github.com/dcm4che/dcm4che,57287f3fd24b92fa9e058968be98426fecc94d40,23f181580273fd8ffb17f7ac00a7145a791d48e9,https://github.com/dcm4che/dcm4che/commit/57287f3fd24b92fa9e058968be98426fecc94d40,"refactor SWFTest, fix broken storescu, mppsscu and stgcmtscu",2012-04-20 10:58:10,Gunter Zeilinger,['dcm4che-tool/dcm4che-tool-ihe/src/main/java/org/dcm4che/tool/ihe/SWFTest.java']
dcm4che/dcm4che,https://github.com/dcm4che/dcm4che,a8c27c89c80add715019e076f3b32ab5240a6154,a31b50be9bc83181169fb70aeeb989335524f902,https://github.com/dcm4che/dcm4che/commit/a8c27c89c80add715019e076f3b32ab5240a6154,Refactor JUnit Tests for VR,2010-11-04 09:25:18,Gunter Zeilinger,['dcm4che-core/src/test/java/org/dcm4che/data/VRTest.java']
sofastack/sofa-bolt,https://github.com/sofastack/sofa-bolt,02d5a562f81d34a20ca46ce2d83fa3bc74ef7607,91847e9c477feea0d5990f2ae92f57a2b8ccb7c2,https://github.com/sofastack/sofa-bolt/commit/02d5a562f81d34a20ca46ce2d83fa3bc74ef7607,"support multi-interest feature in MultiInterestUserProcessor (#62)

* add multiple interests in UserProcessor

* support multi-interest feature

* fix server and client register userprocessor

* fix empty and add Unit Test

* refactor codes

* add register test and  refactor codes",2018-07-05 09:41:44,cytnju,"['src/test/java/com/alipay/remoting/rpc/userprocessor/UserProcessorRegisterHelperTest.java', 'src/test/java/com/alipay/remoting/rpc/userprocessor/multiinterestprocessor/BasicUsage_MultiInterestUserProcessorTest.java']"
alibaba/jvm-sandbox-repeater,https://github.com/alibaba/jvm-sandbox-repeater,020daef346abf2589851298792f46a8048c8a7a5,01ab5f7561d8d6ac541d9fe3496c2a7cbaa9dbf3,https://github.com/alibaba/jvm-sandbox-repeater/commit/020daef346abf2589851298792f46a8048c8a7a5,Refactor regressTest code,2019-07-21 05:35:28,王裕坤,"['repeater-console/repeater-console-start/src/test/java/com/alibaba/repeater/console/start/RegressTest.java', 'repeater-console/repeater-console-start/src/test/java/com/alibaba/repeater/console/start/RegressTest/HttpPluginRegressTest.java']"
Athou/commafeed,https://github.com/Athou/commafeed,8e34c44e0de27c5f1ccd7021c127a13a50a1d853,b71434acf6908a434c2a1c51ec3e6c67ab9dd078,https://github.com/Athou/commafeed/commit/8e34c44e0de27c5f1ccd7021c127a13a50a1d853,"Refactor unit tests using DRY, add tests for api login",2014-10-23 02:31:36,Sankaranarayanan Viswanathan,['src/test/java/com/commafeed/backend/service/UserServiceTest.java']
find-sec-bugs/find-sec-bugs,https://github.com/find-sec-bugs/find-sec-bugs,256056c254a0da1c2e5ed9829b6c825db598b53d,bc2efbdd2e4b8de48e2069d564202a6ccca3dda6,https://github.com/find-sec-bugs/find-sec-bugs/commit/256056c254a0da1c2e5ed9829b6c825db598b53d,Remove glitch created when refactoring package name (test -> com.h3xstream.findbugs.test),2012-10-19 03:00:00,h3xStream,['findbugs-test-util/src/test/java/com/h3xstream/findbugs/test/BaseDetectorTest.java']
apache/dubbo-samples,https://github.com/apache/dubbo-samples,ff81a8489bac3e5f88c3976b1e49eca47e710093,5662cd1b24ff6b38e3aff0032f91b9436bef972f,https://github.com/apache/dubbo-samples/commit/ff81a8489bac3e5f88c3976b1e49eca47e710093,"refactor dubbo-samples-async-generated-future, upgrade from spring-xml to springboot (#801)

* feat: fork from github

* feat: refactor dubbo-samples-async-generated-future, change it into springboot mode

* feat(provider, api, consumer): add License header

* feat(provider, api, consumer): add License header

* fix(provider, api, consumer):  Fatal error compiling: invalid target release

* fix:  fix invalid source version

* fix:  fix invalid source version

* feat:  add some test files

* feat:  update case-configuration.yml

* feat:  update case-configuration.yml

* Update README.md",2023-03-29 02:15:57,Marchons,['2-advanced/dubbo-samples-async/dubbo-samples-async-generated-future-springboot/dubbo-samples-async-generated-future-consumer/src/test/java/org/apache/dubbo/samples/async/consumer/ConsumerApplicationTest.java']
apache/dubbo-samples,https://github.com/apache/dubbo-samples,9138c2a25a22e7f361cc1ee51cad9611acb241b2,2995825d618470bbd85f0362708d380172c45192,https://github.com/apache/dubbo-samples/commit/9138c2a25a22e7f361cc1ee51cad9611acb241b2,"refactor dubbo-samples-async-simple in dubbo-samples-async-simple-boot, from spring-xml to springboot (#802)

* init outside dependency

* create sub module:interface, consumer, provider

* init interface, provider

* provider application

* task define

* modify task

* add case-config

* add test case

* add EmbeddedZooKeeper

* modify case-config and refactor structure

* change java version

* modify provider

* update license info and code style

* update license info",2023-03-28 07:33:25,ax1an9,['2-advanced/dubbo-samples-async/dubbo-samples-async-simple-boot/dubbo-samples-async-simple-boot-consumer/src/test/java/org/apache/dubbo/async/boot/consumer/ConsumerApplicationTest.java']
mttkay/ignition,https://github.com/mttkay/ignition,71f201c9b6e6f054c316d7921954afebbd681971,5d92b7beac5f53184e247959e0d58796abf0a5e1,https://github.com/mttkay/ignition/commit/71f201c9b6e6f054c316d7921954afebbd681971,Refactoring of tests that check location updates based on battery status,2012-01-13 15:29:20,Stefano Dacchille,['ignition-location/location-tests/test/com/github/ignition/location/tests/IgnitedLocationManagerTest.java']
googleapis/google-api-java-client,https://github.com/googleapis/google-api-java-client,e886efaa384bac106f2e5efcc3fb59901c251505,a14925f1b51f8de074ae8e8c708e8cbb6040708b,https://github.com/googleapis/google-api-java-client/commit/e886efaa384bac106f2e5efcc3fb59901c251505,"fix: socketfactory not registered for apache (#1637)

* fix: socketfactory not registered for apache

* refactor code and add test",2020-11-16 17:27:11,arithmetic1728,"['google-api-client/src/test/java/com/google/api/client/googleapis/apache/v2/GoogleApacheHttpTransportTest.java', 'google-api-client/src/test/java/com/google/api/client/googleapis/mtls/MtlsTransportBaseTest.java']"
googleapis/google-api-java-client,https://github.com/googleapis/google-api-java-client,1af916225df868d090b567541241677e0044d05b,22e76833e8e02e5594fc949c749fbfbbd780fb2f,https://github.com/googleapis/google-api-java-client/commit/1af916225df868d090b567541241677e0044d05b,"Fixes incorrectly-ordered arguments to calls to assertEquals
(go/argumentswap-assertequals-lsc).
This change has been automatically generated by an Error Prone check that
detects incorrect argument ordering on calls to assertEquals-style methods. See
go/errorprone/bugpattern/AssertEqualsArgumentOrderChecker

Cleanup change automatically generated by javacflume/refactory
Refactoring: third_party/java_src/error_prone/project/core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects:AssertEqualsArgumentOrderChecker_refactoring

Tested:
    TAP --sample for global presubmit queue
    http://test/OCL:156552667:BASE:156550903:1495206920322:e7f343fb

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=156815249",2017-05-23 01:36:35,andrewrice,"['google-api-client-appengine/src/test/java/com/google/api/client/googleapis/extensions/appengine/auth/oauth2/AppIdentityCredentialTest.java', 'google-api-client/src/test/java/com/google/api/client/googleapis/auth/oauth2/CloudShellCredentialTest.java', 'google-api-client/src/test/java/com/google/api/client/googleapis/auth/oauth2/GoogleCredentialTest.java']"
googleapis/google-api-java-client,https://github.com/googleapis/google-api-java-client,3861e93427de0674a299e78ac1719e10b59ca88f,7af7866fa2aacf22a14d941eb4086ffa8a279648,https://github.com/googleapis/google-api-java-client/commit/3861e93427de0674a299e78ac1719e10b59ca88f,"Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).

For constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees (https://cantata.corp.google.com/?ticket=java:com.google.common.collect.ImmutableCollection).

For more info, see: go/lsc-immutable-constants

Cleanup change automatically generated by javacflume/refactory
Refactoring: //third_party/java_src/error_prone/project/core/src/main/java/com/google/errorprone/bugpatterns:MutableConstantField_refactoring

Tested:
    TAP train for global presubmit queue
    http://test/OCL:148925451:BASE:149092961:1488556431556:efc4b848
    Some tests failed; test failures are believed to be unrelated to this CL

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=150049591",2017-03-14 10:29:19,dorir,['google-api-client/src/test/java/com/google/api/client/googleapis/MethodOverrideTest.java']
mgarin/weblaf,https://github.com/mgarin/weblaf,7ec2a692bee5fd806d2b7f562950cba28d67e365,01846e2985e92ce79da734f12bb50794b0daa40d,https://github.com/mgarin/weblaf/commit/7ec2a692bee5fd806d2b7f562950cba28d67e365,"IconManager [ #348 ]
- IconManager.java - Simplified `IconSet` addition and removal and it is now strict
- IconManager.java - Any `find*` methods can return `null`, while `get*` methods will either return non-`null` value or throw exception
- IconSet.java - Made into a proper base interface for any icon sets and is now used across all related classes instead of `AbstractIconSet`
- XmlIconSet.java - Now uses new `Resource` interface as a source for XML, all path operations were moved into converters
- XmlIconSetConverter.java - New custom converter for `XmlIconSet` that provides necessary context settings for icon converters
- IconSetData.java - Removed as redundant, all icons are read directly into `XmlIconSet`
- AbstractIconDataConverter.java - New custom abstract converter for any kinds of icon data
- XmlUtils.java - Added method for reading various `Resource` types from node attributes for convenience and backward compatibility
- RuntimeIconSet.java - New `IconSet` implementation for convenient runtime icon set creation
- ImageIconData.java, SvgIconData.java - Added various constructors for convenient runtime icon data creation

API
- Resource.java - New interface for any custom resource, provides `InputStream` for reading the resource
- Resource.java - Fully replaced old inconvenient `Resource` (old) class, all related places across the code have been adjusted accordingly
- Resource.java (old), ResourceLocation.java - Removed and replaced by `Resource` interface in API
- UrlResource.java, FileResource.java, ClassResource.java - New `Resource` implementations for most common use cases
- ResourceException.java - Custom `RuntimeException` used for `Resource` implementations exclusively
- DisabledCopySupplier.java - New interface for classes that can return disabled copy of themselves, currently used for complex `Icon`s
- TransparentCopySupplier.java - New interface for classes that can return transparent copy of themselves, currently used for complex `Icon`s

Skins
- WebSkin.java, DarkSkin.java - Renamed to `WebLightSkin` and `WebDarkSkin` accordingly for consistency reasons
- WebLightSkin.java - Moved from `com.alee.skin.web` to `com.alee.skin.light` package for consistency
- web-light-skin.xml - Identifier changed from `weblaf.web.skin` to `weblaf.light.skin` for consistency
- All XML files of different skins and extensions renamed from `skin.xml` and `extension.xml` to more specific names
- Names of placeholder skins like `ModenaSkin` or `FlatSkin` were preserved, but their XML files were renamed

SVG
- SvgIcon.java - Added method for attribute removal
- SvgIcon.java - Will now use separate `SVGUniverse` for each instance
- SvgIconData.java, SvgIconData.xsd - Removed `universe` setting
- AbstractSvgColorAdjustment.java - New abstract adjustment for all `SvgIcon` colors
- SvgColorOpacity.java - New adjustment for `SvgIcon` to change opacity of all colors in the icon
- SvgGrayscale.java - Now based on `SvgColorAdjustment` to simplify code
- SvgOpacity.java - New adjustment for `SvgIcon` to change `opacity` attribute of selected elements
- AbstractSvgAdjustment.java, AbstractSvgAttributeAdjustment.java and other adjustments - Added constructors for convenient usage in code
- pom.xml - Added dependency on SVG Salamander v1.1.2.2 release based on my fork (see https://github.com/mgarin/svgSalamander)

GIF
- GifIcon.java - Now uses `Resource` in constructors instead of hardcoded options
- GifIcon.java - Refactored code and added `@NotNull` and `@Nullable` usage
- GifFrame.java - Moved into separate class for use convenience
- FrameChangeListener.java - Renamed from `RepaintListener` to clarify what kind of events it listens to
- FrameChangeListener.java - Added some basic arguments for usage convenience
- GifDecoder.java - Potential NPE fix and minor code refactoring

NinePatch
- NinePatchIcon.java - Now uses `Resource` in constructors instead of hardcoded options
- NinePatchIcon.java - Replaced static creation method with a proper constructor
- NinePatchIconConverter.java, NinePatchUtils.java - Adjusted for `NinePatchIcon` changes

Icons
- ColorIcon.java - Replaces some old `ImageUtils` methods for creating decorated icon for a specific `Color`
- ColorIcon.java - Now supports ""alpha"" background for `null`, fully-transparent and semi-transparent `Color`s

Decorations
- AlphaLayerBackground.java - Separated static method for alpha texture creation for reuse in other places

TabbedPane
- WTabbedPaneInputListener.java - Fixed exception that occurs when using mouse wheel on top of tabbed pane with zero tabs
- TabbedPaneLayout.java - Disabled icon will only receive updates if tab is disabled to avoid preemptively generating disabled icon

Tree
- TreePainter.java - Node selection will not occur on disabled tree anymore
- TreePainter.java - Removed unnecessary checks, adjusted used utility methods
- WebTreeCellRenderer.java - Removed redundant logic for disabled icon retrieval, it will become disabled on it's own through renderer component (label)

DateField
- WebDateFieldUI.java - Replaced raster hardcoded button icon with configurable `calendar` and `calendar-hover` icons from `IconManager`

Calendar
- WebCalendar.java - Replaced raster hardcoded button icons with configurable `double-left-big`, `left-big`, `right-big` and `double-right-big` icons from `IconManager`

ColorChooserField
- WebColorChooserField.java - Added support for `null` color, it can be set as `null` or user can erase text in the field to change color to `null`
- WebColorChooserField.java - Default selected color is now `null` instead of `Color.WHITE`
- WebColorChooserField.java - Added support for color's alpha in the text field and on the color icon, popup chooser will have that support added later
- WebColorChooserField.java - Replaced utility color icon with a custom `ColorIcon` implementation

ImageGallery
- WebImageGallery.java - Now stores `BufferedImage` instead of `ImageIcon` for usage convenience and less conversion operations
- WebImageGallery.java - New images are now added to the end by default
- WebImageGallery.java - Removed dead-end try-catch on image addition

LanguageManager
- Dictionary.java - Now uses `Resource` in constructors instead of hardcoded options

PluginManager
- PluginManager.java, Plugin.java, DetectedPlugin.java - Replaced `ImageIcon` usage with simple `Icon` for wider icon types support

StyleEditor
- StyleEditor.java - Minor size adjustment for the left side of split
- StyleEditor.java - Now properly launched on EDT
- magnifierImage.png - Removed as redundant

Utilities
- ImageUtils.java - Completely revamped to provide adequate JavaDoc and consistent approach to image read/creation/modification
- ImageUtils.java - Multiple outdated/unnecessary methods have been removed, they can be replaced with new `ImageUtils` methods and/or common image API
- ImageUtils.java - Multiple old auto-cached image retrieval methods have been removed, image cache should not be handled globally like that
- ImageUtils.java - Icon merge methods were replaced with `StackIcon` implementation, caching must now be done locally if necessary
- ImageUtils.java - Icon combine methods were replaced with `FlowIcon` implementation, caching must now be done locally if necessary
- IOUtils.java - New utility class for working with streams
- ColorUtils.java - Adapted hex color conversion methods to RGBA format, previously only RGB was supported
- ColorUtils.java - Removed redundant color cache, there is no point to cache colors as it only makes their usage slower
- FileUtils.java - Refactored all remaining old code, added `@NotNull` and `@Nullable` annotations to clarify use cases
- FileUtils.java - Modified some methods to use `Resource` instead of hardcoded options
- Scale.java, ScaleConverter.java, XmlUtils.java - New data class for `double` X/Y axis scale values
- Clone.java - Added new preconfigured `reflective` option of `Clone` for cloning any chaotic object structures, `Cloneable` or not
- Clone.java - Removed preconfigured `adaptive` option of `Clone` as redundant
- Clone.java - Clarified use cases in JavaDoc for the class
- NetUtils.java - Converted to fail-fast approach to avoid hiding exceptions
- JavaVersion.java - Added `versionString ()` method to retrieve clean version string separately
- JavaVersion.java - Added logging for possible issues with version read
- JavaVersion.java - Improved text output for JDK version 9 and higher
- Objects.java - Minor code refactoring

Tests
- ColorUtils.java - New test for checking validity of various color-related utilities
- ComponentInstantiationTest.java - Adjusted according to `SvgIcon` API changes

General
- WebLookAndFeel.java - Simplified disabled icon retrieval, cache is now implemented within `ImageUtils`
- WebLookAndFeel.java - Simplified library icons/images retrieval code
- AboutLibraryDialog.java - Renamed for convenience, slightly refactored code
- Added `@NotNull` and `@Nullable` usage across all modified classes

DemoApplication
- DemoApplication.java, demo-language.xml - Removed outdated text in the overlay with library and VM version
- DemoApplication.java - Fixed title updated upon closing last preview in document pane
- demo-dark-extension.xml - Added washed wall background for dark extension to mirror light one

Project
- README.md - Added information about all dependencies and 3rd-party code use in WebLaF library
- README.md - Added a few helpful notes about source code and JavaDoc
- README.md - Added two more JVM options necessary to avoid warnings on JDK9+
- README.md - Added Maven Central release badge with link to search for convenience
- CONTRIBUTING.md - Added new and updated some old notes about code philosophy",2019-11-22 15:29:34,mgarin,"['modules/core/test/com/alee/managers/language/LanguageManagerTest.java', 'modules/core/test/com/alee/utils/ColorUtilsTest.java']"
mgarin/weblaf,https://github.com/mgarin/weblaf,84cc05b270010e413fef9e2dc64bcac1cca6f8da,3ea6231ab23bc5d0f9ad7b3d01074e5b304f1abf,https://github.com/mgarin/weblaf/commit/84cc05b270010e413fef9e2dc64bcac1cca6f8da,"CollapsiblePane
- WebCollapsiblePane.java - Completely revamped to provide full styling support, moved into its own package
- CollapsiblePaneLayout.java - New layout implementation that uses animation framework to transition between states
- collapsiblepane.xml - New `WebCollapsiblePane` style that contains a better structure of all included elements

Accordion
- WebAccordion.java - Completely revamped to provide full styling support, moved into its own package
- AccordionPane.java - New class representing a single content pane within `WebAccordion` replacing previously used `WebCollapsiblePane`
- AccordionModel.java - API for any `WebAccordion` model that should handle pane selections and content management
- WebAccordionModel.java - Default `AccordionModel` implementation that should suffice for most use cases
- AccordionLayout.java - New layout implementation that supports animated transition between states
- AccordionSettingsProcessor.java, AccordionState.java, AccordionPaneState.java - New `WebAccordion` state saving implementation
- accordion.xml - New `WebAccordion` style that contains a better structure of all included elements

MultiSplitPane
- WebMultiSplitPane.java - Added layout change check to avoid potential issues
- WebMultiSplitPaneModel.java - Removed redundant check

Combobox
- WebComboBoxUI.java, StyleId.java, combobox.xml - Added `popup` style for popup menu
- WebComboBoxUI.java, StyleId.java, combobox.xml - Renamed `popup` styles to `scrollpane` and `list` for convenience
- combobox.xml - Added a fix for extremely-wide values not being correctly displayed and trimmed within popup list
- combobox.xml - Hidden separator for editable & `hover`-styled combobox, added todo for future improvements
- languagechooser.xml - Adjusted according to `combobox` style changes

Image
- StyleId.java, image.xml - Added a simple portrait style for `WebImage`

Tooltips
- ToolTipProvider.java - Removed redundant value provision in interface methods, it can be retrieved from `ComponentArea` instead
- AbstractToolTipProvider.java - Removed redundant value retrieval, value caching can be done within `ComponentArea` if needed

Styling
- WebUI.java - Added `installUI` and `uninstallUI` methods with appropriate JavaDoc

Animation
- Easing.java - Made serializable and cloneable for usage convenience
- Adjusted all `Easing` implementations according to API changes

Language
- Moved all language updates to appropriate component packages for usage & modification convenience
- Moved language updater -related classes into base language package

Annotations
- NotNull.java, Nullable.java - Added for code writing convenience, will be replaced once implemented in used JDK version
- Added `@NotNull` and `@Nullable` annotations to some of the updated classes, more will be added in future updates

Behaviors
- ParentChangeBehavior.java - New behavior for tracking component parent changes

DarkSkin
- slider.xml, colorchooserfield.xml, filechooserfield.xml, filedrop.xml - New dark version style files
- componentpane.xml - Temporary placeholder for the dark style
- skin.xml - Dark skin doesn't depend on light skin anymore, it's loading should be twice faster now

Utilities
- LafUtils.java - Fixed missing UI exception for some rare cases of `getShape` method call
- SwingUtils.java - Adjusted for component changes, removed redundant conditions
- LafLookup.java - Removed redundant conditions
- NoOpMouseListener.java - Renamed from `EmptyMouseAdapter`
- DescriptiveFileFilter.java - Renamed from `AbstractFileFilterAdapter`

Demo
- WebCollapsiblePaneExample.java, WebAccordionExample.java - Rewritten for new `WebCollapsiblePane` and `WebAccordion` implementations
- ComboboxesGroup.java, JComboBoxExample.java, WebComboBoxExample.java - New examples for `JComboBox` and `WebComboBox`
- LanguageChooserExample.java - New example for `LanguageChooser` component that can change current application language
- ListTooltipExample.java, TableTooltipExample.java, TreeTooltipExample.java - Fixed some generics and adjusted tooltip provider usage

Tests
- ComponentInstantiationTest.java - New advanced test for components instantiation
- image.xml, language.xml - Some sample resources for new test

General
- Refactored multiple classes and updated JavaDoc",2019-08-02 16:09:30,mgarin,['modules/core/test/com/alee/managers/language/LanguageManagerTest.java']
mgarin/weblaf,https://github.com/mgarin/weblaf,dc3927256589553258c4c051caa917e3463b4e48,936f5bc5e999de46866108f194f200502c239394,https://github.com/mgarin/weblaf/commit/dc3927256589553258c4c051caa917e3463b4e48,"Tests
- ComponentDescriptorTest.java - Fixed test according to recent changes
- Minor code refactoring across test classes",2018-05-18 12:18:40,mgarin,"['modules/core/test/com/alee/api/jdk/JvmVersionTest.java', 'modules/core/test/com/alee/managers/language/LanguageManagerTest.java', 'modules/ui/test/com/alee/managers/style/ComponentDescriptorTest.java']"
mgarin/weblaf,https://github.com/mgarin/weblaf,ee72a4906b241fd89c4b24163f72888e0e53c3f6,6d66ea665318362143e0696bf551765f6bc10c3f,https://github.com/mgarin/weblaf/commit/ee72a4906b241fd89c4b24163f72888e0e53c3f6,"Renderers
- Opened some methods across all renderers to allow custom properties to be fired
- Fixed some potential property fire blockers across all renderers
- Finalized some methods to avoid unwanted overrides across all renderers
- Made all static `UIResource` classes final to avoid unwanted usage
- WebColorRenderer.java - Removed old placeholder

Merge
- MergeTest.java - Added field omitting test

Utilities
- ProprietaryUtils.java - Added method that modifies some properties for potential Swing performance increase

General
- Minor code refactoring and JavaDoc improvements",2018-05-07 11:34:34,mgarin,['modules/core/test/com/alee/api/merge/MergeTest.java']
mgarin/weblaf,https://github.com/mgarin/weblaf,2cc4bc4249dd24232cb564472b4753dea28842d8,51bd0d78e757d66ae675822a55560f711ae12ec4,https://github.com/mgarin/weblaf/commit/2cc4bc4249dd24232cb564472b4753dea28842d8,"Clone
- Clone.java - New configurable objects cloning algorithm, implemented in a manner similar to `Merge`
- RecursiveClone.java - Actual cloning algorithm used by `Clone` internally to provide a wider range of features for behaviors
- RecursiveClone.java - It also serves another purpose - preserving source-cloned objects references for avoiding cyclic cloning and duplicates
- UnknownResolver.java - Interface implementations of which decide how `Clone` acts whenever it encounters unknown object type cloning
- GlobalCloneBehavior.java - Interface implementations of which provide basic capabilities for objects cloning
- CloneBehavior.java - Interface that should be implemented by any object that wants to take control over cloning itself
- OmitOnClone.java - New field annotation that dictates `ReflectionCloneBehavior` that a field must be skipped upon cloning
- PreserveOnClone.java - New field annotation that dictates `ReflectionCloneBehavior` that a field value must be preserved upon cloning

Merge
- Merge.java - Can now receive `Clone` instance in one of its constructors to perform merged objects cloning beforehand if requested
- OverwriteOnMerge.java - New field annotation that dictates `ReflectionMergeBehavior` that a field value must always be overwritten upon merging
- PreserveOnMerge.java - New field annotation that dictates `ReflectionMergeBehavior` that a field value must be preserved upon merging
- UnknownResolver.java - Interface implementations of which decide how `Merge` acts whenever it encounters unknown object types merging
- Merge.java, GlobalMergeBehavior.java - Added expected result `Class` type for better merge decisions
- Merge.java - Added methods multiple objects merging

Hotkey
- HotkeyData.java - It is now an immutable object
- HotkeyData.java - Improved hash code generation, removed redundant hash caching

Utilities
- Unsafe.java - Wrapping class for `sun.misc.Unsafe`
- AbstractHashMap.java - An abstract implementation of hash map borrowed from Commons Collections 3.1 and slightly modified
- StrictHashMap.java - An `AbstractHashMap` extension that compares keys and values directly without relying on `equals()`

Tests
- CloneTest.java - New test for `Clone` class
- JvmVersionTest.java - New test for supported JVM versions

General
- Updated all `clone()` overrides to use `Clone` object and/or implement `CloneBehavior` if necessary
- Removed multiple unnecessary `clone()` and `merge(...)` overrides/implementations where they are not necessary anymore
- Performed some minor code and JavaDoc refactorings",2018-04-26 17:51:52,mgarin,"['modules/core/test/com/alee/api/clone/CloneTest.java', 'modules/core/test/com/alee/api/jdk/JvmVersionTest.java', 'modules/core/test/com/alee/api/merge/MergeTest.java', 'modules/core/test/com/alee/utils/ReflectionConstructorTest.java', 'modules/core/test/com/alee/utils/TextUtilsTest.java']"
mgarin/weblaf,https://github.com/mgarin/weblaf,767488b05bdfec4905eb98aae097f7fcdcd7dd45,dc593ee9503c2f8c483b7e42d93ce3e502e13ce2,https://github.com/mgarin/weblaf/commit/767488b05bdfec4905eb98aae097f7fcdcd7dd45,"Multiple major changes and improvements are available with this commit:

1. I've made a full pass on every existing renderer in the library in attempt to streamline them and provide more customization options without necessity to completely rewrite their code. All existing renderers now have three generics in their class - value type (for tables and lists it can be anything, for trees it is now any TreeNode instead of previous DefaultMutableTreeNode), component type (for instance it can be `JList` or `WebFileTable` depending on the use case) and `RenderingParameters` type (this is a completely new thing, parameters instance is created on each separate cell rendering call and contains cell-specific settings which vary based on renderer).

2. `WebMultiSplitPane` basic implementation is now available [ #477 ]. It still doesn't have some of the advanced options I was planning to add to it but it is fully functional and provides a clean and convenient API to configure initial split position and resize ratios, adjust components on the fly and allows saving and restoring position data with just one line of code.

3. `WebDirectoryChooser` light and dark styling have been adjusted to stay in line with other existing components and especially with `JFileChooser` styling. Also `Desktop` quick access button have been added into both `WebDirectoryChooser` and `JFileChooser` implementations on systems where it can be easily found, for the rest it will remain hidden.

4. Some outdated interfaces like `TextProvider` have been removed in favor of using ones similar to later JDK releases like `Function` or `Supplier`. This is not the final pass and I still have my eyes on a few more interfaces I would like to get rid of within this update.

You can also check more detailed changes to each of the files in this commit below.

Renderers
- IconBridge.java, TextBridge.java, ForegroundBridge.java - New bridge interfaces between various renderers and rendered values
- IconSupport.java, TitleSupport.java - Replaced by bridge `RenderingBridge` interface implementations
- RenderingParameters.java - New base interface for various runtime rendering parameters
- EmptyRenderingParameters.java - Singleton `RenderingParameters` implementation that doesn't have any actual parameters
- Added value, component and parameters generics support across all existing renderers
- StrokeSupport.java, ColorSupport.java - Removed as too obscure and redundant
- Skin.java, SkinExtension.java, SkinInfo.java - Removed redundant interface implementations
- FeatureState.java - Removed redundant interface implementation
- Easing.java - Removed redundant interface implementation

Content
- LocaleTextContent.java - Renamed from `LanguageItemLocale` and now uses `JComponent`'s `Locale` instead of a client property

Decoration
- WebDecoration.java - Temporary changed grouping borders painting code to be based on `LineBorder` exclusively
- This change shouldn't affect any of existing styles and will in future be replaced with a proper grouping painting implementation

MultiSplitPane [ #477 ]
- WebMultiSplitPane.java - New component that can be used instead of base Swing `JSplitPane` to provide multiple split views
- MultiSplitPaneModel.java - `WebMultiSplitPane` model interface that has all required methods in it
- MultiSplitPaneSettingsProcessor.java - SettingsProcessor implementation that is able to save `WebMultiSplitPane` state
- WebMultiSplitPaneDivider.java - New component that is used as `WebMultiSplitPane` divider
- multisplitpane.xml - New default light and dark styles for `WebMultiSplitPane` component
- multisplitpanedivider.xml - New default light and dark styles for `WebMultiSplitPaneDivider` component

Trees
- Changed all `DefaultMutableTreeNode` usages to `TreeNode` and `MutableTreeNode` interfaces
- TreeCellParameters.java - `RenderingParameters` implementation for tree renderers
- WebTreeCellRenderer.java - Changed node type generic to use `TreeNode` as base
- Custom `TreeNode` and `MutableTreeNode` implementations should now properly work with trees, models and renderers
- WebTreeNode.java - `DefaultMutableTreeNode` replacement with generified methods and minor improvements
- WebTreeFilterField.java - Removed redundant `WeakReference` to the tree for which filter is used

List [ #153 ]
- ListCellParameters.java - `RenderingParameters` implementation for list renderers
- WebListModel.java - Added extra methods to add/set/remove data
- WebListModel.java - Removed some of the redundant methods
- WebListModel.java - Updated JavaDoc for existing methods
- CheckBoxListModel.java - Added data generic, removed redundant methods

ComboBox
- ComboBoxCellParameters.java - `RenderingParameters` implementation for combobox renderers
- WebComboBoxModel.java - Got simplified and is now also based on `WebListModel` implementation
- WebComboBoxModel.java - Doesn't reuse any of the passed arrays or collections
- WebComboBox.java - Replaced default model usages with `WebComboBoxModel`

Table
- TableCellParameters.java - `RenderingParameters` implementation for table renderers
- WebFileTableCellRenderer.java - Refactored to make use of new APIs
- WebFileTableCellRenderer.java - Added `UIResource` implementation for future usage
- FileTableCellParameters.java - `RenderingParameters` implementation for file table renderers
- table.xml - Moved default renderer alignment into renderer implementations for convenience

Link
- WebLink.java - Doesn't use `IconSupport` or `TitleSupport` anymore and instead relies on `LinkAction` methods
- LinkAction.java - Can now provide customized `WebLink` icon and text if necessary
- AbstractLinkAction.java - Abstract `LinkAction` implementation containing predefined icon and text
- Simplified various `LinkAction` implementations, some of them are now based on `AbstractLinkAction`

Popup
- WebPopup.java - Replaced drag behavior with smarter resize behavior usage
- WebPopup.java - Removed unnecessary lock object and added EDT checks
- WebPopup.java - Separated `ResizeDirections` class for convenience
- WebPopup.java - Adjusted fields for class to be serializable

Layout
- GroupPaneLayout.java - Simplified descriptors calculation code
- GroupPaneLayout.java - Minor code and JavaDoc refactoring
- GridSize.java - Added missing JavaDoc
- AbstractLayoutManager.java - Made Swing methods final to avoid incorrect methods override
- MultiLayout.java - Adjusted according to `AbstractLayoutManager` changes
- AbstractLineLayout.java - Added methods to retrieve and change spacing and parts spacing
- ToolbarLayout.java - Added more constructors to allow providing basic settings directly
- TableLayout.java, SingleFiledLayout.java - Cleaned up and refactored code
- Streamlined variable names across all existing layouts

FileChooser
- WebFileChooserPanel.java - Added quick button to move to desktop folder on systems where it can be located
- WebFileChooserPanel.java - Fixed excessively large spacing between elements in top and bottom bars

DirectoryChooser
- WebDirectoryChooserPanel.java - Added quick button to move to desktop folder on systems where it can be located
- WebDirectoryChooserPanel.java - Added missing styles for path field, tree and its scroll
- WebDirectoryChooserPanel.java - Replaced old drive icon with a new one
- WebDirectoryChooserPanel.java, directorychooser.xml - Improved default chooser styles
- directorychooser.xml - Added Dark skin chooser style

InterfaceInspector
- ComponentHighlighter.java - Tooltip position now adapts to inspected component position on the window for best preview

File
- Replaced all `File.getParentFile()` methods with `File.getParent()` usages instead to avoid issues

EventDispatchThread
- SettingsProcessor.java, SettingsManager.java - Added EDT checks in all methods that should be run on EDT
- PainterSupport.java - Removed unnecessary tree lock usage and added EDT check instead

Notifications
- NotificationManager.java - Replaced `WebLabel` with `WebStyledLabel` as default notification content component

API
- Objects.java - Temporary replacement for `java.util.Objects` which is not available in JDK6

Behaviors
- ComponentResizeBehavior.java - Now allows component drag just like `ComponentMoveBehavior` whenever direction is `CompassDirection.center`
- ComponentResizeBehavior.java - Fixed cursor reset upon finishing resize/drag operation
- ComponentResizeBehavior.java - Removed static methods and replaced them with instance-related ones
- ComponentMoveBehavior.java, ComponentResizeBehavior.java - Added `MouseEvent` consume upon drag/resize operations
- ComponentMoveBehavior.java, ComponentResizeBehavior.java - Updated JavaDoc

Utilities
- SwingUtils.java - Doesn't extend `CoreSwingUtils` anymore for usage transparency
- SwingUtils.java, WSplitPaneListener.java - Removed proprietary API usage
- TextUtils.java - Fixed return results for word boundary detection methods
- WebTimer.java - Made `Serializable` for convenience of usage within Swing components
- TopologicalSorter.java - Appropriate replacement for static `SortUtils`
- Node.java, Edge.java - Moved into `TopologicalSorter` as private static inner classes
- CollectionUtils.java - Added `distinct(List)` utility method
- SortUtils.java - Removed as redundant
- TextProvider.java - Removed as redundant, `Function<String,T>` is now used instead
- IntegerComparator.java - `Comparator` implementation for `Integer` values
- EmptyEnumeration.java - Singleton `Enumeration` implementation that has no elements

Tests
- FileUtilsTest.java - New test for some `FileUtils` methods, specifically for `FileComparator` that uses complex sorting algorithm
- file-name-sorting.txt - Simple resource containing a big list of file names to sort
- TextUtilsTest.java - New test for some `TextUtils` methods, specifically for word detection and word boundary detection ones

Demo
- WebDirectoryChooserExample.java, directorychooser.png - Added example for `WebDirectoryChooser` component
- JFileChooserExample.java - Minor fixes and improvements for example notifications
- Minor code refactoring and updates related to other changes from this commit

Project
- Removed multiple unnecessary `@SuppressWarnings` statements across the code
- intellij-idea-code-style.xml - Updated code style settings for IntelliJ Idea IDE
- intellij-idea-inspections.xml - Updated code inspection settings for IntelliJ Idea IDE",2018-03-23 16:29:25,mgarin,['modules/core/test/com/alee/utils/TextUtilsTest.java']
mgarin/weblaf,https://github.com/mgarin/weblaf,858bd8f9611db132105e956a7ee01f1e962acdff,7d8e0fc223196fb369ba8e852f975030ebb8ef29,https://github.com/mgarin/weblaf/commit/858bd8f9611db132105e956a7ee01f1e962acdff,"Major `LanguageManager` revamp
`LanguageManager` was changed to allow requesting translations for multiple languages simultaneously and also to provide full support for any country codes. Big changes have also been made to features available within core `LanguageManager` and its UI counterpart - `WebLanguageManager`. Manger API was also slightly improved to reflect the changes.

JUnit tests
With this commit I have added first two JUnit tests for `LanguageManager` and `Merge` as the most intricate things within the library so far (not counting `StyleManager` but it will surely be covered later as well). I intend to add more tests in the future to cover most complicated library parts and make sure no major issues are going into any branches.

Language
- LanguageManager.java - Doesn't contain any UI-related code anymore, those have been moved into `WebLanguageManager` class
- LanguageManager.java - Doesn't change locale according to provided language anymore [ #272 #457 ]
- LanguageLocaleUpdater.java - `LanguageListener` implementation that can be used to auto-update default `Locale` with `LanguageManager` one
- Language.java - New class providing access to translations based on `Locale` it stores, multiple instances provide access to multiple languages
- LM.java - Reworked to provide convenient access to default `Language` instance or any other `Language` that is provided by customizable supplier
- LanguageListener.java - Now only provides `Language` change event instead of being all-in-one listener
- DictionaryListener.java - Now provides all `Dictionary`-related events instead of `LanguageListener`
- LanguageConstants.java - Removed as redundant, all/supported locales can now be properly requested from `LanguageManager`
- Dictionary.java - Removed `author`, `creationDate` and `notes` fields as redundant
- Dictionary.java - Now contains all transient record and dictionary caches within itself
- Dictionary.java - Renamed `languageInfos` into `translations` to reflect its actual meaning
- Dictionary.java - Added methods to retrieve ""all"" and ""fully supported"" locales
- TranslationInformation.java - Renamed from `LanguageInfo` and refactored
- TranslationInformation.java - Language replaced with `locale` field to allow using country codes (ex. `en-GB` or `en-US`)
- TranslationInformation.java - Removed `info` field as redundant
- LanguageMethods.java - Now added to all existing Web-components as it can properly apply tooltip-only translations
- JTextComponentLU.java - Now detects `IInputPrompt` interface usages in component or UI to provide translation for it
- WebTextFieldLU.java, WebPasswordFieldLU.java, WebFormattedTextFieldLU.java - Removed as redundant
- WebAbstractButtonLU.java - Removed as redundant, `AbstractButtonLU` fulfills its role now
- WebLanguageUpdater.java - Removed as redundant as hotkeys are not supported by `LanguageManager` anymore
- LanguageUpdaterSettings.java - Removed as a bad settings design, configuration remains within `JTabbedPaneLU`
- LanguageSensitive.java - New marker interface created to assist UI components with detecting language-sensitive content
- ListPainter.java, TreePainter.java, TablePainter.java - Updated to react to language-sensitive component, models, renderers and data
- language.xml - Have been replaced with separate `core`, `ui` and `demo` XML dictionaries [ #470 ]
- core-language.xml - New XML dictionary for `core` module
- ui-language.xml - New XML dictionary for `ui` module
- demo-language.xml - New XML dictionary for `demo` module
- en_GB.png, en_US.png - New language variation icons

LanguageChooser
- LanguageChooser.java - New customizable language chooser based on supported `LanguageManager` locales
- LanguageChooserModel.java - Provides a list of supported or predefined locales
- languagechooser.xml - Separate light and dark styles for `LanguageChooser`

HeatMap
- HeatMap.java - New UI debugging tool that paints rendering time heat map over the UI

Tree
- TreeWalker.java - New interface providing options to conveniently iterate `JTree` nodes
- AbstractTreeWalker.java - Abstract `TreeWalker` containing implementations for basic methods
- SimpleTreeWalker.java - `TreeWalker` implementation for simple trees like `JTree`, `WebTree` and `WebExTree`
- AsyncTreeWalker.java - `TreeWalker` implementation for `WebAsyncTree` that contains some workarounds
- TreeUtils.java - Added method to retrieve `TreeWalker` implementation compatible with provided `JTree`

Renderers
- WebListCellRenderer.java, WebTreeCellRenderer.java, WebTableCellRenderer.java - Fixed performance issues for disabled icons
- WebListCellRenderer.java, WebTreeCellRenderer.java - Added hover decoration state support

Components
- Added missing implementations for `ContainerMethods`, `EventMethods` and `ToolTipMethods`

Style
- StyleId.java, ComponentStyle.java - Expanded complete style identifier to avoid style caches overwriting each other
- StyleManager.java, StyleData.java - Fixed a critical issue that might break skins loading order
- MovingHighlightBackground.java - Added appropriate cleanup on deactivation, optimized and refactored code
- MenuItemLayout.java - It is now more flexible and can be applied to any component, not just `JMenuItem`
- RoundRectangle.java - Fixed preferred size calculation

ComboBox
- WebComboBoxModel.java - Replacement for default `DefaultComboBoxModel` with generic item type and additional methods
- ComboBoxPainter.java - Removed redundant font and background updates from painting methods
- WebComboBoxRenderer.java - Added new `pressed`, `expanded` and `collapsed` states for renderer component

MenuItem
- AbstractMenuItemLayout.java - Contains most of the code previously stored in `MenuItemLayout`
- MenuItemLayout.java - Only includes `JMenuItem`-related features now
- SimpleMenuItemLayout.java - New simplified menu item layout that is not tied to `JMenuItem` type and can be used separately

DocumentPane
- WebDocumentPane.java - Added ""select"" option for document open methods to allow choosing whether or not opened document tab should be selected
- PaneData.java, ui-language.xml - Added ""Close all"" menu option for all tabs

DateField
- WebDateFieldUI.java - Added ""Escape"" hotkey for closing calendar popup

Collection duplicate resolver
- DuplicateResolver.java - Base interface for any class that detects and resolves duplicates within any `Collection`
- AbstractDuplicateResolver.java - Abstract `DuplicateResolver` containing some basic methods for usage convenience
- IgnoreDuplicates.java, RejectDuplicates.java, RemoveDuplicates.java - Basic `DuplicateResolver` implementations
- DuplicateException.java - Special exception type used within `DuplicateResolver` implementations

Object matcher
- Matcher.java - Base interface for any kinds of object matchers
- AbstractMatcher.java - Abstract `Matcher` that uses generic types for matched objects
- EqualMatcher.java, IdentifiableMatcher.java, SkippingMatcher.java - Basic `Matcher` implementations

Merge
- ListMergeBehavior.java - Have been greatly improved and made configurable with `Matcher` and `DuplicateResolver` usage
- IndexListMergeBehavior.java - New simple list elements merge behavior for index-to-index merge
- Overwriting.java - Now implements `Mergeable` by default
- RelativeTypeMergePolicy.java - Renamed from `RelatedTypeMergePolicy` for convenience
- Mergeable.java, GlobalMergeBehavior.java - Minor JavaDoc improvements

Clone
- Clone.java - Added minor improvement to allow `Clone` to set final values

API
- BiPredicate.java - `BiPredicate` from JDK8 for later porting convenience

DemoApplication
- DemoApplication.java - Added `HeatMap` tool
- Updated multiple classes according to code changes

LibraryInfoDialog
- LibraryInfoDialog.java - Refactored and cleaned up code, moved styles into extension
- LibraryInfoExtension.java, LibraryInfoIconSet.java - Extension and icon set for `LibraryInfoDialog`
- info-extension.xml, info-icons.xml, java.svg - Resources for `LibraryInfoDialog`

Utilities
- ImmutableSet.java - New unmodifiable `Set` implementation
- IconUtils.java - New utility class providing methods for various icon manipulations
- FileUtils.java - Added method to filter out unwanted symbols from text for file name
- ArrayUtils.java - Added methods to compare arrays
- CollectionUtils.java - Added method to retrieve maximum element from collection according to comparator

Project
- pom.xml - Updated to include JUnit library as test dependency
- build.properties - Updated path to `LibraryInfoDialog`
- Added currently used JUnit library version and its dependencies",2017-11-08 18:03:51,mgarin,"['modules/core/test/com/alee/api/merge/MergeTest.java', 'modules/core/test/com/alee/managers/language/LanguageManagerTest.java']"
PebbleTemplates/pebble,https://github.com/PebbleTemplates/pebble,68ac8b0c54b64d42f1c3b76f25d72a12c046ca5e,0fb915c715afb9d8ef8412a19f90ab828feac5c1,https://github.com/PebbleTemplates/pebble/commit/68ac8b0c54b64d42f1c3b76f25d72a12c046ca5e,"Refactor the handling of relative path handling to make sure all JUnit
tests work.",2015-11-04 10:40:23,Thomas Hunziker,['src/test/java/com/mitchellbosecke/pebble/utils/PathUtilsTest.java']
PebbleTemplates/pebble,https://github.com/PebbleTemplates/pebble,df029427e5f8d5ade0f53641db1847ec8fd9725e,7249d39f691c4964080f777b9f88c18c706d0a9d,https://github.com/PebbleTemplates/pebble/commit/df029427e5f8d5ade0f53641db1847ec8fd9725e,Refactored test for issue #41 and implemented a fix. Fixes #41,2014-10-13 00:41:33,Mitchell Bosecke,['src/test/java/com/mitchellbosecke/pebble/CoreTagsTest.java']
PebbleTemplates/pebble,https://github.com/PebbleTemplates/pebble,9f2ca70f02410639e2fa177bc08a144a91807abf,afd42d7c0b750205e64806823919deaefceef277,https://github.com/PebbleTemplates/pebble/commit/9f2ca70f02410639e2fa177bc08a144a91807abf,Major refactoring of filters/tests/functions/macros to prepare for named arguments,2014-02-06 02:29:34,Mitchell Bosecke,"['src/main/java/com/mitchellbosecke/pebble/extension/Test.java', 'src/main/java/com/mitchellbosecke/pebble/extension/core/EmptyTest.java', 'src/main/java/com/mitchellbosecke/pebble/extension/core/EvenTest.java', 'src/main/java/com/mitchellbosecke/pebble/extension/core/IterableTest.java', 'src/main/java/com/mitchellbosecke/pebble/extension/core/NullTest.java', 'src/main/java/com/mitchellbosecke/pebble/extension/core/OddTest.java']"
PebbleTemplates/pebble,https://github.com/PebbleTemplates/pebble,8e3e64365db14bb30af49b107587987ed1788f19,124ae987c58a0280b94c45f6658a1280fd3d7c3a,https://github.com/PebbleTemplates/pebble/commit/8e3e64365db14bb30af49b107587987ed1788f19,Refactored the function/filter/test interfaces into functional interfaces,2014-01-28 02:21:27,Mitchell Bosecke,['src/main/java/com/mitchellbosecke/pebble/extension/Test.java']
PebbleTemplates/pebble,https://github.com/PebbleTemplates/pebble,2482463e06c3679389a513983a0f8358c41efb7e,4b4a249691e1e8f2842cfecd33ae2874c3a3878d,https://github.com/PebbleTemplates/pebble/commit/2482463e06c3679389a513983a0f8358c41efb7e,Refactored unit tests using new string loader,2013-11-06 02:33:52,Mitchell Bosecke,"['src/test/java/com/mitchellbosecke/pebble/CompilerTest.java', 'src/test/java/com/mitchellbosecke/pebble/CoreFiltersTest.java', 'src/test/java/com/mitchellbosecke/pebble/CoreFunctionTest.java', 'src/test/java/com/mitchellbosecke/pebble/CoreOperatorTest.java', 'src/test/java/com/mitchellbosecke/pebble/CoreTestsTest.java', 'src/test/java/com/mitchellbosecke/pebble/CoreTokenParsersTest.java', 'src/test/java/com/mitchellbosecke/pebble/GetAttributeTest.java', 'src/test/java/com/mitchellbosecke/pebble/InheritanceTest.java', 'src/test/java/com/mitchellbosecke/pebble/ParsingOdditiesTest.java', 'src/test/java/com/mitchellbosecke/pebble/PebbleEngineTest.java']"
openzipkin/brave,https://github.com/openzipkin/brave,84b695c7b0d16b7dedf7c6e247b547b125729d73,ed9bc0f6a71abcf1a813875e3d90dc06045903f7,https://github.com/openzipkin/brave/commit/84b695c7b0d16b7dedf7c6e247b547b125729d73,"Support Apache HttpClient 5.2+ (#1274)

* Support Apache HttpClient 5.0+

* Support classic/async/h2async client

* Follow the comment

* remove private
* reuse same type of test
* reduce verbose code in test
* add bnd.bnd

* Follow the comment

* remove service name treatment.

* Refactor builder

* Fix the code. Override some special method due to behavior is different between caching/non-caching and async/h2.

* First README

* Update the pom.xml and add header

* Follow the suggestions in the comments.

* Add HttpResponseWrapperTest

* Renaming

* Update version to support httpclient5

* Fix deprecated method

* Fix version

* Fix version in document

* Fix the optional cache issue & update the header/document

* rename

* Fix license header",2023-04-17 17:33:53,Koji Lin,['instrumentation/httpclient5/src/test/java/brave/httpclient5/HttpResponseWrapperTest.java']
openzipkin/brave,https://github.com/openzipkin/brave,f7db2bf0f527bc9c42f4836bf13bcce9ac340df1,0501ffc8b37d6e65749b34f2fd4d5f5ec121f7ef,https://github.com/openzipkin/brave/commit/f7db2bf0f527bc9c42f4836bf13bcce9ac340df1,Refactors test so no more deps (#1269),2020-11-02 13:53:16,Adrian Cole,"['instrumentation/http/src/test/java/brave/http/HttpTracingTest.java', 'instrumentation/p6spy/src/test/java/brave/p6spy/TracingJdbcEventListenerTest.java']"
openzipkin/brave,https://github.com/openzipkin/brave,e301ec3338d1f63d0185d35cc4e997a664b57c7d,e13017a0a85ecbdb25833a00710709adfdc04d25,https://github.com/openzipkin/brave/commit/e301ec3338d1f63d0185d35cc4e997a664b57c7d,"Ensures http route attribute is written and read on the same thread (#718)

This refactors code that reads http route information to do so on
completion of the request. This avoids any thread visibility concerns
such as when request starts and completes on different threads (async).

This also hardens tests which were false positive due to
misconfiguration. Notably, async mode was not enabled on async servlet
tests and the way things were written, the failures went unnoticed.",2018-06-14 08:59:39,Adrian Cole,"['instrumentation/jersey-server/src/test/java/brave/jersey/server/TracingApplicationEventListenerAdapterTest.java', 'instrumentation/spring-webmvc/src/test/java/brave/spring/webmvc/SpanCustomizingAsyncHandlerInterceptorTest.java', 'instrumentation/spring-webmvc/src/test/java/brave/spring/webmvc/SpanCustomizingHandlerInterceptorTest.java']"
openzipkin/brave,https://github.com/openzipkin/brave,5c9eb38cbf5076813e9841a0fedf6951a5dc1eb8,d60036155c1f8023fbc2f9a9a8d7347af125f3cf,https://github.com/openzipkin/brave/commit/5c9eb38cbf5076813e9841a0fedf6951a5dc1eb8,"Refactors HTTP SpanCollector tests to use ZipkinRule

This replaces direct usage of MockWebServer with ZipkinRule.",2016-02-24 04:03:38,Adrian Cole,['brave-spancollector-http/src/test/java/com/github/kristofa/brave/http/HttpSpanCollectorTest.java']
h2oai/h2o-2,https://github.com/h2oai/h2o-2,02addac27539ded62d21f0ad97dfd160f2e04989,1f748c8ca2a1486d3c7564e1a8e9c44e4bd79731,https://github.com/h2oai/h2o-2/commit/02addac27539ded62d21f0ad97dfd160f2e04989,"Introduce mvn-based publisher for sonatype.

- parent POM file defining H2O build process
- h2o-core POM file which allows for building and publishing h2o-core
- strict separation between application code and test code
  - moved all tests from main/java into test/java
  - refactored all dependencies from core code into test code
    - mainly TestUtil dependencies
  - create FrameUtils, VAUtils extracting helper functions from
    TestUtils
  - removed methods from TestUtils which are not used
- see more for sonatype requirements here:
  - https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide",2014-04-08 02:20:03,mmalohlava,"['src/test/java/hex/deeplearning/DropoutTest.java', 'src/test/java/hex/deeplearning/NeuronsTest.java', 'src/test/java/water/api/HitRatioTest.java', 'src/test/java/water/util/ModelUtilsTest.java', 'src/test/java/water/util/UtilsTest.java']"
h2oai/h2o-2,https://github.com/h2oai/h2o-2,7496c599664273dec4fe820078a66b21abe138cf,6e7485cee325df8c8e3827988fb6b186ad9959a8,https://github.com/h2oai/h2o-2/commit/7496c599664273dec4fe820078a66b21abe138cf,"Squashed commit of the following:

commit 0893a568210aa8a6719ce3026756d17ddecba973
Merge: 8909521 6e7485c
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Sat Apr 27 06:04:14 2013 +0200

    Merge remote-tracking branch 'origin/master' into rfjobs

    Conflicts:
    	src/main/java/hex/rf/DRF.java

commit 890952112d1fc05a1750d532bb9afbefdc1ecd11
Merge: f38823a 78506e1
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Sat Apr 27 05:53:27 2013 +0200

    Merge remote-tracking branch 'origin/master' into rfjobs

    Conflicts:
    	src/main/java/hex/rf/DABuilder.java
    	src/main/java/hex/rf/DRF.java
    	src/main/java/hex/rf/RandomForest.java
    	src/test/java/hex/rf/RFPredDomainTest.java
    	src/test/java/hex/rf/RandomForestTest.java
    	src/test/java/water/parser/DatasetCornerCasesTest.java

commit f38823a9c3fed9da6c861cd4044a1f2de41dceea
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Sat Apr 27 02:19:36 2013 +0200

    RFView page upgraded.

commit 1cb993d8ba93063d36222247258fcfe22997721e
Merge: 2c2ad7f 1bb50c1
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Sat Apr 27 01:30:34 2013 +0200

    Merge remote-tracking branch 'origin/master' into rfjobs

    Conflicts:
    	src/main/java/hex/rf/DABuilder.java
    	src/main/java/hex/rf/DRF.java
    	src/main/java/hex/rf/RandomForest.java

commit 2c2ad7f664c873157edfcf809741e570815604ce
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Sat Apr 27 01:19:26 2013 +0200

    Next step in RF polishment

commit baf7d250deaa74002693547c009dd47b0e3de91b
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Fri Apr 26 23:28:35 2013 +0200

    RF model computation time

commit 6ed2e807ff0985d20c7294bdc19ee2ca8525a0c5
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Fri Apr 26 23:28:13 2013 +0200

    Merging..

commit bf4e2cfdb8f13dd4d2899483af0c99751527c32a
Merge: afa9c65 40cf941
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Fri Apr 26 07:57:06 2013 +0200

    Merge remote-tracking branch 'origin/master' into rfjobs

    Conflicts:
    	src/main/java/hex/rf/DABuilder.java
    	src/main/java/hex/rf/RandomForest.java
    	src/test/java/water/parser/DatasetCornerCasesTest.java

commit afa9c65de357fc194d741e0caae80fa77899ec9f
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Fri Apr 26 03:49:45 2013 +0200

    In progress.

commit c4676363300833f4f62a545eb157d7e3491a3b1c
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Fri Apr 26 03:35:00 2013 +0200

    changes in tests

commit 1fbc669c6d4a13076cf047699721c897e004b88c
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Fri Apr 26 03:34:30 2013 +0200

    RF refactoring.

commit 3e207e12bfa766f02182256d3a42035f5e445349
Merge: 7933cdd f50b2d3
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Thu Apr 25 00:11:41 2013 +0200

    Merge remote-tracking branch 'origin/master' into rfjobs

    Conflicts:
    	src/main/java/hex/rf/DataAdapter.java

commit 7933cdd15731240cd4b113faa78e162897c0df26
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Wed Apr 17 01:35:14 2013 +0200

    removed duplicate method introduced by merge with master.

commit a7f17a6aef0f0c6c20a6cd5aa8b60e272f2e702b
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Fri Apr 12 04:36:23 2013 +0200

    DRF Job - missing file.

commit f189a36f862ef13c4de7023b841f90342ca395d7
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Fri Apr 12 04:35:20 2013 +0200

    DRF jobs

commit 3ee76070e10b55813a1232ad74b078abe59c183d
Author: mmalohlava <michal.malohlava@gmail.com>
Date:   Tue Apr 9 06:41:02 2013 +0200

    Before RF-job refactoring.",2013-04-27 04:06:37,mmalohlava,"['src/test/java/hex/rf/RFPredDomainTest.java', 'src/test/java/hex/rf/RandomForestTest.java', 'src/test/java/water/parser/DatasetCornerCasesTest.java']"
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,88de0e52c44282fb4d2bd53121c1e07a1ba76d68,3365ab6a9585cf165a235fd8a68b288b1729423c,https://github.com/FasterXML/jackson-core/commit/88de0e52c44282fb4d2bd53121c1e07a1ba76d68,Final test refactoring wrt parser/generator auto-close,2023-08-27 07:01:56,Tatu Saloranta,"['src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java', 'src/test/java/com/fasterxml/jackson/core/read/NumberCoercionTest.java', 'src/test/java/com/fasterxml/jackson/core/read/NumberParsingTest.java', 'src/test/java/com/fasterxml/jackson/core/read/ParserScopeMatchingTest.java', 'src/test/java/com/fasterxml/jackson/core/read/ParserSymbolHandlingTest.java', 'src/test/java/com/fasterxml/jackson/core/read/SimpleParserTest.java', 'src/test/java/com/fasterxml/jackson/core/read/TrailingCommasTest.java']"
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,ec3504be64d1b9a77609e6afe2a57874a973dd98,6fc207bd1f4d826852efec04aae915df586174e8,https://github.com/FasterXML/jackson-core/commit/ec3504be64d1b9a77609e6afe2a57874a973dd98,Further refactoring of IOContext creation for tests,2023-08-26 21:51:11,Tatu Saloranta,"['src/test/java/com/fasterxml/jackson/core/BaseTest.java', 'src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java', 'src/test/java/com/fasterxml/jackson/core/write/UTF8GeneratorTest.java']"
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,1459acc13b4d9ff91409dec775fb83a343ff5a71,eae1edc4ac1d5c9e25c00dda740d6bd5685494cb,https://github.com/FasterXML/jackson-core/commit/1459acc13b4d9ff91409dec775fb83a343ff5a71,More test refactoring,2023-03-06 01:52:58,Tatu Saloranta,"['src/test/java/com/fasterxml/jackson/core/constraints/DeeplyNestedArrayReadTest.java', 'src/test/java/com/fasterxml/jackson/core/constraints/DeeplyNestedContentReadTest.java', 'src/test/java/com/fasterxml/jackson/core/constraints/LargeNumberReadTest.java']"
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,eae1edc4ac1d5c9e25c00dda740d6bd5685494cb,d4627cda9b7aa387a1fe4d232396ca21cb8e3550,https://github.com/FasterXML/jackson-core/commit/eae1edc4ac1d5c9e25c00dda740d6bd5685494cb,Refactor tests for constraints-violations a bit (new package) (#944),2023-03-06 01:29:39,Tatu Saloranta,"['src/test/java/com/fasterxml/jackson/core/constraints/DeeplyNestedArrayReadTest.java', 'src/test/java/com/fasterxml/jackson/core/constraints/LargeNumberReadTest.java', 'src/test/java/com/fasterxml/jackson/core/constraints/LargeNumberWriteTest.java', 'src/test/java/com/fasterxml/jackson/core/read/ArrayParsingTest.java', 'src/test/java/com/fasterxml/jackson/core/read/NumberParsingTest.java']"
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,b886bc8bbfe64f9e6be36e5892fa30e74a03bd6a,6bfc8291e72338896da097f17fd8628fff5e95b7,https://github.com/FasterXML/jackson-core/commit/b886bc8bbfe64f9e6be36e5892fa30e74a03bd6a,Minor test refactoring,2022-10-11 03:04:35,Tatu Saloranta,"['src/test/java/com/fasterxml/jackson/core/jsonptr/Fuzz51806JsonPointerParse818Test.java', 'src/test/java/com/fasterxml/jackson/core/jsonptr/JsonPointerTest.java', 'src/test/java/com/fasterxml/jackson/core/jsonptr/PointerFromContextTest.java']"
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,2f3f2e65eaacdbc9a6da687078368a9ae11c1b15,034f673c1655f8a23990ca94cb0673c1a408ae5d,https://github.com/FasterXML/jackson-core/commit/2f3f2e65eaacdbc9a6da687078368a9ae11c1b15,test refactoring,2020-01-03 22:08:36,Tatu Saloranta,"['src/test/java/com/fasterxml/jackson/core/read/NonStandardParserFeaturesTest.java', 'src/test/java/com/fasterxml/jackson/core/read/NonStandardUnquotedNamesTest.java']"
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,034f673c1655f8a23990ca94cb0673c1a408ae5d,f49d72edd072c6674981381870863214e626d4d3,https://github.com/FasterXML/jackson-core/commit/034f673c1655f8a23990ca94cb0673c1a408ae5d,test refactoring,2020-01-03 22:00:24,Tatu Saloranta,"['src/test/java/com/fasterxml/jackson/core/read/NonStandardAposQuotedNamesTest.java', 'src/test/java/com/fasterxml/jackson/core/read/NonStandardParserFeaturesTest.java']"
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,85734524c1de6d5706fce6e05cdb2541cdac5dc2,ed3f449aec2ea28e0fd3404ee4d03f45df5977f3,https://github.com/FasterXML/jackson-core/commit/85734524c1de6d5706fce6e05cdb2541cdac5dc2,Test refactoring,2019-12-31 02:48:33,Tatu Saloranta,"['src/test/java/com/fasterxml/jackson/core/write/GeneratorArrayTest.java', 'src/test/java/com/fasterxml/jackson/core/write/GeneratorClosingTest.java', 'src/test/java/com/fasterxml/jackson/core/write/GeneratorCopyTest.java', 'src/test/java/com/fasterxml/jackson/core/write/GeneratorMiscTest.java']"
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,ed3f449aec2ea28e0fd3404ee4d03f45df5977f3,48c2d89b35e1fbd4625d3d5c247c7474b992d48d,https://github.com/FasterXML/jackson-core/commit/ed3f449aec2ea28e0fd3404ee4d03f45df5977f3,more test refactoring,2019-12-31 02:45:56,Tatu Saloranta,"['src/test/java/com/fasterxml/jackson/core/read/NumberParsingTest.java', 'src/test/java/com/fasterxml/jackson/core/read/ParserWithObjectsTest.java']"
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,3d3dedc656e331ab1a9e28efcde96bf71c347daa,d005e6cc824150a30acdbab2e3919582a8d27ccb,https://github.com/FasterXML/jackson-core/commit/3d3dedc656e331ab1a9e28efcde96bf71c347daa,Test refactoring,2019-01-17 06:50:30,Tatu Saloranta,"['src/test/java/com/fasterxml/jackson/core/read/NonStandardParserFeaturesTest.java', 'src/test/java/com/fasterxml/jackson/core/read/NonStandardUnquotedNamesTest.java']"
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,806fb2d458f2b88a39255e4111b9542ef7c10c64,5024910f325d4e2f442eaf65f7673fa6b0289b53,https://github.com/FasterXML/jackson-core/commit/806fb2d458f2b88a39255e4111b9542ef7c10c64,bit of test refactoring,2017-06-03 00:04:50,Tatu Saloranta,"['src/test/java/com/fasterxml/jackson/core/read/ParserErrorHandlingTest.java', 'src/test/java/com/fasterxml/jackson/failing/ParserErrorHandlingTest.java', 'src/test/java/com/fasterxml/jackson/failing/async/AsyncTokenErrorTest.java']"
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,d7cbb642f917319ecd0b3c9ce4ea74c51654a8a6,feee764c07bfef72202462f64f26bd52dc7c710f,https://github.com/FasterXML/jackson-core/commit/d7cbb642f917319ecd0b3c9ce4ea74c51654a8a6,"Bit more work on DataInput source, test refactoring",2016-05-13 20:23:04,Tatu Saloranta,"['src/test/java/com/fasterxml/jackson/core/BaseTest.java', 'src/test/java/com/fasterxml/jackson/core/read/JsonParserTest.java']"
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,feee764c07bfef72202462f64f26bd52dc7c710f,e0b105f88f9083720729dabbfdc102372d18d44b,https://github.com/FasterXML/jackson-core/commit/feee764c07bfef72202462f64f26bd52dc7c710f,test refactoring,2016-05-13 03:17:59,Tatu Saloranta,"['src/test/java/com/fasterxml/jackson/core/json/GeneratorFailTest.java', 'src/test/java/com/fasterxml/jackson/failing/GeneratorFail282Test.java']"
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,7317dc95b0c9d09b94f37c8ae3a48de8b37729cc,7fc38204cd3e633f3e9a1bc7e7245504fcd2630a,https://github.com/FasterXML/jackson-core/commit/7317dc95b0c9d09b94f37c8ae3a48de8b37729cc,test refactoring,2014-09-25 03:07:10,Tatu Saloranta,['src/test/java/com/fasterxml/jackson/core/BaseTest.java']
FasterXML/jackson-core,https://github.com/FasterXML/jackson-core,f22190742ab05aeaa1edcdd49ce6cb768de5ced8,9c9622d985ee4feb2b5f2acaad779b04f4676be4,https://github.com/FasterXML/jackson-core/commit/f22190742ab05aeaa1edcdd49ce6cb768de5ced8,test refactoring,2012-07-25 06:12:37,Tatu Saloranta,['src/test/java/perf/ConcurrencyReadTest.java']
opensourceBIM/BIMserver,https://github.com/opensourceBIM/BIMserver,1bf53a0dc07022a6bbf33819069f7ee6ca73e24f,b7b11f1df3bb7ce0418e94607be3a2abc74f3e9f,https://github.com/opensourceBIM/BIMserver/commit/1bf53a0dc07022a6bbf33819069f7ee6ca73e24f,"Big refactoring:
- Settings is now split into UserSettings and ServerSettings
- Users can now change their own settings (plugin instances and defaults)
- Removed clashdetection from BIMserver
- Cleanup of Store and Log packages by editing old database upgrade steps. Database upgrades will definitely be broken after this
- Not completely tested yet, will do tomorrow",2012-09-13 16:44:43,Ruben de Laat,"['Tests/src/org/bimserver/tests/ClashTest.java', 'Tests/src/org/bimserver/tests/Test.java']"
bootique/bootique,https://github.com/bootique/bootique,6da73ee1c510aa615c7576c764439658d51eeb2f,3a41444e08be032e4ed2f262726c8ee74ca9c2a3,https://github.com/bootique/bootique/commit/6da73ee1c510aa615c7576c764439658d51eeb2f," BQRuntimeChecker - static helper for runtime assertions #211

* refactoring to a separate class BQRuntimeChecker, as we are not testing the provider here, but rather the state of
  runtime
* changing a list of modules to vararg. It seems to be simpler to call it like that from the tests",2018-02-18 07:06:32,Andrus Adamchik,"['bootique-test/src/test/java/io/bootique/test/junit/BQModuleProviderCheckerTest.java', 'bootique-test/src/test/java/io/bootique/test/junit/BQRuntimeCheckerTest.java']"
bootique/bootique,https://github.com/bootique/bootique,63603933a0255e4b4206a43a061e2af7ee863ef6,3ba96886439b993a2f5f02db37868c5b82e07456,https://github.com/bootique/bootique/commit/63603933a0255e4b4206a43a061e2af7ee863ef6,"Complex command invocation structures #131

* cleanup - unused imports
* using varargs for args in CommandDecorator
* renaming/refactoring Bootique_CommandOverrideIT
  - using BQInternalTestFactory for stack management instead of Bootique. Factory does runtime shutdown after each test
  - ""override"" -> ""decorate""
  - exposing the API we are testing explicitly in each test",2017-11-17 07:33:20,Andrus Adamchik,"['bootique/src/test/java/io/bootique/jopt/JoptCliFactoryCommandNameTest.java', 'bootique/src/test/java/io/bootique/jopt/JoptCliFactoryTest.java']"
bootique/bootique,https://github.com/bootique/bootique,1036ed901ee48533e2b9bdc815ffa0f9ba76fc4a,a087fd5c661178964c97c09cd45c2fce33291f7f,https://github.com/bootique/bootique/commit/1036ed901ee48533e2b9bdc815ffa0f9ba76fc4a,"HelpConfigCommand: Help for configs #27

* refactoring config tests",2016-12-29 18:31:03,Andrus Adamchik,"['bootique/src/test/java/io/bootique/help/config/ConfigSectionGeneratorTest.java', 'bootique/src/test/java/io/bootique/help/config/DefaultConfigHelpGeneratorTest.java']"
bootique/bootique,https://github.com/bootique/bootique,f0cacb9ead869b0e1525f6a7262529cc0975384d,22b0a1ca6a08be66002516e0a65d538ce5166c5d,https://github.com/bootique/bootique/commit/f0cacb9ead869b0e1525f6a7262529cc0975384d,"Default command name generation should convert camel-case to dashes #105

* unit tests and  refactoring",2016-11-12 10:40:49,Andrus Adamchik,"['bootique/src/test/java/io/bootique/application/CommandMetadataTest.java', 'bootique/src/test/java/io/bootique/names/ClassToNameTest.java']"
bootique/bootique,https://github.com/bootique/bootique,0999a7a9f8feb0813055fac35093bf4415810ec6,afdd12e4f8c252a8b41af22b42d1fd3ecdf5e31b,https://github.com/bootique/bootique/commit/0999a7a9f8feb0813055fac35093bf4415810ec6,"Support for terminal width detection #95

* unit tests
* refactoring",2016-09-11 12:30:52,Andrus Adamchik,['bootique/src/test/java/io/bootique/terminal/SttyTerminalTest.java']
bootique/bootique,https://github.com/bootique/bootique,798af649d2f09983ce73d06b74f09b67ed1b8ef1,6463db0004964e9682a1d03ab4ff48b77ffa20f8,https://github.com/bootique/bootique/commit/798af649d2f09983ce73d06b74f09b67ed1b8ef1,"cleanup:

* better test case naming
* refactoring repetitive code in the tests",2016-02-08 13:41:54,Andrus Adamchik,['src/test/java/com/nhl/bootique/config/YamlConfigurationFactoryTest.java']
jeevatkm/digitalocean-api-java,https://github.com/jeevatkm/digitalocean-api-java,a46303d1a9cb328f7783cfc191649edb7c72efbd,44bfc88e11bf7ddf8d7b666fe8193822852b7ec1,https://github.com/jeevatkm/digitalocean-api-java/commit/a46303d1a9cb328f7783cfc191649edb7c72efbd,Refactoring and integration tests,2016-08-04 12:56:11,Eugene Strokin,['src/test/java/com/myjeeva/digitalocean/DigitalOceanIntegrationTest.java']
elastic/elasticsearch-river-rabbitmq,https://github.com/elastic/elasticsearch-river-rabbitmq,9ad76a78ecd8ee154703867d3537eb7a4fc40312,fbbf90b3718126e9090aa13cb034d06ab6d8662f,https://github.com/elastic/elasticsearch-river-rabbitmq/commit/9ad76a78ecd8ee154703867d3537eb7a4fc40312,"Refactor integration tests

With this refactoring, it appears that some tests could fail when updating/deleting just indexed documents.

Another issue / commit will try to fix that.

Closes #63.

(cherry picked from commit ded1cff)",2014-07-24 11:57:53,David Pilato,"['src/test/java/org/elasticsearch/river/rabbitmq/RabbitMQIntegrationTest.java', 'src/test/java/org/elasticsearch/river/rabbitmq/RabbitMQRiverAsyncTest.java', 'src/test/java/org/elasticsearch/river/rabbitmq/RabbitMQRiverBothScriptTest.java', 'src/test/java/org/elasticsearch/river/rabbitmq/RabbitMQRiverHeartbeatTest.java', 'src/test/java/org/elasticsearch/river/rabbitmq/RabbitMQRiverScriptTest.java', 'src/test/java/org/elasticsearch/river/rabbitmq/RabbitMQRiverSingleLineScriptTest.java', 'src/test/java/org/elasticsearch/river/rabbitmq/RabbitMQRiverTenThousandTest.java', 'src/test/java/org/elasticsearch/river/rabbitmq/RabbitMQRiverTest.java']"
jvelo/mayocat-shop,https://github.com/jvelo/mayocat-shop,f9715d84362d862178f6a72f94acd9eae5f9335c,86691b9c6537df7cc268983d441cb49f7d98501b,https://github.com/jvelo/mayocat-shop/commit/f9715d84362d862178f6a72f94acd9eae5f9335c,"- Started multitenancy support
- Extracted some JDO and datanucleus default properties (that can be
  overriden specifically when needed)
- added a mysql config to ease tests
- Some other refactorings",2012-07-30 16:18:39,Jerome Velociter,"['rest/src/test/java/org/mayocat/shop/rest/resources/ProductResourceTest.java', 'store/src/test/java/org/mayocat/shop/store/datanucleus/DataNucleusProductStoreTest.java']"
rchodava/datamill,https://github.com/rchodava/datamill,5b7094b6b58df04c40718583c13c40ad646ea54f,efd88783dd0f1440abbcaefc4f7ed242b949e8e4,https://github.com/rchodava/datamill/commit/5b7094b6b58df04c40718583c13c40ad646ea54f,"Make sure headers for requests are not null
Add tests for API handler
A bit of refactoring on API handler
Other minor fixes",2017-03-29 12:57:42,Ravi Chodavarapu,"['core/src/test/java/foundation/stack/datamill/http/impl/ServerRequestImplTest.java', 'lambda-api/src/test/java/foundation/stack/lambda/ApiHandlerTest.java']"
rchodava/datamill,https://github.com/rchodava/datamill,7bd78e88d51a13363d5ba931601994b408757cb6,aeb4195fbdb1b70cb2485cbdfb1b97d648bf2df2,https://github.com/rchodava/datamill/commit/7bd78e88d51a13363d5ba931601994b408757cb6,"Refactor to type switches so we have something re-usable that improves maintainability
Add some tests",2016-05-10 23:05:36,Ravi Chodavarapu,"['core/src/test/java/org/chodavarapu/datamill/reflection/impl/TripleArgumentTypeSwitchTest.java', 'core/src/test/java/org/chodavarapu/datamill/reflection/impl/TypeSwitchTest.java', 'core/src/test/java/org/chodavarapu/datamill/values/StringValueTest.java']"
rchodava/datamill,https://github.com/rchodava/datamill,0e18b228adb7e349166a533a7089bcfb35a4c9fd,9c5c2e50ecf27e108c2ae63eac083c9663ea34b2,https://github.com/rchodava/datamill/commit/0e18b228adb7e349166a533a7089bcfb35a4c9fd,"- Minor refactoring
- Request building
- Partial implementation of HTTP client
- Request builder, status tests",2015-11-07 01:11:53,rchodava,"['core/src/test/java/org/chodavarapu/datamill/http/StatusTest.java', 'core/src/test/java/org/chodavarapu/datamill/http/impl/RequestBuilderImplTest.java']"
LiveRamp/hank,https://github.com/LiveRamp/hank,b45e2e774427badbcf89633f43c53f3c7ef50fd7,861d91a0d705109a5d032773b49dbb33c17aaad0,https://github.com/LiveRamp/hank/commit/b45e2e774427badbcf89633f43c53f3c7ef50fd7,Updated integration test to take into account refactor of DomainGroup,2011-09-01 21:55:14,Thomas Kielbus,['test/java/com/rapleaf/hank/IntegrationTest.java']
LiveRamp/hank,https://github.com/LiveRamp/hank,3c951d6261741f78d72a13ddc1abda265cb73f3d,e528e81a291f3596b2425b8db8b842bce41b8c74,https://github.com/LiveRamp/hank/commit/3c951d6261741f78d72a13ddc1abda265cb73f3d,"add some additional validation to BaseYamlConfigurator; some respectable refactoring in integration test, fix a config file naming issue",2011-03-02 08:29:43,bryanduxbury,['test/java/com/rapleaf/hank/IntegrationTest.java']
lmco/eurekastreams,https://github.com/lmco/eurekastreams,5a0828eb13d7ca97d5f4c78352b76510e25e400c,6fc01e18b45d3dd090e2e7c1e8fc28b11f27f952,https://github.com/lmco/eurekastreams/commit/5a0828eb13d7ca97d5f4c78352b76510e25e400c,"Created new EntityCacheUpdaters so old cache loaders could be deprecated. Now they are only used for unit tests, and they should be refactored out of there when time allows.",2010-10-11 15:04:10,cdscott,"['server/src/test/java/org/eurekastreams/server/persistence/mappers/cache/DomainGroupEntityCacheUpdaterTest.java', 'server/src/test/java/org/eurekastreams/server/persistence/mappers/cache/OrganizationEntityCacheUpdaterTest.java', 'server/src/test/java/org/eurekastreams/server/persistence/mappers/cache/PersonEntityCacheUpdaterTest.java']"
lmco/eurekastreams,https://github.com/lmco/eurekastreams,77541be5f0299fee69961338124ea5dc81b4b4e6,0d09f00d44e862936e69eede524026044365d1ee,https://github.com/lmco/eurekastreams/commit/77541be5f0299fee69961338124ea5dc81b4b4e6,Incremental cache warm refactor check-in. Added GetFollowedGroupIdsForPersonByIdDbMapper/GetFollowerPersonIdsForGroupByIdDbMapper and unit tests..,2010-10-05 16:12:11,cdscott,"['server/src/test/java/org/eurekastreams/server/persistence/mappers/db/GetFollowedGroupIdsForPersonByIdDbMapperTest.java', 'server/src/test/java/org/eurekastreams/server/persistence/mappers/db/GetFollowedPersonIdsForPersonByIdDbMapperTest.java', 'server/src/test/java/org/eurekastreams/server/persistence/mappers/db/GetFollowerPersonIdsForGroupByIdDbMapperTest.java']"
lmco/eurekastreams,https://github.com/lmco/eurekastreams,e3dc2c569fe9d1332777ed12efb127f6fef40c5f,68e20c21e96f63ce83ae539fe33b7d46d6a824d1,https://github.com/lmco/eurekastreams/commit/e3dc2c569fe9d1332777ed12efb127f6fef40c5f,Incremental cache warm refactor check-in. Added new Db only mappers and unit tests for getting person followers/followed.,2010-10-01 16:42:31,cdscott,"['server/src/test/java/org/eurekastreams/server/persistence/mappers/db/GetFollowedPersonIdsForPersonByIdDbMapperTest.java', 'server/src/test/java/org/eurekastreams/server/persistence/mappers/db/GetFollowerPersonIdsForPersonByIdDbMapperTest.java']"
lmco/eurekastreams,https://github.com/lmco/eurekastreams,2a1eb7c0c14ffd7b79c5b2adb1230110dd77dc51,1ff953e4e18adbb3e7b049d468bedabebaf27c57,https://github.com/lmco/eurekastreams/commit/2a1eb7c0c14ffd7b79c5b2adb1230110dd77dc51,Incremental cache warm refactor check-in. Added ExecuteDomainMapperExecution and unit tests.,2010-09-28 17:10:20,cdscott,['server/src/test/java/org/eurekastreams/server/action/execution/ExecuteDomainMapperExecutionTest.java']
lmco/eurekastreams,https://github.com/lmco/eurekastreams,e4e74efa7be54530a05ce51e3e662abe0bc4bd78,5705615b0c23119f4e1ad4f7308d1f0f44a5628b,https://github.com/lmco/eurekastreams/commit/e4e74efa7be54530a05ce51e3e662abe0bc4bd78,Incremental cache warm refactor check-in. Added QueueKeyBasedTasksExectuion action and GetPersonsByIds mapper with unit tests.,2010-09-28 16:19:34,cdscott,"['server/src/test/java/org/eurekastreams/server/action/execution/QueueKeyBasedTasksExecutionTest.java', 'server/src/test/java/org/eurekastreams/server/persistence/mappers/db/GetPersonsByIdsTest.java', 'server/src/test/java/org/eurekastreams/server/persistence/mappers/db/GetSerializableFieldTest.java']"
alexruiz/fest-assert-2.x,https://github.com/alexruiz/fest-assert-2.x,c0ae86d62373511287a37ba5f4df753f2fdc0eba,31f006f01f7ba8e5085e8c53eb2b3e617d442435,https://github.com/alexruiz/fest-assert-2.x/commit/c0ae86d62373511287a37ba5f4df753f2fdc0eba,"* javadoc added AbstractIterableAssert.isSubsetOf()
* extended error message in ShouldBeSubsetOf (Iterables changed
accordingly)
* a test added to Iterables_assertIsSubsetOf_Test
* Iterables_assertIsSubsetOf_Test refactored a bit (actual is set at the
beginning of each method now. That should improve readability
* readobility of errors thrown from
Iterables.checkIsNotNullAndNotEmpty() improved.",2012-03-07 22:49:45,Maciej Jaśkowski,['src/test/java/org/fest/assertions/internal/Iterables_assertIsSubsetOf_Test.java']
Thomas-S-B/visualee,https://github.com/Thomas-S-B/visualee,6a29d9198762e8cccebf069c19bb631fc696d606,144c9ecd840e6308b170abb4f9f48e20de27aea0,https://github.com/Thomas-S-B/visualee/commit/6a29d9198762e8cccebf069c19bb631fc696d606,"Several improvements, tests and refactorings Iteration 9.",2013-08-27 08:59:48,Thomas-S-B,"['src/test/java/de/strullerbaumann/visualee/dependency/entity/DependencyTypeTest.java', 'src/test/java/de/strullerbaumann/visualee/examiner/CDIExaminerTest.java', 'src/test/java/de/strullerbaumann/visualee/examiner/ExaminerTest.java', 'src/test/java/de/strullerbaumann/visualee/examiner/JavaSourceExaminerTest.java', 'src/test/java/de/strullerbaumann/visualee/examiner/JavaSourceInspectorTest.java', 'src/test/java/de/strullerbaumann/visualee/examiner/cdi/ExaminerEJBTest.java', 'src/test/java/de/strullerbaumann/visualee/examiner/cdi/ExaminerEventTest.java', 'src/test/java/de/strullerbaumann/visualee/examiner/cdi/ExaminerInjectTest.java', 'src/test/java/de/strullerbaumann/visualee/examiner/cdi/ExaminerInstanceTest.java', 'src/test/java/de/strullerbaumann/visualee/examiner/cdi/ExaminerObservesTest.java', 'src/test/java/de/strullerbaumann/visualee/examiner/cdi/ExaminerProducesTest.java', 'src/test/java/de/strullerbaumann/visualee/examiner/cdi/ExaminerResourceTest.java', 'src/test/java/de/strullerbaumann/visualee/examiner/jpa/JPAExaminerTest.java', 'src/test/java/de/strullerbaumann/visualee/maven/VisualEEMojoTest.java', 'src/test/java/de/strullerbaumann/visualee/ui/graph/boundary/GraphCreatorTest.java', 'src/test/java/de/strullerbaumann/visualee/ui/graph/control/DescriptionTest.java']"
fabric8io/elasticsearch-cloud-kubernetes,https://github.com/fabric8io/elasticsearch-cloud-kubernetes,d5577ce10f8e0eadd9b3453cac40bd8a7330f90f,3ae57bc56c658214d961198ff4d428ff86ee67ec,https://github.com/fabric8io/elasticsearch-cloud-kubernetes/commit/d5577ce10f8e0eadd9b3453cac40bd8a7330f90f,"Tests: refactor tests

We need to simplify a bit our tests.
Also, we need to mark as `@Ignore` tests as they break now due to some cluster controls after each test in elasticsearch test infra.

See [org.elasticsearch.test.ElasticsearchIntegrationTest#ensureClusterSizeConsistency()](https://github.com/elasticsearch/elasticsearch/blob/v1.3.1/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java#L974-L979)

Closes #33.

(cherry picked from commit 51c10c1)",2014-08-06 20:51:21,David Pilato,"['src/test/java/org/elasticsearch/cloud/gce/AbstractGceTest.java', 'src/test/java/org/elasticsearch/discovery/gce/AbstractGceComputeServiceTest.java', 'src/test/java/org/elasticsearch/discovery/gce/GceComputeEngineTest.java', 'src/test/java/org/elasticsearch/discovery/gce/GceDifferentTagsNoTagTest.java', 'src/test/java/org/elasticsearch/discovery/gce/GceDifferentTagsOneTagTest.java', 'src/test/java/org/elasticsearch/discovery/gce/GceDifferentTagsTwoTagsTest.java', 'src/test/java/org/elasticsearch/discovery/gce/GceSameTagsNoTagTest.java', 'src/test/java/org/elasticsearch/discovery/gce/GceSameTagsOneTagTest.java', 'src/test/java/org/elasticsearch/discovery/gce/GceSameTagsTwoTagsTest.java', 'src/test/java/org/elasticsearch/gce/itest/GceSimpleITest.java']"
Comcast/cmb,https://github.com/Comcast/cmb,a16e1c4f4bf12a270bd63ee8e118c9c4b32edd69,90b9a828857ce01847168ce00860c4a8b63536da,https://github.com/Comcast/cmb/commit/a16e1c4f4bf12a270bd63ee8e118c9c4b32edd69,"cassandra refactoring complete - compiles and all unit tests pass again
- now ready for astyanax",2014-03-20 04:58:14,boriwo,"['tests/com/comcast/cmb/test/unit/CassandraTest.java', 'tests/com/comcast/cqs/test/unit/CQSMessagePartitionedCassandraPersistenceTest.java']"
Comcast/cmb,https://github.com/Comcast/cmb,107d8dfc6a8ef43e0a186bc9cbcc7bb871ef7596,d9eb3c848cad6ea48afc5824fabcaff607e62737,https://github.com/Comcast/cmb/commit/107d8dfc6a8ef43e0a186bc9cbcc7bb871ef7596,unit test refactoring,2013-09-05 23:11:20,boriwo,"['tests/com/comcast/cns/test/unit/CNSDeleteListTopicTest.java', 'tests/com/comcast/cns/test/unit/CNSRawMessageDeliveryTest.java', 'tests/com/comcast/cns/test/unit/CNSScaleSubscriptionsTest.java', 'tests/com/comcast/cns/test/unit/CNSSubscriptionAttributeCMBTest.java', 'tests/com/comcast/cns/test/unit/CreateDeleteListTopicAWSTest.java', 'tests/com/comcast/cqs/test/unit/CQSIntegrationTest.java']"
Comcast/cmb,https://github.com/Comcast/cmb,d9eb3c848cad6ea48afc5824fabcaff607e62737,e5f7f71d499f3a9560e7cccebfffa0b5691f251d,https://github.com/Comcast/cmb/commit/d9eb3c848cad6ea48afc5824fabcaff607e62737,unit test refactoring,2013-09-05 21:20:58,boriwo,"['tests/com/comcast/cmb/test/tools/CMBAWSBaseTest.java', 'tests/com/comcast/cqs/test/unit/CQSDelaySecondsTest.java', 'tests/com/comcast/cqs/test/unit/CQSLongPollTest.java', 'tests/com/comcast/cqs/test/unit/CQSMessageVisibilityTest.java', 'tests/com/comcast/cqs/test/unit/CQSQueuePersistenceTest.java', 'tests/com/comcast/cqs/test/unit/CQSRedisCachedCassandraPersistenceTest.java', 'tests/com/comcast/cqs/test/unit/CQSScaleQueuesTest.java', 'tests/com/comcast/cqs/test/unit/CQSSendDeleteReceiveMessageTest.java']"
Comcast/cmb,https://github.com/Comcast/cmb,c94d2b92fd43c13a02376957a8e0910e8848f9a6,506b29b7f5087b3eb39a2497af9c5d2951c17bd0,https://github.com/Comcast/cmb/commit/c94d2b92fd43c13a02376957a8e0910e8848f9a6,unit test refactoring,2013-09-05 18:58:04,boriwo,"['tests/com/comcast/cqs/test/unit/CQSIntegrationTest.java', 'tests/com/comcast/cqs/test/unit/CreateDeleteListQueueAWSTest.java', 'tests/com/comcast/cqs/test/unit/SendDeleteReceiveMessageCMBTest.java']"
Comcast/cmb,https://github.com/Comcast/cmb,4d48ff2891894a4f5983f2054b5f104fdd0a369b,1656ea7183494df6e3831a53ca468caaea68990c,https://github.com/Comcast/cmb/commit/4d48ff2891894a4f5983f2054b5f104fdd0a369b,refactored email and http endpoints for unit tests,2012-09-28 18:46:01,boriwo,"['tests/com/comcast/cns/test/stress/CNSStressTest.java', 'tests/com/comcast/cns/test/unit/CNSAttributesCassandraPersistenceTest.java', 'tests/com/comcast/cns/test/unit/CNSEditSubscriptionDeliveryPolicyPageTest.java', 'tests/com/comcast/cns/test/unit/CNSPublishJobTest.java', 'tests/com/comcast/cns/test/unit/CNSSubscriptionPageTest.java', 'tests/com/comcast/cns/test/unit/CreateDeleteListTopicAWSTest.java', 'tests/com/comcast/cns/test/unit/PublishCMBTest.java', 'tests/com/comcast/cns/test/unit/SubscribeListUnsubscribeCassandraTest.java', 'tests/com/comcast/cns/test/unit/SubscribeUnsubscribeCMBTest.java', 'tests/com/comcast/cns/test/unit/SubscriptionAttributeCMBTest.java', 'tests/com/comcast/cns/test/unit/UtilsTest.java']"
tinkerpop/pipes,https://github.com/tinkerpop/pipes,0b2c0ee49482405ea9286e5d6b1c84e93e100c23,3932daf2d980e9b1fda81155d62aaea57aa5b610,https://github.com/tinkerpop/pipes/commit/0b2c0ee49482405ea9286e5d6b1c84e93e100c23,more test cases. refactored PipeClosure naming. Added JavaDoc. Put LoopPipe related classes as interal classes for cleanliness.,2011-07-24 21:41:00,Marko Rodriguez,"['src/test/java/com/tinkerpop/pipes/ClosurePipeTest.java', 'src/test/java/com/tinkerpop/pipes/branch/IfThenElsePipeTest.java', 'src/test/java/com/tinkerpop/pipes/branch/LoopPipeTest.java', 'src/test/java/com/tinkerpop/pipes/filter/FilterClosurePipeTest.java', 'src/test/java/com/tinkerpop/pipes/sideeffect/SideEffectClosurePipeTest.java', 'src/test/java/com/tinkerpop/pipes/transform/PathClosurePipeTest.java', 'src/test/java/com/tinkerpop/pipes/transform/PropertyMapPipeTest.java', 'src/test/java/com/tinkerpop/pipes/transform/TransformClosurePipeTest.java']"
tinkerpop/pipes,https://github.com/tinkerpop/pipes,b0af925fd973fb7e64fc80844518f63aef055268,374c57581a7e8f6df52e854ac0b1284b2e954f35,https://github.com/tinkerpop/pipes/commit/b0af925fd973fb7e64fc80844518f63aef055268,Refactor test.,2010-11-20 03:04:39,Darrick Wiebe,['src/test/java/com/tinkerpop/pipes/PathSequenceTest.java']
errai/errai,https://github.com/errai/errai,6e32d5f320dfe866125524d011d0a2eed1c00b48,eb4119f44571f3679d6d4616591b52db480db3c2,https://github.com/errai/errai/commit/6e32d5f320dfe866125524d011d0a2eed1c00b48,Refactor maybeInit logic from plugin facets into AbstractPluginFacet and add test case.,2014-07-14 21:48:17,Max Barkley,['errai-forge-addon/src/test/java/org/jboss/errai/forge/facet/plugin/AbstractPluginFacetTest.java']
errai/errai,https://github.com/errai/errai,9665ab1df3588f0ec128e80f0b879bf750941283,567b7dbaf66e5c30496ef580fee09678c1079cb2,https://github.com/errai/errai/commit/9665ab1df3588f0ec128e80f0b879bf750941283,Refactor security interceptor tests to test against client and server interceptors (for all cases).,2014-06-09 19:11:55,Max Barkley,"['errai-security/errai-security-client/src/test/java/org/jboss/errai/security/client/local/BusSecurityInterceptorTest.java', 'errai-security/errai-security-client/src/test/java/org/jboss/errai/security/client/local/ClientBusSecurityInterceptorTest.java', 'errai-security/errai-security-client/src/test/java/org/jboss/errai/security/client/local/ServerBusSecurityInterceptorTest.java']"
errai/errai,https://github.com/errai/errai,01236a93b12511dd24f7ab1be9b98270448e0d90,91d3c43ae459fe6fa42726a1dd9452849fa565f1,https://github.com/errai/errai/commit/01236a93b12511dd24f7ab1be9b98270448e0d90,"Merge parts of Uberfire Security into Errai. Details below.

* Imported UberFire's Role and Subject (now User) types; standardized Errai security on these

* Centralized the role membership checking logic onto User; added unit tests for it

* Refactor ActiveUserCache into SPI.

* Create ANONYMOUS user constant to use instead of null when no user logged in.

* Switch to cookie storage of user info so that we can unify with UberFire's form based login

* Use cookies instead of local storage; add CookieEncoder class into shared package.

* Make todolist demo user an errai security User.

* Delete Identity class (it's redundant; Caller<AuthenticationService> can be used).",2014-03-28 15:19:10,Jonathan Fuerth,"['errai-security/errai-security-client/src/test/java/org/jboss/errai/mocksafe/test/DefaultErrorCallbackTest.java', 'errai-security/errai-security-client/src/test/java/org/jboss/errai/mocksafe/test/UserCacheTest.java', 'errai-security/errai-security-client/src/test/java/org/jboss/errai/security/client/local/BusSecurityInterceptorTest.java', 'errai-security/errai-security-client/src/test/java/org/jboss/errai/security/client/local/PrePopulatedUserStorageIntegrationTest.java', 'errai-security/errai-security-client/src/test/java/org/jboss/errai/security/client/local/RestSecurityInterceptorTest.java', 'errai-security/errai-security-client/src/test/java/org/jboss/errai/security/client/local/SecurityTest.java', 'errai-security/errai-security-client/src/test/java/org/jboss/errai/security/client/local/UnpopulatedUserStorageIntegrationTest.java', 'errai-security/errai-security-client/src/test/java/org/jboss/errai/security/test/page/client/local/SecureNavigationIntegrationTest.java', 'errai-security/errai-security-client/src/test/java/org/jboss/errai/security/test/style/client/local/SecurityStyleTest.java', 'errai-security/errai-security-picketlink/src/test/java/org/jboss/errai/security/server/PicketLinkUserMappingTest.java', 'errai-security/errai-security-server/src/test/java/org/jboss/errai/security/SecurityRoleInterceptorTest.java', 'errai-security/errai-security-server/src/test/java/org/jboss/errai/security/shared/api/identity/UserTest.java']"
errai/errai,https://github.com/errai/errai,e41471ad1f122daf9828e0cf9b3b1a9d74f1b02b,ec5821256e03270f4d117f15f4699e8306e6ed6b,https://github.com/errai/errai/commit/e41471ad1f122daf9828e0cf9b3b1a9d74f1b02b,minor refactoring of event observer tests (timeout),2014-03-21 22:11:35,Christian Sadilek,['errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/EventObserverIntegrationTest.java']
errai/errai,https://github.com/errai/errai,91ad22b88f238c06c12e24bcc0abdd3a9d8f1f49,de7b92b5e2571e1b4d27496fd4e95ed3c7fc1858,https://github.com/errai/errai/commit/91ad22b88f238c06c12e24bcc0abdd3a9d8f1f49,"Significant progress on refactoring errai-security.

Wrote new tests for client-side RequiresAuthentication interceptor.
Removed loggedIn RPC call from SecurityUserInterceptor.
Still single security test failing.",2014-02-18 19:28:21,Max Barkley,"['errai-security/errai-security-client/src/test/java/org/jboss/errai/security/client/local/SecurityInterceptorTest.java', 'errai-security/errai-security-client/src/test/java/org/jboss/errai/security/client/local/SecurityTest.java', 'errai-security/errai-security-server/src/test/java/org/jboss/errai/security/client/local/SecurityInterceptorIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,119819bc236f2054c75dd963079967868e0218f8,898f0aeb4ab53f013a67016acd7e7b9a105d9d0a,https://github.com/errai/errai/commit/119819bc236f2054c75dd963079967868e0218f8,Begin refactoring errai-security into separate client and server modules. Server module tests passing.,2014-02-12 16:57:28,Max Barkley,"['errai-security/errai-security-client/src/test/java/org/jboss/errai/security/client/local/SecurityTest.java', 'errai-security/errai-security-client/src/test/java/org/jboss/errai/security/test/page/client/AuthenticationTest.java', 'errai-security/errai-security-server/src/test/java/org/jboss/errai/security/SecurityRoleInterceptorTest.java', 'errai-security/errai-security-server/src/test/java/org/jboss/errai/security/SecurityUserInterceptorTest.java', 'errai-security/errai-security-server/src/test/java/org/jboss/errai/security/server/permission/PermissionMapperTest.java']"
errai/errai,https://github.com/errai/errai,69a089843e5151f909cd3e4e395fb5134c81ccd0,b5516f4b7d32488238def900d0463a627bf402f5,https://github.com/errai/errai/commit/69a089843e5151f909cd3e4e395fb5134c81ccd0,data-binding: refactoring to move prop. change handler tests in separate class,2013-09-04 19:11:13,Christian Sadilek,"['errai-data-binding/src/test/java/org/jboss/errai/databinding/client/test/DataBindingIntegrationTest.java', 'errai-data-binding/src/test/java/org/jboss/errai/databinding/client/test/PropertyChangeHandlerIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,f56890ab0a9e60cc34d4f9a65db2e629c7d21812,d73026de4c35ab56ea0aa7f602a24db15796bd90,https://github.com/errai/errai/commit/f56890ab0a9e60cc34d4f9a65db2e629c7d21812,otec: refactoring plus a (currently ignored) test which I think simulates a potential problem,2013-05-17 22:15:39,Christian Sadilek,['errai-otec/src/test/java/org/jboss/errai/otec/ThreeEngineInterleavedScenarioTest.java']
errai/errai,https://github.com/errai/errai,213b5f4159ce2e4381276132d08ec2f1c70652a1,4ec6b919a95e896eb37fe7786155450513000ebc,https://github.com/errai/errai/commit/213b5f4159ce2e4381276132d08ec2f1c70652a1,otec: refactoring and new failing test (currently on @Ignore),2013-04-25 23:05:16,Christian Sadilek,"['errai-otec/src/test/java/org/jboss/errai/otec/AbstractOtecTest.java', 'errai-otec/src/test/java/org/jboss/errai/otec/AbstractThreeEngineOtecTest.java', 'errai-otec/src/test/java/org/jboss/errai/otec/FiveEngineTest.java', 'errai-otec/src/test/java/org/jboss/errai/otec/ThreeEngineResumeABTest.java', 'errai-otec/src/test/java/org/jboss/errai/otec/ThreeEngineResumeBATest.java']"
errai/errai,https://github.com/errai/errai,3bb3461e091b051d9e5c0167d92b4b52d10f0468,14268af9062ee7b0a53fc002b2d70a6c5bca7eaf,https://github.com/errai/errai/commit/3bb3461e091b051d9e5c0167d92b4b52d10f0468,refactoring and more otec tests,2013-04-23 19:18:07,Christian Sadilek,['errai-otec/src/test/java/org/jboss/errai/otec/ThreeEngineInterleavedScenarioTest.java']
errai/errai,https://github.com/errai/errai,1353e420f98265be103defa78158d461c7fac6f5,d179e880beb4888dc9a58d6aff3d4f7093c48ac7,https://github.com/errai/errai/commit/1353e420f98265be103defa78158d461c7fac6f5,Revived the server-side sync tests; pointed them at DataSyncServiceImpl to keep up with the previous refactoring,2013-04-18 19:27:46,Jonathan Fuerth,"['errai-jpa/errai-jpa-datasync/src/test/java/org/jboss/errai/jpa/sync/test/client/DataSyncServiceUnitTest.java', 'errai-jpa/errai-jpa-datasync/src/test/java/org/jboss/errai/jpa/sync/test/client/SyncableDataSetUnitTest.java']"
errai/errai,https://github.com/errai/errai,a94dc5dde1c77afdd722e7965aff6d3e9097162f,d7b8522a598fa24bf65e014db850ea87e085f4cc,https://github.com/errai/errai/commit/a94dc5dde1c77afdd722e7965aff6d3e9097162f,"Refactored datasync so SyncableDataSet and all the sync operations are portable

Unfortunately, the unit tests need an equally big refactoring now, and this hasn't been completed yet.",2013-04-10 18:30:48,Jonathan Fuerth,['errai-jpa/errai-jpa-datasync/src/test/java/org/jboss/errai/jpa/sync/test/client/SyncableDataSetUnitTest.java']
errai/errai,https://github.com/errai/errai,94be8c0c7fcb9ed7eb64675d75c004bad2a29326,2429df501adf3ad06885391ebe04a6e767ff2630,https://github.com/errai/errai/commit/94be8c0c7fcb9ed7eb64675d75c004bad2a29326,more test refactoring for errai ui/data binding,2013-04-16 19:14:37,Christian Sadilek,"['errai-ui/src/test/java/org/jboss/errai/ui/test/binding/client/BindingTemplateTest.java', 'errai-ui/src/test/java/org/jboss/errai/ui/test/binding/client/ListWidgetBindingTest.java']"
errai/errai,https://github.com/errai/errai,2429df501adf3ad06885391ebe04a6e767ff2630,475ebacf3b00b33241d959527ab9e67b31f79946,https://github.com/errai/errai/commit/2429df501adf3ad06885391ebe04a6e767ff2630,minor test refactorings in BindingTemplateTest,2013-04-16 18:50:26,Christian Sadilek,['errai-ui/src/test/java/org/jboss/errai/ui/test/binding/client/BindingTemplateTest.java']
errai/errai,https://github.com/errai/errai,6ea2d54cdef0a2f8269fb1569210fd3f43464f84,31b9505638d23e3d5827c932427b4dc2f35b8951,https://github.com/errai/errai/commit/6ea2d54cdef0a2f8269fb1569210fd3f43464f84,refactoring and added test for simple OT scenario (not yet passing),2013-04-11 23:11:35,Mike Brock,['errai-otec/src/test/java/org/jboss/errai/otec/tests/OtecPrototypingTest.java']
errai/errai,https://github.com/errai/errai,7647e6b864b409e0752c7f4b20aac6860d46f368,e5d18afe1a6a20fe54930b92b9aae9f4cfb30162,https://github.com/errai/errai/commit/7647e6b864b409e0752c7f4b20aac6860d46f368,"Refactoring and improved fix for ERRAI-537 (MapMarshaller shouldn't introduce dep. to gwt-user)

Also configured test entity to use @JsonSerialize(using=ToStringSerializer.class) to marshall longs as strings which should always be the case when parsing JSON in the browser.",2013-04-12 15:45:37,Christian Sadilek,['errai-jaxrs/errai-jaxrs-client/src/test/java/org/jboss/errai/enterprise/jaxrs/client/test/JacksonIntegrationTest.java']
errai/errai,https://github.com/errai/errai,63e9fd5637d433b1d2939b87060b3ac5cd1b65a6,9ac11847dd789d7e804a2add6427257d9db78072,https://github.com/errai/errai/commit/63e9fd5637d433b1d2939b87060b3ac5cd1b65a6,"refactor JBoss 7 support into seperate modules. This involves making the Vfs stuff for Reflections pluggable and discoverable as an ErraiApp.properties flag. Also, support for AS6 is now dropped.

Added new ChaosMonkeyServlet for testing. Session recovery also now fixed.",2013-02-24 01:47:01,Mike Brock,"['errai-jboss-as-support/src/test/java/org/jboss/errai/common/metadata/JBossVfsDirTest.java', 'errai-reflections/reflections/src/test/java/org/jboss/errai/reflections/ReflectionsTest.java']"
errai/errai,https://github.com/errai/errai,6200fe7f746106c2c5d5330fd00e309af713b5e7,21f832216a41b789946c6b2670b51a5c123db163,https://github.com/errai/errai/commit/6200fe7f746106c2c5d5330fd00e309af713b5e7,"MASSIVE bus refactoring. Bus now has a modular transport layer. All unit tests now passing. Some things still not done, however.",2013-02-22 00:52:53,Mike Brock,"['errai-bus/src/main/java/org/jboss/errai/bus/client/tests/AbstractErraiTest.java', 'errai-cdi/errai-cdi-client/src/main/java/org/jboss/errai/enterprise/client/cdi/AbstractErraiCDITest.java']"
errai/errai,https://github.com/errai/errai,21f832216a41b789946c6b2670b51a5c123db163,8bd0bbc2ffb7a041502d21022e73a7db72b3c5d3,https://github.com/errai/errai/commit/21f832216a41b789946c6b2670b51a5c123db163,- first stab at refactoring the bus to move the transport implementations out of the main message bus code. (most tests passing),2013-02-21 00:25:11,Mike Brock,"['errai-bus/src/main/java/org/jboss/errai/bus/client/tests/AbstractErraiTest.java', 'errai-bus/src/test/java/org/jboss/errai/bus/client/tests/ErrorHandlingTest.java']"
errai/errai,https://github.com/errai/errai,e6add53192efb881950d1123b893e4a93b707687,fb5d42c2546452f779a2ea8542e3da218c884312,https://github.com/errai/errai/commit/e6add53192efb881950d1123b893e4a93b707687,data-binding: improved tests and refactoring,2013-01-16 21:07:35,Christian Sadilek,"['errai-data-binding/src/test/java/org/jboss/errai/databinding/client/test/DataBindingIntegrationTest.java', 'errai-jpa/errai-jpa-client/src/test/java/org/jboss/errai/jpa/test/client/ErraiJpaTest.java']"
errai/errai,https://github.com/errai/errai,eb0ac78100f6b76ec2106cbce7c7046a1690bc88,a5c17d31a79b15d4b0776434cbf8cafaf9246613,https://github.com/errai/errai/commit/eb0ac78100f6b76ec2106cbce7c7046a1690bc88,"Added PageShown and PageHidden Lifecycle callbacks

I also refactored some code, added and refactored tests",2013-01-11 09:48:00,Daniel Sachse,['errai-navigation/src/test/java/org/jboss/errai/ui/nav/client/local/PageLifecycleTest.java']
errai/errai,https://github.com/errai/errai,5aac34079584afdf318afc57892d29cf2840caec,e7070ac8f41d679bca74181821d764af43e5252d,https://github.com/errai/errai/commit/5aac34079584afdf318afc57892d29cf2840caec,"MAJOR REFACTORING! Lots of breaking API Changes.

- All bus-related stuff has been moved out of errai-ioc and into errai-ioc-bus-support (new module)
- Interfaces from errai-bus which are common to multiple modules but not exclusive to errai-bus, have been moved to errai-common
- A new cycle-breaking module has been added (errai-codegen-tools), which imports errai-common and errai-codegen, used for the ProxyUtil facility. This is required since errai-codegen depends on errai-common.
- CDI tests are known to be passing with the changes. But nothing else. Will begin testing tomorrow. =)",2013-01-03 00:18:54,Mike Brock,"['errai-ioc-bus-support/src/test/java/org/jboss/errai/ioc/support/bus/tests/AbstractErraiIOCBusTest.java', 'errai-ioc-bus-support/src/test/java/org/jboss/errai/ioc/support/bus/tests/client/SenderIntegrationTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/wiring/client/BasicIOCTest.java', 'errai-jaxrs/errai-jaxrs-client/src/main/java/org/jboss/errai/enterprise/client/jaxrs/test/AbstractErraiJaxrsTest.java', 'errai-jaxrs/errai-jaxrs-client/src/test/java/org/jboss/errai/enterprise/jaxrs/client/test/ErrorHandlingIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,e7070ac8f41d679bca74181821d764af43e5252d,997d808ce7741a1844337d514c824dd95d516d3f,https://github.com/errai/errai/commit/e7070ac8f41d679bca74181821d764af43e5252d,"MAJOR REFACTORING! Lots of breaking API Changes.

- All bus-related stuff has been moved out of errai-ioc and into errai-ioc-bus-support (new module)
- Interfaces from errai-bus which are common to multiple modules but not exclusive to errai-bus, have been moved to errai-common
- A new cycle-breaking module has been added (errai-codegen-tools), which imports errai-common and errai-codegen, used for the ProxyUtil facility. This is required since errai-codegen depends on errai-common.
- CDI tests are known to be passing with the changes. But nothing else. Will begin testing tomorrow. =)",2013-01-03 00:18:26,Mike Brock,"['errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/rpc/client/test/RpcIntegrationTest.java', 'errai-ioc-bus-support/src/test/java/org/jboss/errai/ioc/support/bus/tests/client/BusServiceInjectionsTest.java', 'errai-ioc-bus-support/src/test/java/org/jboss/errai/ioc/support/bus/tests/client/LocalServiceIntegrationTest.java', 'errai-ioc/src/main/java/org/jboss/errai/ioc/client/test/AbstractErraiIOCTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/wiring/client/AlternativeBeanIntegrationTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/wiring/client/DisposerTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/wiring/client/LifecycleExtensionsTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/wiring/client/TestMockBeanIntegrationTest.java', 'errai-jaxrs/errai-jaxrs-client/src/test/java/org/jboss/errai/enterprise/jaxrs/client/test/CallerInjectionIntegrationTest.java', 'errai-jaxrs/errai-jaxrs-client/src/test/java/org/jboss/errai/enterprise/jaxrs/client/test/JacksonIntegrationTest.java', 'errai-jaxrs/errai-jaxrs-client/src/test/java/org/jboss/errai/enterprise/jaxrs/client/test/JaxrsResponseObjectIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,179b14bb985244fcf908222c37583613c5197d97,ffdc3196180533e853ad701cf6d826e90bc18a0c,https://github.com/errai/errai/commit/179b14bb985244fcf908222c37583613c5197d97,Refactored to allow for all the MetaClass tests to run against the GWT implementation as well,2012-12-05 17:26:41,Jonathan Fuerth,"['errai-codegen/src/test/java/org/jboss/errai/codegen/test/meta/AbstractMetaClassTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/meta/java/JavaReflectionMetaClassTest.java']"
errai/errai,https://github.com/errai/errai,60cf6d38535c1c788496b51399af204715124df3,c41612d1f87d44aff78e38b9eaa1f14c4085b1e9,https://github.com/errai/errai/commit/60cf6d38535c1c788496b51399af204715124df3,codegen test refactoring + additional test to fix for ERRAI-291,2012-11-13 17:45:55,Christian Sadilek,"['errai-codegen/src/test/java/org/jboss/errai/codegen/test/ClassBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/ContextBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/InvocationBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/LoopBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/ProxyMakerTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/StatementBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/SwitchBlockBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/TryBlockBuilderTest.java']"
errai/errai,https://github.com/errai/errai,b0d922652668fd208e2371509c6e75770ae34059,b48ff08014f634358619a9aef788349979f4d423,https://github.com/errai/errai/commit/b0d922652668fd208e2371509c6e75770ae34059,data-binding: refactored unit tests,2012-10-19 21:55:46,Christian Sadilek,"['errai-data-binding/src/test/java/org/jboss/errai/databinding/client/test/DataBindingIntegrationTest.java', 'errai-data-binding/src/test/java/org/jboss/errai/databinding/client/test/DefaultConversionTest.java']"
errai/errai,https://github.com/errai/errai,288d2617f6b13ea1a32abb9c2f9e6fe7d6512f97,7943a79c9dbf46a0d004339c1b37fc890d898100,https://github.com/errai/errai/commit/288d2617f6b13ea1a32abb9c2f9e6fe7d6512f97,"data-binding: more refactoring, +additional unit test",2012-10-10 17:07:28,Christian Sadilek,['errai-data-binding/src/test/java/org/jboss/errai/databinding/client/test/DataBindingIntegrationTest.java']
errai/errai,https://github.com/errai/errai,c73c4d10547ce4cf2c5cd95e55b37dc78d114f95,b0abe3c38835453241a328a2536953b5154a43e8,https://github.com/errai/errai/commit/c73c4d10547ce4cf2c5cd95e55b37dc78d114f95,"Added unit/integration test for jackson marshalling, +some minor refactorings",2012-09-04 21:37:02,Christian Sadilek,['errai-jaxrs/errai-jaxrs-client/src/test/java/org/jboss/errai/enterprise/jaxrs/client/test/JacksonIntegrationTest.java']
errai/errai,https://github.com/errai/errai,9c82482e590888f973c3c70bcd694c3460529cc0,5ceb727bc878808b958f2a5cb0e4c0b124752b15,https://github.com/errai/errai/commit/9c82482e590888f973c3c70bcd694c3460529cc0,refactor unit tests -- break some unnecessarily expansive tests into multiple unit tests,2012-08-26 02:14:29,Mike Brock,"['errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/injection/client/test/BeanManagerIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/injection/client/test/InjectionIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/injection/client/test/InstanceInjectionIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,700138995ac3332aa14939103a1522bff24a3968,544b582155cbcc55bd7a7a8eb5519d19b1b6f6e6,https://github.com/errai/errai/commit/700138995ac3332aa14939103a1522bff24a3968,"- add support for @Any and add unit test
- refactor qualifier handling code into super class to simplify code generator",2012-07-26 03:19:34,Mike Brock,"['errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/EventRoutingIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/LocalEventIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,0a275604cae8f4b859a04532a6f4e875d1cc75f3,fd4b77e070579a20d77b68b00523f3995074969a,https://github.com/errai/errai/commit/0a275604cae8f4b859a04532a6f4e875d1cc75f3,"data-binding: fixing initial state sync in case a bound property does not exist, +refactored tests",2012-07-04 20:03:46,Christian Sadilek,['errai-data-binding/src/test/java/org/jboss/errai/databinding/client/test/DataBindingIntegrationTest.java']
errai/errai,https://github.com/errai/errai,dc33416a00967c74ff8fa4901a55f81a9dd4d399,3c9d5db4b0202e6263a88acbe2c702191033dbef,https://github.com/errai/errai/commit/dc33416a00967c74ff8fa4901a55f81a9dd4d399,"Add support for @NamedQueries (plural) and for detecting result type based on the query rather than the annotation target type

There is one test failing now (testFilterByString) because comparisons are not yet null-safe. A refactoring
to fix this is coming next!",2012-06-20 13:45:56,Jonathan Fuerth,['errai-jpa/errai-jpa-client/src/test/java/org/jboss/errai/jpa/test/client/QueryTest.java']
errai/errai,https://github.com/errai/errai,fefbc18f829333817173dc2f0491834ff3f9305d,17ba8cab0ddefdb65109ac61295145629c58308f,https://github.com/errai/errai/commit/fefbc18f829333817173dc2f0491834ff3f9305d,more tests and refactoring for the data-binding module,2012-05-08 22:08:20,Christian Sadilek,"['errai-codegen/src/test/java/org/jboss/errai/codegen/test/SnapshotMakerTest.java', 'errai-data-binding/src/test/java/org/jboss/errai/databinding/client/test/DataBindingIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,8d07774454acb809c0f308920ef38361d514192a,5fdf771a0416b4cd0249391d4fcab29a2dc00ed7,https://github.com/errai/errai/commit/8d07774454acb809c0f308920ef38361d514192a,"- refactor of unit tests (unify test and tests package)
- fix bug when using Stmt.loadVariable(""this"") where it is erroneously optimized out.",2012-05-02 14:59:55,Mike Brock,"['errai-codegen/src/test/java/org/jboss/errai/codegen/test/ClassBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/LiteralTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/SnapshotMakerTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/StatementBuilderTest.java']"
errai/errai,https://github.com/errai/errai,bebc0c9cb80c6ad421386fdc2d9e11b3dfdf3f9a,a66f485e691baa5e716b5a9c59f868c9b5f4986c,https://github.com/errai/errai/commit/bebc0c9cb80c6ad421386fdc2d9e11b3dfdf3f9a,refactoring: package renaming for test package in codegen,2012-04-23 23:09:39,Christian Sadilek,"['errai-codegen/src/test/java/org/jboss/errai/codegen/test/AbstractCodegenTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/AnnotationEncoderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/AnonymousClassStructureBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/ClassBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/ContextBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/IfBlockBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/InvocationBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/LiteralTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/LoopBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/MetaClassTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/ProxyMakerTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/StatementBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/SwitchBlockBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/TryBlockBuilderTest.java', 'errai-codegen/src/test/java/org/jboss/errai/codegen/test/gwt/client/GWTCodegentTest.java']"
errai/errai,https://github.com/errai/errai,49403215cd5c5b9d29e0b7fcaba16238c3af4d7d,dcd227729ebfb27c8b41aefebe57c7986988d61b,https://github.com/errai/errai/commit/49403215cd5c5b9d29e0b7fcaba16238c3af4d7d,"BUG FIX: non-module dependent scoped beans do not work as expected -- were improperly excluded from consideration. (test added)
BUG FIX: introducing new classes in development mode causes Errai to fail in some cases -- add support for hot file reload directly in MetaClassFactory.
              This does not work with annotations -- updated GWTUtil to throw a sane exception explaining to user the reason for the failure.
BUG FIX: transmission buffer will produce corrupt data if it overflows instead of failing gracefully -- will now through and IOException (test added)
REFACTORING: move Java compiling utility class from marshalling into codgen to resolve silly dependency from IOC.",2012-04-15 22:25:33,Mike Brock,['errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/injection/client/test/DependentScopeIntegrationTest.java']
errai/errai,https://github.com/errai/errai,64498f1474ac91a2134e597c2633f076b00aecb6,92df59df213ea8fe049e88abae1088dfcbebf3db,https://github.com/errai/errai/commit/64498f1474ac91a2134e597c2633f076b00aecb6,"- refactor the configiuration for manually configured portable types into common
- renable the bus on gwtTearDown() in the DisabledRemoteCommunicationTest",2012-04-04 03:51:09,Mike Brock,['errai-bus/src/test/java/org/jboss/errai/bus/client/framework/DisabledRemoteCommunicationTest.java']
errai/errai,https://github.com/errai/errai,17cefbb4cd4a008b076d3aabbc65f00f78d85e36,480f057f67399f7155089201ae68892cc94e021d,https://github.com/errai/errai/commit/17cefbb4cd4a008b076d3aabbc65f00f78d85e36,refactored CDI integration tests into feature specific modules,2012-04-03 23:32:21,Christian Sadilek,"['errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/AbstractEventIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/EventObserverIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/EventProducerIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/injection/client/test/BeanManagerIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/injection/client/test/CyclicDepsIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/injection/client/test/DependentScopeIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/injection/client/test/InjectionIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/injection/client/test/InstanceInjectionIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/rpc/client/test/RpcIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,393affe7cdd22e2bc61f7e139f11b6c55c30ed05,023663dc90aae75c6a1a67d81501f1c484502eb5,https://github.com/errai/errai/commit/393affe7cdd22e2bc61f7e139f11b6c55c30ed05,refactoring and code cleanup: renamed IOCTestRunner to IOCSimulatedTestRunner and it now always runs when it is set as the runner.,2012-03-29 23:13:42,Mike Brock,"['errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/injection/client/test/InjectionIntegrationTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/wiring/client/BasicIOCTest.java']"
errai/errai,https://github.com/errai/errai,e5792dd7c06c5600050892994b61f34a2a3f5502,334bf4093d4fc9b5b9b1cdada314ed8a697d48e7,https://github.com/errai/errai/commit/e5792dd7c06c5600050892994b61f34a2a3f5502,test refactorings,2012-03-13 16:10:37,Christian Sadilek,"['errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/integration/client/test/CyclicDepsIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/integration/client/test/DependentScopeIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/integration/client/test/EventProducerIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/integration/client/test/InstanceInjectionIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/integration/client/test/RpcIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/producer/client/test/ProducerIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,29f96a990d597796d728aec3f2ae6883f55327e9,98a11cd387a617ff986e76829c35dadafa24b27e,https://github.com/errai/errai/commit/29f96a990d597796d728aec3f2ae6883f55327e9,test refactoring,2012-02-13 19:01:57,Christian Sadilek,"['errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/integration/client/test/DependentScopeIntegrationTest.java', 'errai-cdi/weld-integration/src/test/java/org/jboss/errai/cdi/integration/client/test/RpcIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,022070f588699bfaa721b5a9577651c2fe801d85,51884bfe6ff37041aaa96759e9fc4f4206127854,https://github.com/errai/errai/commit/022070f588699bfaa721b5a9577651c2fe801d85,more test refactoring,2012-01-16 00:43:30,Christian Sadilek,['weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/AbstractEventIntegrationTest.java']
errai/errai,https://github.com/errai/errai,69ac9c069da37d228e4ca97b8557de2c8bd1d71b,a694f345c683c3ba58c8423568af999da19f6572,https://github.com/errai/errai/commit/69ac9c069da37d228e4ca97b8557de2c8bd1d71b,refactored integration-tests,2012-01-15 22:15:21,Christian Sadilek,"['weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/EventObserverIntegrationTest.java', 'weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/EventProducerIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,c9298966bc4a505c6db05a4678308c003048e9af,2863a0bcc169e1a46676132962c2483986c85cdd,https://github.com/errai/errai/commit/c9298966bc4a505c6db05a4678308c003048e9af,test refactoring,2012-01-04 23:18:35,Christian Sadilek,['errai-common/src/test/java/org/jboss/errai/common/metadata/MetaDataScannerTest.java']
errai/errai,https://github.com/errai/errai,c3c7b2f26c8713db7fbf07c7c7ea5ea69ca89dca,b33756bb01b07c0a0a7c96402cad213c26ba795b,https://github.com/errai/errai/commit/c3c7b2f26c8713db7fbf07c7c7ea5ea69ca89dca,test refactoring,2011-12-19 21:50:15,Christian Sadilek,['errai-bus/src/test/java/org/jboss/errai/bus/client/framework/ErrorHandlingTest.java']
errai/errai,https://github.com/errai/errai,ce01cae81f61add53c96f451467861101dfb28ba,31c25616c2acd430b8bbf071769e041719d1a8b2,https://github.com/errai/errai/commit/ce01cae81f61add53c96f451467861101dfb28ba,minor test refactoring,2011-12-16 20:52:24,Christian Sadilek,['errai-bus/src/main/java/org/jboss/errai/bus/client/tests/AbstractErraiTest.java']
errai/errai,https://github.com/errai/errai,2cb1dbbccac1c48fc365aaf90ef620e6adc017a6,df46b6a050bf4228052c88332d114ccbea82038c,https://github.com/errai/errai/commit/2cb1dbbccac1c48fc365aaf90ef620e6adc017a6,refactored tests: using CDI.addPostInitTask directly (avoiding use of extra timer),2011-11-30 23:07:35,Christian Sadilek,"['weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/AbstractEventIntegrationTest.java', 'weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/EventObserverIntegrationTest.java', 'weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/EventProducerIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,a0789df1e84828d12b77e44875d934604efe4591,ac4ebf6b3da41670de67f366815ca0ee996d3915,https://github.com/errai/errai/commit/a0789df1e84828d12b77e44875d934604efe4591,"refactoring: moved json parsers to marshalling package, and further improved mapping model API. Exception marshalling tests not yet passing. Also, updated all copyrights.",2011-11-30 18:40:04,Mike Brock,"['errai-bus/src/main/java/org/jboss/errai/bus/client/tests/AbstractErraiTest.java', 'errai-bus/src/test/java/org/jboss/errai/bus/client/framework/ErrorHandlingTest.java', 'errai-bus/src/test/java/org/jboss/errai/bus/tests/errai103/Errai103Test.java']"
errai/errai,https://github.com/errai/errai,ba8ef025fcc725eb2eb7fc87464bd5b98d09eaaf,ce53e0f32eac0be6cb215d338e3b13b0f29f26d4,https://github.com/errai/errai/commit/ba8ef025fcc725eb2eb7fc87464bd5b98d09eaaf,upgraded to latest 2.0 and refactoring,2011-11-14 23:37:26,Christian Sadilek,['errai-jaxrs-client/src/main/java/org/jboss/errai/enterprise/client/jaxrs/test/AbstractErraiJaxrsTest.java']
errai/errai,https://github.com/errai/errai,8f448c126db24029539c80ac334e031772349cc0,ad7e793dc27d1d0aa00875d463a51afb8a1b06c6,https://github.com/errai/errai/commit/8f448c126db24029539c80ac334e031772349cc0,test refactorings,2011-08-29 15:42:51,Mike Brock,"['weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/EventObserverIntegrationTest.java', 'weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/EventProducerIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,ad7e793dc27d1d0aa00875d463a51afb8a1b06c6,b729b110c0d6771e2c96aa6a224e5d7bd58fe385,https://github.com/errai/errai/commit/ad7e793dc27d1d0aa00875d463a51afb8a1b06c6,test refactorings,2011-08-28 19:53:38,Mike Brock,"['weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/AbstractEventIntegrationTest.java', 'weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/EventObserverIntegrationTest.java', 'weld-integration/src/test/java/org/jboss/errai/cdi/event/client/test/EventProducerIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,af3b128e347649bd88da1188da4d6da84c188305,293cd9c92f992473d95112fe9bc927a679f9ecdf,https://github.com/errai/errai/commit/af3b128e347649bd88da1188da4d6da84c188305,refactored and added tests,2011-07-22 19:04:58,Christian Sadilek,"['integration/src/test/java/org/jboss/errai/cdi/invalid/producer/client/test/InvalidProducerIntegrationTest.java', 'integration/src/test/java/org/jboss/errai/cdi/producer/client/test/ProducerIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,2cf39224a25eea296b6d45d544d68791d1e41dff,468bfe1317949c33da6d90d254509b11ca5b9adc,https://github.com/errai/errai/commit/2cf39224a25eea296b6d45d544d68791d1e41dff,test refactoring,2011-07-21 20:27:00,Christian Sadilek,"['integration/src/main/java/org/jboss/errai/cdi/client/AbstractErraiCDITest.java', 'integration/src/test/java/org/jboss/errai/cdi/client/test/ProducerIntegrationTest.java', 'integration/src/test/java/org/jboss/errai/cdi/event/client/test/AbstractEventIntegrationTest.java', 'integration/src/test/java/org/jboss/errai/cdi/event/client/test/EventObserverIntegrationTest.java', 'integration/src/test/java/org/jboss/errai/cdi/event/client/test/EventProducerIntegrationTest.java', 'integration/src/test/java/org/jboss/errai/cdi/producer/client/test/ProducerIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,c1b33b9b552ab9ecf809e6ddae2740b0d4d48251,1f59c7036d00c1275610c1700982afc42fd0b2fe,https://github.com/errai/errai/commit/c1b33b9b552ab9ecf809e6ddae2740b0d4d48251,"refactoring, completed field assignment test",2011-07-06 22:13:05,Christian Sadilek,['errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/StatementBuilderTest.java']
errai/errai,https://github.com/errai/errai,47b19edfd638f320d128a654d5ff4cf0d667955e,c50320c714e4369fe7874bc1efdd2a3f68a497ae,https://github.com/errai/errai/commit/47b19edfd638f320d128a654d5ff4cf0d667955e,"test working again after objectbuilder changes, +refactoring of package structure",2011-06-21 15:49:42,Christian Sadilek,"['errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/AnnotationEncoderTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/ContextBuilderTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/IfBlockBuilderTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/LoopBuilderTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/StatementBuilderTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/literals/LiteralTest.java']"
errai/errai,https://github.com/errai/errai,22d1d0486e5e41534388d3df5578d63eacd86cc1,81a7c92b67d868a07d2f044a59208e39dc21823f,https://github.com/errai/errai/commit/22d1d0486e5e41534388d3df5578d63eacd86cc1,refactored tests,2011-06-20 20:06:15,Christian Sadilek,['integration/src/test/java/org/jboss/errai/cdi/rebind/EventProviderTest.java']
errai/errai,https://github.com/errai/errai,058e50b10da2d9fc3fcd7736f2d1215c591f9c42,161ea3b9b36206c90665bf8017f8ced27ad9eb61,https://github.com/errai/errai/commit/058e50b10da2d9fc3fcd7736f2d1215c591f9c42,unit test refactoring,2011-06-15 16:34:26,Christian Sadilek,"['errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/ContextBuilderTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/IfBlockBuilderTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/InvocationBuilderTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/LoopBuilderTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/StatementBuilderTest.java']"
errai/errai,https://github.com/errai/errai,febe6b67ce0e48ca84db5563277692c8bab218cc,eaf0a1df6587cd44f00345d1f445f768a6e18f7d,https://github.com/errai/errai/commit/febe6b67ce0e48ca84db5563277692c8bab218cc,refactored ifblock builder tests,2011-06-06 21:59:25,Christian Sadilek,['errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/IfBlockBuilderTest.java']
errai/errai,https://github.com/errai/errai,8f5fab214d7e97865286d5fb6acd94d83513af40,93f4d9a76e63f6dd05d423aa7fb1131d9f87523f,https://github.com/errai/errai/commit/8f5fab214d7e97865286d5fb6acd94d83513af40,refactored tests,2011-05-27 16:12:48,Christian Sadilek,"['errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/InvocationBuilderTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/LoopBuilderTest.java']"
errai/errai,https://github.com/errai/errai,23baf5d3daed14403533dd852ee0a0433ae69a85,c4cc24d7a5cccd76061ba613fa3a12138851ade5,https://github.com/errai/errai/commit/23baf5d3daed14403533dd852ee0a0433ae69a85,unit tests and refactoring,2011-05-25 22:38:30,Christian Sadilek,"['errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/AbstractStatementBuilderTest.java', 'errai-ioc/src/test/java/org/jboss/errai/ioc/tests/rebind/LoopStatementBuilderTest.java']"
errai/errai,https://github.com/errai/errai,19622db25ebfe2175397b36563ecb3d7e7a4b889,e84d1781e85fe574d2746a5db1a452e02c05f171,https://github.com/errai/errai/commit/19622db25ebfe2175397b36563ecb3d7e7a4b889,refactored event integration tests,2011-05-09 23:10:45,Christian Sadilek,"['integration/src/test/java/org/jboss/errai/cdi/client/test/AbstractEventIntegrationTest.java', 'integration/src/test/java/org/jboss/errai/cdi/client/test/EventObserverIntegrationTest.java', 'integration/src/test/java/org/jboss/errai/cdi/client/test/EventProducerIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,eab61af8bfc2ddfd5757e7a16cacab11fea7be78,0b0feccbdfe9766bd67f3fd59afee01ee8bd3b05,https://github.com/errai/errai/commit/eab61af8bfc2ddfd5757e7a16cacab11fea7be78,some refactoring on the integration tests,2011-05-03 21:54:08,Christian Sadilek,"['integration/src/test/java/org/jboss/errai/cdi/client/test/EventObserverIntegrationTest.java', 'integration/src/test/java/org/jboss/errai/cdi/client/test/EventProducerIntegrationTest.java']"
errai/errai,https://github.com/errai/errai,b8a2362a06c2bb748eca63a975aa15437c675350,dedabe05745c01adf5c4939fbbac58cc9b538454,https://github.com/errai/errai/commit/b8a2362a06c2bb748eca63a975aa15437c675350,"serialization fixes, and refactored tests to work properly.",2010-08-11 15:45:52,Mike Brock,['errai-bus/src/test/java/org/jboss/errai/bus/tests/errai103/Errai103Test.java']
pwm-project/pwm,https://github.com/pwm-project/pwm,c4ac86b50058e15062fbc9d3fbda63fcd0ec4678,ea543c22476f09b8cb67452049b7799929d4215f,https://github.com/pwm-project/pwm/commit/c4ac86b50058e15062fbc9d3fbda63fcd0ec4678,"- macro refactoring
- improved macro unit tests
- switched to using sample data for macro help
- added macro for @User:PwExpireTime:pattern:tz@ for consistency",2020-10-18 10:24:09,Jason Rivard,"['server/src/test/java/password/pwm/config/profile/PasswordRuleReaderHelperTest.java', 'server/src/test/java/password/pwm/util/macro/MacroTest.java']"
pwm-project/pwm,https://github.com/pwm-project/pwm,a6a1a97af1f092add3946ba876f9741ba5df9cac,8bc79cc89a3e2431d85f9037f1cf98d6d7870f63,https://github.com/pwm-project/pwm/commit/a6a1a97af1f092add3946ba876f9741ba5df9cac,"tests, errorprone fixes and refactorings",2020-07-19 00:59:54,Jason Rivard,"['server/src/test/java/password/pwm/config/PwmSettingPropertyTest.java', 'server/src/test/java/password/pwm/config/PwmSettingTest.java', 'server/src/test/java/password/pwm/config/PwmSettingXmlTest.java', 'server/src/test/java/password/pwm/util/java/AverageTrackerTest.java']"
pwm-project/pwm,https://github.com/pwm-project/pwm,5ec4b508fd1d5758620fffd51e946e4c023d7d9b,e670f6d54e272bd2077676dd1426e5b09fcc553e,https://github.com/pwm-project/pwm/commit/5ec4b508fd1d5758620fffd51e946e4c023d7d9b,refactor self cert generator for testability and maintenance,2020-05-21 19:59:58,Jason Rivard,"['server/src/test/java/password/pwm/tests/MakeSelfSignedCertTest.java', 'server/src/test/java/password/pwm/util/secure/self/SelfCertGeneratorTest.java']"
pwm-project/pwm,https://github.com/pwm-project/pwm,486a6ac50d231a456dcff56ce0b7126462475226,6b2a108b6edb789b644577d7703d820f9e0cf49b,https://github.com/pwm-project/pwm/commit/486a6ac50d231a456dcff56ce0b7126462475226,"test code reformating and refactoring, create and enable 'SlowTest' tests.",2019-03-03 00:01:34,jrivard@gmail.com,"['pwm-cr/src/test/java/password/pwm/cr/ChaiXmlResponseSet1Test.java', 'pwm-cr/src/test/java/password/pwm/cr/ChaiXmlResponseSetReaderTest.java', 'server/src/manual-test/java/password/pwm/manual/LocalDBLoggerTest.java', 'server/src/manual-test/java/password/pwm/manual/LocalDBStoredQueueTest.java', 'server/src/manual-test/java/password/pwm/manual/LocalDBTest.java', 'server/src/test/java/javax/mail/internet/InternetAddressTest.java', 'server/src/test/java/password/pwm/AppPropertyTest.java', 'server/src/test/java/password/pwm/config/PwmSettingCategoryTest.java', 'server/src/test/java/password/pwm/config/PwmSettingPropertyTest.java', 'server/src/test/java/password/pwm/config/PwmSettingTest.java', 'server/src/test/java/password/pwm/config/option/IdentityVerificationMethodEnumTest.java', 'server/src/test/java/password/pwm/config/profile/PwmPasswordRuleTest.java', 'server/src/test/java/password/pwm/config/profile/RuleHelperTest.java', 'server/src/test/java/password/pwm/error/PwmErrorTest.java', 'server/src/test/java/password/pwm/health/HealthMessageTest.java', 'server/src/test/java/password/pwm/http/client/PwmHttpClientTest.java', 'server/src/test/java/password/pwm/http/servlet/ControlledPwmServletTest.java', 'server/src/test/java/password/pwm/i18n/AdminPropertyKeysTest.java', 'server/src/test/java/password/pwm/i18n/NonLocalizedKeyTest.java', 'server/src/test/java/password/pwm/svc/email/InternetAddressTest.java', 'server/src/test/java/password/pwm/svc/event/AuditEventTest.java', 'server/src/test/java/password/pwm/svc/event/CEFAuditFormatterTest.java', 'server/src/test/java/password/pwm/svc/event/JsonAuditFormatterTest.java', 'server/src/test/java/password/pwm/tests/MakeSelfSignedCertTest.java', 'server/src/test/java/password/pwm/tests/PwmPasswordJudgeTest.java', 'server/src/test/java/password/pwm/util/PwmPasswordRuleValidatorTest.java', 'server/src/test/java/password/pwm/util/java/AtomicLoopIntIncrementerTest.java', 'server/src/test/java/password/pwm/util/java/TimeDurationTest.java', 'server/src/test/java/password/pwm/util/localdb/LocalDBExtendedTest.java', 'server/src/test/java/password/pwm/util/localdb/LocalDBLoggerExtendedTest.java', 'server/src/test/java/password/pwm/util/localdb/LocalDBStoredQueueExtendedTest.java', 'server/src/test/java/password/pwm/util/macro/MacroTest.java', 'server/src/test/java/password/pwm/util/otp/OTPPamUtilTest.java', 'server/src/test/java/password/pwm/util/otp/OTPUrlUtilTest.java', 'server/src/test/java/password/pwm/util/queue/EmailQueueManagerTest.java', 'server/src/test/java/password/pwm/ws/server/rest/RestServletTest.java']"
pwm-project/pwm,https://github.com/pwm-project/pwm,6b2a108b6edb789b644577d7703d820f9e0cf49b,8e5cf44b9435ab8350e59c1c749f2e990d0e596c,https://github.com/pwm-project/pwm/commit/6b2a108b6edb789b644577d7703d820f9e0cf49b,junit test refactoring and removal of deprecated methods/classes,2019-03-02 00:12:23,jrivard@gmail.com,"['server/src/manual-test/java/password/pwm/manual/LocalDBLoggerTest.java', 'server/src/manual-test/java/password/pwm/manual/LocalDBStoredQueueTest.java', 'server/src/manual-test/java/password/pwm/manual/LocalDBTest.java', 'server/src/test/java/javax/mail/internet/InternetAddressTest.java', 'server/src/test/java/password/pwm/AppPropertyTest.java', 'server/src/test/java/password/pwm/error/PwmErrorTest.java', 'server/src/test/java/password/pwm/svc/event/SyslogAuditServiceTest.java', 'server/src/test/java/password/pwm/tests/MakeSelfSignedCertTest.java', 'server/src/test/java/password/pwm/tests/PwmPasswordJudgeTest.java', 'server/src/test/java/password/pwm/util/queue/EmailQueueManagerTest.java']"
pwm-project/pwm,https://github.com/pwm-project/pwm,d30816d12e95c1e6991d936ae5503cfe3d4a6039,a275893cef9dada41e8337360cb722057e49436a,https://github.com/pwm-project/pwm/commit/d30816d12e95c1e6991d936ae5503cfe3d4a6039,"- controlledpwmservlet test case
- remove Helper.java
- code refactoring",2017-03-02 09:31:29,Jason Rivard,"['src/main/java/password/pwm/http/tag/conditional/PwmIfTest.java', 'src/test/java/password/pwm/error/PwmErrorTest.java', 'src/test/java/password/pwm/http/servlet/ControlledPwmServletTest.java', 'src/test/java/password/pwm/manual/LocalDBLoggerTest.java']"
pwm-project/pwm,https://github.com/pwm-project/pwm,f53221d5deb9e2c902e87b0cd2be8a907ae0d8a0,6d0814a3c046e12763af98f491629b7d962a54b2,https://github.com/pwm-project/pwm/commit/f53221d5deb9e2c902e87b0cd2be8a907ae0d8a0,"Fixed an index out of bounds exception when performing the consecutive character validation check, added a unit test, and did a little refactoring.",2016-05-23 22:35:37,James Albright,['src/test/java/password/pwm/util/PwmPasswordRuleValidatorTest.java']
apache/metron,https://github.com/apache/metron,862244721fef7ba7389000cc2f3d0756bb07d69d,309ce65f863d2532ca29a1c779bda02c1d42ee4d,https://github.com/apache/metron/commit/862244721fef7ba7389000cc2f3d0756bb07d69d,METRON-1963 Remove left over integration test from before refactoring (ottobackwards) closes apache/metron#1319,2019-01-04 17:55:39,ottobackwards,"['metron-platform/metron-parsers/src/test/java/org/apache/metron/parsers/integration/Syslog3164ParserIntegrationTest.java', 'metron-platform/metron-parsing/metron-parsers-common/src/test/java/org/apache/metron/parsers/integration/ParserIntegrationTest.java']"
apache/metron,https://github.com/apache/metron,7967f358c6c4b8437935c43e54179126e48e248f,3e7785920e8f0c5aadf36e05dbcfa69252cc5574,https://github.com/apache/metron/commit/7967f358c6c4b8437935c43e54179126e48e248f,METRON-1726: Refactor PcapTopologyIntegrationTest (mmiklavc via mmiklavc) closes apache/metron#1140,2018-08-07 21:02:20,mmiklavc,['metron-platform/metron-pcap-backend/src/test/java/org/apache/metron/pcap/integration/PcapTopologyIntegrationTest.java']
apache/metron,https://github.com/apache/metron,35d81cb9d1e7cac9d13b64bc3baaf6f6b3354d82,acb8b9287e8b6a2a0ced60855f0e5d6e6c343062,https://github.com/apache/metron/commit/35d81cb9d1e7cac9d13b64bc3baaf6f6b3354d82,METRON-1429 SearchIntegrationTest refactor (merrimanr) closes apache/metron#909,2018-01-25 16:30:06,merrimanr,"['metron-interface/metron-rest/src/test/java/org/apache/metron/rest/controller/MetaAlertControllerIntegrationTest.java', 'metron-interface/metron-rest/src/test/java/org/apache/metron/rest/controller/UpdateControllerIntegrationTest.java', 'metron-platform/metron-elasticsearch/src/test/java/org/apache/metron/elasticsearch/integration/ElasticsearchSearchIntegrationTest.java', 'metron-platform/metron-indexing/src/test/java/org/apache/metron/indexing/dao/SearchIntegrationTest.java']"
julianhyde/optiq,https://github.com/julianhyde/optiq,a0124a27152bd2b1556c36c61e584d0a8bde7979,e609b9df578efcf42003aa03a86b6e611d9986ad,https://github.com/julianhyde/optiq/commit/a0124a27152bd2b1556c36c61e584d0a8bde7979,"Refactor SQL validator testing infrastructure so SQL parser is configurable.

 Add a test for validating queries with bracket syntax for quoting ids.",2014-01-21 01:48:08,julianhyde,"['core/src/test/java/org/eigenbase/sql/test/SqlAdvisorTest.java', 'core/src/test/java/org/eigenbase/sql/test/SqlOperatorBaseTest.java', 'core/src/test/java/org/eigenbase/sql/test/SqlOperatorTest.java', 'core/src/test/java/org/eigenbase/test/SqlValidatorFeatureTest.java', 'core/src/test/java/org/eigenbase/test/SqlValidatorTest.java']"
julianhyde/optiq,https://github.com/julianhyde/optiq,2145b9bd56b03a8bb10840219abd5e606fc932f1,407c012dc40a0506e01edd732e1295e1bf2f25f5,https://github.com/julianhyde/optiq/commit/2145b9bd56b03a8bb10840219abd5e606fc932f1,"Fix data type conversion when creating a clone table in memory. Column loader now accepts an argument describing what data type is used to express each field.

Better handling of JdbcSchema when the list of tables in schema has been pre-populated but the columns of a particular table have not.

Make timeZone available for queries that populate in-memory tables.

Refactor and add tests for code relating to Mapping.

Fix how strings are escaped in JsonBuilder.

By default, test suite runs against hsqldb but you can pass '-Doptiq.test.db=mysql' to override.",2013-11-11 18:21:00,julianhyde,"['core/src/test/java/net/hydromatic/optiq/impl/clone/ArrayTableTest.java', 'core/src/test/java/net/hydromatic/optiq/tools/FrameworksTest.java', 'core/src/test/java/org/eigenbase/util/UtilTest.java']"
paul-hammant/paranamer,https://github.com/paul-hammant/paranamer,5f989b216f92175ae3904af66eb775cc9e42309a,df43a30d0dc3b30fe68867fc1de0b84330dfbd7e,https://github.com/paul-hammant/paranamer/commit/5f989b216f92175ae3904af66eb775cc9e42309a,small refactor of tests for cleanliness,2013-07-02 22:56:23,Sam Halliday,['paranamer/src/test/com/thoughtworks/paranamer/JavadocParanamerTest.java']
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,d3e3f1e8b109723d098859fc9ff0df054a0db1d6,413538c45326e0fd323e896b1f93c7693eeec44f,https://github.com/jclouds/legacy-jclouds/commit/d3e3f1e8b109723d098859fc9ff0df054a0db1d6,refactored swift MPU and added test,2013-04-09 02:12:38,adriancole,['apis/swift/src/test/java/org/jclouds/openstack/swift/blobstore/strategy/internal/SequentialMultipartUploadStrategyMockTest.java']
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,413538c45326e0fd323e896b1f93c7693eeec44f,33745cdeb11c4e3bfb587dae48ff5319bdbb4211,https://github.com/jclouds/legacy-jclouds/commit/413538c45326e0fd323e896b1f93c7693eeec44f,refactored aws-s3 MPU test,2013-04-09 01:03:37,adriancole,"['providers/aws-s3/src/test/java/org/jclouds/aws/s3/blobstore/strategy/internal/SequentialMultipartUploadStrategyMockTest.java', 'providers/aws-s3/src/test/java/org/jclouds/aws/s3/blobstore/strategy/internal/SequentialMultipartUploadStrategyTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,b6b4237380f71c37f66b7696f0a1db6d462649ed,d6e38116c3c1cc8908fabf6abec904566acc9001,https://github.com/jclouds/legacy-jclouds/commit/b6b4237380f71c37f66b7696f0a1db6d462649ed,"Some refactorings and cleanup, namely:
- Moved all relevant null checks into Resource
- Made create firewall use FirewallOptions instead of a Firewall obj
- Consolidated a lot of the HttpRequests in the expect tests to allow for reuse (in compute)",2013-02-07 03:06:57,David Ribeiro Alves,"['labs/google-compute/src/test/java/org/jclouds/googlecompute/features/FirewallApiExpectTest.java', 'labs/google-compute/src/test/java/org/jclouds/googlecompute/features/FirewallApiLiveTest.java', 'labs/google-compute/src/test/java/org/jclouds/googlecompute/features/ImageApiExpectTest.java', 'labs/google-compute/src/test/java/org/jclouds/googlecompute/features/InstanceApiExpectTest.java', 'labs/google-compute/src/test/java/org/jclouds/googlecompute/features/InstanceApiLiveTest.java', 'labs/google-compute/src/test/java/org/jclouds/googlecompute/features/MachineTypeApiExpectTest.java', 'labs/google-compute/src/test/java/org/jclouds/googlecompute/features/NetworkApiExpectTest.java', 'labs/google-compute/src/test/java/org/jclouds/googlecompute/features/OperationApiExpectTest.java', 'labs/google-compute/src/test/java/org/jclouds/googlecompute/features/ZoneApiExpectTest.java', 'labs/google-compute/src/test/java/org/jclouds/googlecompute/internal/BaseGoogleComputeApiLiveTest.java', 'labs/google-compute/src/test/java/org/jclouds/googlecompute/internal/BaseGoogleComputeExpectTest.java', 'labs/google-compute/src/test/java/org/jclouds/googlecompute/parse/ParseFirewallTest.java', 'labs/google-compute/src/test/java/org/jclouds/googlecompute/parse/ParseInstanceTest.java', 'labs/google-compute/src/test/java/org/jclouds/googlecompute/parse/ParseNetworkTest.java', 'labs/google-compute/src/test/java/org/jclouds/googlecompute/parse/ParseOperationTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,9d75aa353dd0a888d6730eafeabc61d8d8733bae,c37c0b9eccc30e73e11c4fec6bc79d7020a98d5d,https://github.com/jclouds/legacy-jclouds/commit/9d75aa353dd0a888d6730eafeabc61d8d8733bae,refactored ec2 tests so that they can be used in aws-ec2,2013-01-10 21:06:32,adriancole,"['apis/ec2/src/test/java/org/jclouds/ec2/compute/EC2ComputeServiceExpectTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/compute/internal/BaseEC2ComputeServiceContextExpectTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/compute/internal/BaseEC2ComputeServiceExpectTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/config/EC2RestClientModuleExpectTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/features/TagApiExpectTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/features/WindowsApiExpectTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/internal/BaseEC2ClientExpectTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/internal/BaseEC2ExpectTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/compute/internal/BaseAWSEC2ComputeServiceExpectTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,202b9be5e5823f970ef6650a7e8ad66cfdd5aec1,145c2a750c5beeb829a62b3b107e38748954d7ae,https://github.com/jclouds/legacy-jclouds/commit/202b9be5e5823f970ef6650a7e8ad66cfdd5aec1,refactored tests and internal code due to removing custom guava code,2013-01-09 06:23:47,Adrian Cole,"['core/src/test/java/org/jclouds/http/functions/BaseHandlerTest.java', 'core/src/test/java/org/jclouds/http/handlers/BackoffLimitedRetryHandlerTest.java', 'core/src/test/java/org/jclouds/json/BaseParserTest.java', 'core/src/test/java/org/jclouds/reflect/FunctionalReflectionTest.java', 'core/src/test/java/org/jclouds/reflect/InvokableTest.java', 'core/src/test/java/org/jclouds/rest/InputParamValidatorTest.java', 'core/src/test/java/org/jclouds/rest/binders/BindMapToStringPayloadTest.java', 'core/src/test/java/org/jclouds/rest/functions/PresentWhenApiVersionLexicographicallyAtOrAfterSinceApiVersionTest.java', 'core/src/test/java/org/jclouds/rest/internal/BaseAsyncApiTest.java', 'core/src/test/java/org/jclouds/rest/internal/BaseRestApiTest.java', 'core/src/test/java/org/jclouds/rest/internal/BaseRestClientTest.java', 'core/src/test/java/org/jclouds/rest/internal/RestAnnotationProcessorTest.java', 'core/src/test/java/org/jclouds/util/Optionals2Test.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,308911162109cd540f9246f8fcf6f6f7478bbd8d,bd9e998b1284033fad1983408841fccd242b1a0b,https://github.com/jclouds/legacy-jclouds/commit/308911162109cd540f9246f8fcf6f6f7478bbd8d,refactored internal code and tests to use FunctionalReflection,2013-01-07 07:17:14,Adrian Cole,"['apis/cloudsigma/src/test/java/org/jclouds/cloudsigma/binders/BindCloneDriveOptionsToPlainTextStringTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/xml/AttachmentHandlerTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/xml/BundleTaskHandlerTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/xml/CreateVolumeResponseHandlerTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/xml/DescribeAddressesResponseHandlerTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/xml/DescribeBundleTasksResponseHandlerTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/xml/DescribeKeyPairsResponseHandlerTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/xml/DescribeSecurityGroupsResponseHandlerTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/xml/DescribeSnapshotsResponseHandlerTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/xml/DescribeVolumesResponseHandlerTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/xml/InstanceStateChangeHandlerTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/xml/KeyPairResponseHandlerTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/xml/RunInstancesResponseHandlerTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/xml/SnapshotHandlerTest.java', 'apis/openstack-keystone/src/test/java/org/jclouds/openstack/v2_0/functions/PresentWhenExtensionAnnotationNamespaceEqualsAnyNamespaceInExtensionsSetTest.java', 'apis/s3/src/test/java/org/jclouds/s3/fallbacks/FalseIfBucketAlreadyOwnedByYouOrOperationAbortedWhenBucketExistsTest.java', 'apis/swift/src/test/java/org/jclouds/openstack/swift/domain/internal/ParseObjectInfoListFromJsonResponseTest.java', 'apis/swift/src/test/java/org/jclouds/openstack/swift/functions/ParseContainerListFromJsonResponseTest.java', 'apis/swift/src/test/java/org/jclouds/openstack/swift/functions/ParseContainerMetadataFromHeadersTest.java', 'apis/swift/src/test/java/org/jclouds/openstack/swift/functions/ParseObjectInfoFromHeadersTest.java', 'apis/swift/src/test/java/org/jclouds/openstack/swift/internal/BasePayloadTest.java', 'apis/vcloud/src/test/java/org/jclouds/vcloud/binders/BindCatalogItemToXmlPayloadTest.java', 'apis/vcloud/src/test/java/org/jclouds/vcloud/binders/BindCloneVAppParamsToXmlPayloadTest.java', 'apis/vcloud/src/test/java/org/jclouds/vcloud/binders/BindCloneVAppTemplateParamsToXmlPayloadTest.java', 'apis/vcloud/src/test/java/org/jclouds/vcloud/binders/BindDeployVAppParamsToXmlPayloadTest.java', 'apis/vcloud/src/test/java/org/jclouds/vcloud/binders/BindInstantiateVAppTemplateParamsToXmlPayloadTest.java', 'apis/vcloud/src/test/java/org/jclouds/vcloud/binders/BindNetworkConnectionSectionToXmlPayloadTest.java', 'apis/vcloud/src/test/java/org/jclouds/vcloud/binders/BindUndeployVAppParamsToXmlPayloadTest.java', 'apis/vcloud/src/test/java/org/jclouds/vcloud/internal/BasePayloadTest.java', 'blobstore/src/test/java/org/jclouds/blobstore/util/BlobStoreUtilsTest.java', 'common/trmk/src/test/java/org/jclouds/trmk/vcloud_0_8/binders/BindAddNodeServiceToXmlPayloadTest.java', 'common/trmk/src/test/java/org/jclouds/trmk/vcloud_0_8/binders/BindCloneVAppParamsToXmlPayloadTest.java', 'common/trmk/src/test/java/org/jclouds/trmk/vcloud_0_8/binders/BindInstantiateVAppTemplateParamsToXmlPayloadTest.java', 'common/trmk/src/test/java/org/jclouds/trmk/vcloud_0_8/binders/BindVAppConfigurationToXmlPayloadTest.java', 'common/trmk/src/test/java/org/jclouds/trmk/vcloud_0_8/internal/BasePayloadTest.java', 'common/trmk/src/test/java/org/jclouds/trmk/vcloud_0_8/xml/KeyPairByNameHandlerTest.java', 'core/src/test/java/org/jclouds/concurrent/internal/SyncProxyTest.java', 'core/src/test/java/org/jclouds/http/functions/BaseHandlerTest.java', 'core/src/test/java/org/jclouds/http/handlers/BackoffLimitedRetryHandlerTest.java', 'core/src/test/java/org/jclouds/json/BaseParserTest.java', 'core/src/test/java/org/jclouds/reflect/AbstractInvocationHandlerTest.java', 'core/src/test/java/org/jclouds/rest/InputParamValidatorTest.java', 'core/src/test/java/org/jclouds/rest/binders/BindMapToStringPayloadTest.java', 'core/src/test/java/org/jclouds/rest/functions/PresentWhenApiVersionLexicographicallyAtOrAfterSinceApiVersionTest.java', 'core/src/test/java/org/jclouds/rest/internal/BaseAsyncApiTest.java', 'core/src/test/java/org/jclouds/rest/internal/BaseRestApiTest.java', 'core/src/test/java/org/jclouds/rest/internal/RestAnnotationProcessorTest.java', 'core/src/test/java/org/jclouds/util/Optionals2Test.java', 'core/src/test/java/org/jclouds/util/Throwables2Test.java', 'labs/abiquo/src/test/java/org/jclouds/abiquo/binders/BindToPathTest.java', 'labs/abiquo/src/test/java/org/jclouds/abiquo/binders/cloud/BindMoveVolumeToPathTest.java', 'labs/abiquo/src/test/java/org/jclouds/abiquo/binders/cloud/BindNetworkConfigurationRefToPayloadTest.java', 'labs/abiquo/src/test/java/org/jclouds/abiquo/binders/infrastructure/BindSupportedDevicesLinkToPathTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/parse/DescribeSecurityGroupsResponseTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/xml/AWSRunInstancesResponseHandlerTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/xml/DescribePlacementGroupsResponseHandlerTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/xml/DescribeReservedInstancesOfferingResponseHandlerTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/xml/SpotInstanceHandlerTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/xml/SpotInstancesHandlerTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,472f6dcc322e71b7149dd38461a747137c899a59,35795d3bfc7f486ed5a7d554d471137e7e442149,https://github.com/jclouds/legacy-jclouds/commit/472f6dcc322e71b7149dd38461a747137c899a59,wave 2 of refactoring ConcurrentOpenSocketFinder and test,2012-12-04 05:52:25,Adrian Cole,['compute/src/test/java/org/jclouds/compute/util/ConcurrentOpenSocketFinderTest.java']
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,19952dec477a2d58ddd09a8a7e3c10baca0de0b2,e5a4dd4e76d097ef4b9fa4e29866c149aef778c4,https://github.com/jclouds/legacy-jclouds/commit/19952dec477a2d58ddd09a8a7e3c10baca0de0b2,Refactoring ConcurrentOpenSocketFinderTest.testChecksSocketsConcurrently to try to prevent timeouts,2012-11-28 02:06:23,Andrew Phillips,['compute/src/test/java/org/jclouds/compute/util/ConcurrentOpenSocketFinderTest.java']
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,c644b74c4c209819590ca04a19a57acf61c1b8c5,fcde81ea7cab4bd8dcc59e8530ae167544a7f898,https://github.com/jclouds/legacy-jclouds/commit/c644b74c4c209819590ca04a19a57acf61c1b8c5,Fix CloudStack ISOClient.get and list ISOs based on test data from http://bugs.cloudstack.org/browse/CS-15572; refactored related tests to expect format,2012-11-27 18:57:13,Adrian Cole,"['apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOAsyncClientTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOClientExpectTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,63602feb2c604673d5c28c6585d3aaa9f396e901,55025c076403225a520d368a731951d7ae60031a,https://github.com/jclouds/legacy-jclouds/commit/63602feb2c604673d5c28c6585d3aaa9f396e901,refactored cloudstack expect tests and added CloudStackComputeServiceAdapterExpectTest,2012-11-05 14:26:38,Adrian Cole,"['apis/cloudstack/src/test/java/org/jclouds/cloudstack/PasswordAuthenticationExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterLiveTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/AccountClientExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/DomainDomainClientExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallClientExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalConfigurationClientExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalDomainClientExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostClientExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalPodClientExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalVlanClientExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalZoneClientExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SSHKeyPairClientExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SessionClientExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/VirtualMachineClientExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ZoneClientExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/internal/BaseCloudStackComputeServiceContextExpectTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/internal/BaseCloudStackExpectTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,a71032df95ea6fbac7c9edccc30c7a23d47697b9,99d3422b4d8d7f447a62a57312272c10313e8801,https://github.com/jclouds/legacy-jclouds/commit/a71032df95ea6fbac7c9edccc30c7a23d47697b9,"Refactored unit tests to avoid recurrent timeouts.

When using TestNG timeout option to control test execution, random
timeout failures appeared. The tests have been refactored to manually
control the timeout.",2012-10-03 15:06:13,Ignasi Barrera,['labs/abiquo/src/test/java/org/jclouds/abiquo/internal/BaseMonitoringServiceTest.java']
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,376db9e239ad3610c984f340786f96de9a1d2991,b77a3bf0c8af5fe7919a021bfec0e4be277d8afe,https://github.com/jclouds/legacy-jclouds/commit/376db9e239ad3610c984f340786f96de9a1d2991,refactored openstack-nova expect tests so that they don't mask zone ids from subclasses,2012-09-30 01:35:03,Adrian Cole,"['apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/AccessKeyAndSecretKeyAndTenantIdAuthenticationExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/AccessKeyAndSecretKeyAndTenantNamePropertyAuthenticationExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/AccessKeyAndSecretKeyAuthenticationExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/PasswordAuthenticationExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/PasswordAuthenticationWithTenantNameExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/compute/NovaComputeServiceAdapterExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/compute/NovaComputeServiceExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/extensions/FloatingIPApiExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/extensions/FloatingIPAsyncApiExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/extensions/KeyPairApiExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/extensions/SecurityGroupApiExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/features/ExtensionApiExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/features/FlavorApiExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/features/ImageApiExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/features/ServerApiExpectTest.java', 'apis/openstack-nova/src/test/java/org/jclouds/openstack/nova/v2_0/internal/BaseNovaExpectTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,19cd7b4aa3b5b22b475e4d2e51bbad147b8c168c,f20b7a902a804e295877ba35bc8305f573110ea6,https://github.com/jclouds/legacy-jclouds/commit/19cd7b4aa3b5b22b475e4d2e51bbad147b8c168c,refactor out test session to exist on the suite scope,2012-04-03 13:49:49,danikov,['labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/internal/BaseVCloudDirectorClientLiveTest.java']
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,075dc00a13333c2b1c1033700e3b6e8e6f95d14b,6f6b958aadf449eeac70eb2b4d3a8891ef899b18,https://github.com/jclouds/legacy-jclouds/commit/075dc00a13333c2b1c1033700e3b6e8e6f95d14b,refactor out admin tests,2012-04-03 10:11:28,danikov,"['labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/AbstractVAppClientLiveTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/VAppClientLiveTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/VAppTemplateClientLiveTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/admin/AdminCatalogClientExpectTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/admin/AdminCatalogClientLiveTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/admin/AdminNetworkClientExpectTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/admin/AdminNetworkClientLiveTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/admin/AdminOrgClientExpectTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/admin/AdminOrgClientLiveTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/admin/AdminQueryClientExpectTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/admin/AdminQueryClientLiveTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/admin/AdminVdcClientExpectTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/admin/AdminVdcClientLiveTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/admin/GroupClientExpectTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/admin/GroupClientLiveTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/admin/UserClientExpectTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/admin/UserClientLiveTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,cfcd92cbea8ef6a234f8b718a9a5cc611262d393,712ed44a17c3fad6b1a4960e2c68135a90e5ea52,https://github.com/jclouds/legacy-jclouds/commit/cfcd92cbea8ef6a234f8b718a9a5cc611262d393,adding HP Cloud provider image client and security group client live tests and fixing keypair client test after refactor,2012-03-13 14:44:22,Mike Arnold,"['labs/hpcloud-compute/src/test/java/org/jclouds/hpcloud/compute/features/HPCloudComputeImageClientLiveTest.java', 'labs/hpcloud-compute/src/test/java/org/jclouds/hpcloud/compute/features/HPCloudComputeKeyPairClientLiveTest.java', 'labs/hpcloud-compute/src/test/java/org/jclouds/hpcloud/compute/features/HPCloudComputeSecurityGroupClientLiveTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,9069f4879cd6145ff48ba717d37d0399641b19cc,15a297d2003e84450eb49e237f3bbdb67951a4e3,https://github.com/jclouds/legacy-jclouds/commit/9069f4879cd6145ff48ba717d37d0399641b19cc,refactored base vcloud test class to work when parameters aren't supplied,2012-03-07 23:15:14,Adrian Cole,"['labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/MediaClientLiveTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/NetworkClientLiveTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/features/VdcClientLiveTest.java', 'labs/vcloud-director/src/test/java/org/jclouds/vcloud/director/v1_5/internal/BaseVCloudDirectorClientLiveTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,3a9d660b8e8a1e51c8eb09d633497fdf50f439e2,80a965d3fb8de4d416693ed58d795ae44535a1f6,https://github.com/jclouds/legacy-jclouds/commit/3a9d660b8e8a1e51c8eb09d633497fdf50f439e2,"refactored ec2 options test, especially to use known image id (it was selecting centos since we changed the location id)",2012-02-03 08:25:05,Adrian Cole,['providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/compute/AWSEC2ComputeServiceLiveTest.java']
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,f93c495c4369f7a5636c35ef84a48baeb5cd00ab,93a5bae746e699a800b35ab99cb3ebc5f95848f9,https://github.com/jclouds/legacy-jclouds/commit/f93c495c4369f7a5636c35ef84a48baeb5cd00ab,refactored to use consistent setup*Properties methods like expect tt tests,2012-01-29 12:23:04,Adrian Cole,"['apis/cloudloadbalancers/src/test/java/org/jclouds/cloudloadbalancers/CloudLoadBalancersAsyncClientTest.java', 'apis/cloudloadbalancers/src/test/java/org/jclouds/cloudloadbalancers/features/LoadBalancerAsyncClientTest.java', 'apis/cloudloadbalancers/src/test/java/org/jclouds/cloudloadbalancers/features/LoadBalancerClientLiveTest.java', 'apis/cloudloadbalancers/src/test/java/org/jclouds/cloudloadbalancers/features/NodeAsyncClientTest.java', 'apis/cloudloadbalancers/src/test/java/org/jclouds/cloudloadbalancers/features/NodeClientLiveTest.java', 'apis/cloudservers/src/test/java/org/jclouds/cloudservers/CloudServersAsyncClientTest.java', 'apis/cloudservers/src/test/java/org/jclouds/cloudservers/CloudServersExpectTest.java', 'apis/cloudservers/src/test/java/org/jclouds/cloudservers/handlers/RetryOnRenewExpectTest.java', 'apis/cloudservers/src/test/java/org/jclouds/cloudservers/internal/BaseCloudServersRestClientExpectTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/services/BaseEC2AsyncClientTest.java', 'apis/nova/src/test/java/org/jclouds/openstack/nova/NovaAsyncClientTest.java', 'apis/s3/src/test/java/org/jclouds/s3/binders/BindAsHostPrefixIfConfiguredNoPathTest.java', 'apis/s3/src/test/java/org/jclouds/s3/binders/BindAsHostPrefixIfConfiguredTest.java', 'apis/s3/src/test/java/org/jclouds/s3/filters/RequestAuthorizeSignatureTest.java', 'apis/s3/src/test/java/org/jclouds/s3/internal/BaseS3AsyncClientTest.java', 'apis/swift/src/test/java/org/jclouds/openstack/swift/CommonSwiftClientTest.java', 'apis/vcloud/src/test/java/org/jclouds/vcloud/binders/BindCatalogItemToXmlPayloadTest.java', 'apis/vcloud/src/test/java/org/jclouds/vcloud/binders/BindDeployVAppParamsToXmlPayloadTest.java', 'apis/vcloud/src/test/java/org/jclouds/vcloud/binders/BindInstantiateVAppTemplateParamsToXmlPayloadTest.java', 'apis/vcloud/src/test/java/org/jclouds/vcloud/binders/BindNetworkConnectionSectionToXmlPayloadTest.java', 'apis/vcloud/src/test/java/org/jclouds/vcloud/binders/BindUndeployVAppParamsToXmlPayloadTest.java', 'common/trmk/src/test/java/org/jclouds/trmk/vcloud_0_8/binders/BindInstantiateVAppTemplateParamsToXmlPayloadTest.java', 'common/trmk/src/test/java/org/jclouds/trmk/vcloud_0_8/binders/BindNodeConfigurationToXmlPayloadTest.java', 'common/trmk/src/test/java/org/jclouds/trmk/vcloud_0_8/binders/BindVAppConfigurationToXmlPayloadTest.java', 'core/src/test/java/org/jclouds/rest/RestClientTest.java', 'providers/aws-s3/src/test/java/org/jclouds/aws/s3/AWSS3AsyncClientTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,6302c283a4bcd0d121d8b700639cc8a73e167c02,3df052565fc4493cc0ac42e6b408ac3ab1dd73c3,https://github.com/jclouds/legacy-jclouds/commit/6302c283a4bcd0d121d8b700639cc8a73e167c02,issue 384: refactoring of MachineUtils. NB: some tests have been disabled to finalize mock implementation later,2012-01-17 19:40:17,andreaturli,"['sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/BaseVirtualBoxClientLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/functions/CreateAndInstallVmLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/functions/CreateAndRegisterMachineFromIsoIfNotAlreadyExistsLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/functions/CreateAndRegisterMachineFromIsoIfNotAlreadyExistsTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/functions/CreateMediumIfNotAlreadyExistsLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/functions/CreateMediumIfNotAlreadyExistsTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,ef7e0a46e2140803fe650d0db19b3479c108f605,912635e454ebc9ea5939573f37bc1cf81f6c6893,https://github.com/jclouds/legacy-jclouds/commit/ef7e0a46e2140803fe650d0db19b3479c108f605,refactored expect tests to throw a 'server error' when there's no state expectation configured,2012-01-13 02:04:19,Adrian Cole,"['core/src/test/java/org/jclouds/rest/BaseRestClientExpectTest.java', 'providers/softlayer/src/test/java/org/jclouds/softlayer/features/VirtualGuestClientExpectTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,013c0eaf83486229acb7640a54b81302a2eb4b8d,af598ffeb0215059aaa6a69568c8c11e96083b37,https://github.com/jclouds/legacy-jclouds/commit/013c0eaf83486229acb7640a54b81302a2eb4b8d,refactored configuration and setup to test with build 4.1.8,2012-01-06 02:57:15,Adrian Cole,"['sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/BaseVirtualBoxClientLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/compute/VirtualBoxComputeServiceAdapterLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/functions/CloneAndRegisterMachineFromIsoIfNotAlreadyExistsLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/functions/CreateAndInstallVmLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/functions/CreateAndRegisterMachineFromIsoIfNotAlreadyExistsLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/functions/admin/UnregisterMachineIfExistsAndDeleteItsMediaTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/predicates/IsLinkedClonesLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/predicates/SshAvailableLiveTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,99fb37f6cf443e4843a92dc2ee229070c7f56e12,42137677da51bb7dbfc2ce20bf395815a8cd0ff4,https://github.com/jclouds/legacy-jclouds/commit/99fb37f6cf443e4843a92dc2ee229070c7f56e12,refactored LiveTest code to share property initialization,2012-01-06 01:51:03,Adrian Cole,"['apis/cloudloadbalancers/src/test/java/org/jclouds/cloudloadbalancers/features/BaseCloudLoadBalancersClientLiveTest.java', 'apis/cloudsigma/src/test/java/org/jclouds/cloudsigma/CloudSigmaClientLiveTest.java', 'apis/cloudwatch/src/test/java/org/jclouds/cloudwatch/CloudWatchClientLiveTest.java', 'apis/deltacloud/src/test/java/org/jclouds/deltacloud/ReadOnlyDeltacloudClientLiveTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/CloudApplicationArchitecturesEC2ClientLiveTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/EBSBootEC2ClientLiveTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/compute/TestCanRecreateGroupLiveTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/services/AvailabilityZoneAndRegionClientLiveTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/services/ElasticBlockStoreClientLiveTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/services/ElasticIPAddressClientLiveTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/services/InstanceClientLiveTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/services/KeyPairClientLiveTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/services/SecurityGroupClientLiveTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/services/WindowsClientLiveTest.java', 'apis/elasticstack/src/test/java/org/jclouds/elasticstack/ElasticStackClientLiveTest.java', 'common/trmk/src/test/java/org/jclouds/trmk/vcloud_0_8/compute/suppliers/VAppTemplatesInOrgsLiveTest.java', 'compute/src/test/java/org/jclouds/compute/BaseVersionedServiceLiveTest.java', 'core/src/test/java/org/jclouds/rest/BaseRestClientLiveTest.java', 'loadbalancer/src/test/java/org/jclouds/loadbalancer/BaseLoadBalancerServiceLiveTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/services/AMIClientLiveTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/services/AWSAMIClientLiveTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/services/AWSInstanceClientLiveTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/services/AWSKeyPairClientLiveTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/services/MonitoringClientLiveTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/services/PlacementGroupClientLiveTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/services/SpotInstanceClientLiveTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/services/TagClientLiveTest.java', 'providers/azureblob/src/test/java/org/jclouds/azureblob/AzureBlobClientLiveTest.java', 'providers/cloudsigma-lvs/src/test/java/org/jclouds/cloudsigma/CloudSigmaLasVegasLondonClientLiveTest.java', 'providers/cloudsigma-zrh/src/test/java/org/jclouds/cloudsigma/CloudSigmaZurichClientLiveTest.java', 'providers/elastichosts-lax-p/src/test/java/org/jclouds/elastichosts/ElasticHostsPeer1LosAngelesClientLiveTest.java', 'providers/elastichosts-lon-b/src/test/java/org/jclouds/elastichosts/ElasticHostsBlueSquareLondonClientLiveTest.java', 'providers/elastichosts-lon-p/src/test/java/org/jclouds/elastichosts/ElasticHostsPeer1LondonClientLiveTest.java', 'providers/elastichosts-sat-p/src/test/java/org/jclouds/elastichosts/ElasticHostsPeer1SanAntonioClientLiveTest.java', 'providers/elastichosts-tor-p/src/test/java/org/jclouds/elastichosts/ElasticHostsPeer1TorontoClientLiveTest.java', 'providers/go2cloud-jhb1/src/test/java/org/jclouds/go2cloud/Go2CloudJohannesburg1ClientLiveTest.java', 'providers/gogrid/src/test/java/org/jclouds/gogrid/services/BaseGoGridClientLiveTest.java', 'providers/openhosting-east1/src/test/java/org/jclouds/openhosting/OpenHostingEast1ClientLiveTest.java', 'providers/rimuhosting/src/test/java/org/jclouds/rimuhosting/miro/RimuHostingClientLiveTest.java', 'providers/savvis-symphonyvpdc/src/test/java/org/jclouds/savvis/vpdc/features/BaseVPDCClientLiveTest.java', 'providers/serverlove-z1-man/src/test/java/org/jclouds/serverlove/ServerloveManchesterClientLiveTest.java', 'providers/skalicloud-sdg-my/src/test/java/org/jclouds/skalicloud/SkaliCloudMalaysiaClientLiveTest.java', 'providers/slicehost/src/test/java/org/jclouds/slicehost/SlicehostClientLiveTest.java', 'providers/softlayer/src/test/java/org/jclouds/softlayer/compute/SoftLayerExperimentLiveTest.java', 'providers/trmk-vcloudexpress/src/test/java/org/jclouds/trmk/vcloudexpress/InternetServiceLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/BaseVirtualBoxClientLiveTest.java', 'skeletons/standalone-compute/src/test/java/org/jclouds/servermanager/compute/ServerManagerExperimentLiveTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,7a60ce579b03f272f99990041ac406c9aa388ec4,bfe6cd32a69d06b014570642de8e69bd1cf82f3a,https://github.com/jclouds/legacy-jclouds/commit/7a60ce579b03f272f99990041ac406c9aa388ec4,Added stub ISO live test and ListISOsOptions minor refactoring,2011-12-21 18:10:41,Andrew Donald Kennedy,"['apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOAsyncClientTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOClientLiveTest.java', 'apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListISOsOptionsTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,bf99fb10a06f3b46b64d989cbb65df462769f805,4225b5b49ba0a51da0871cedd1475ac553b29f71,https://github.com/jclouds/legacy-jclouds/commit/bf99fb10a06f3b46b64d989cbb65df462769f805,Issue 757: refactor elastic ip auto-allocation approach and backfill related tests,2011-12-19 09:46:08,Adrian Cole,"['apis/ec2/src/test/java/org/jclouds/ec2/compute/EC2ComputeServiceLiveTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/compute/functions/AddElasticIpsToNodemetadataTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/compute/functions/LoadPublicIpForInstanceOrNullTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/compute/strategy/EC2CreateNodesInGroupThenAddToSetTest.java', 'apis/ec2/src/test/java/org/jclouds/ec2/compute/strategy/EC2DestroyNodeStrategyTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,7748d915f1c6349a8f1d61a48094deb33da1be1d,d2f60e49a434e79c88bd21ec56343d5370ab0a47,https://github.com/jclouds/legacy-jclouds/commit/7748d915f1c6349a8f1d61a48094deb33da1be1d,"issue 384: added 2 statements: GetIPAdressFromMAC and ScanNetworkWithPing + Tests, as initial steps to refactor a IMachineToIpAddress function",2011-11-11 16:37:22,Andrea Turli,"['sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/domain/GetIPAddressFromMACTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/domain/ScanNetworkWithPingTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,98e7c6047cdb694a0d7da4ebed31e971af9df0d6,e9cff5e17caac2ed84d733cbc1e30700d42cea1a,https://github.com/jclouds/legacy-jclouds/commit/98e7c6047cdb694a0d7da4ebed31e971af9df0d6,"Refactored frequently repeated service config (provider,credential etc) into new class BaseVersionedServiceLiveTest and used it in BaseCompute, BaseTerremarkClient and BaseVCloudClient live tests",2011-11-09 15:12:17,Jason King,"['apis/vcloud/src/test/java/org/jclouds/vcloud/internal/BaseVCloudClientLiveTest.java', 'common/trmk/src/test/java/org/jclouds/trmk/vcloud_0_8/internal/BaseTerremarkClientLiveTest.java', 'compute/src/test/java/org/jclouds/compute/BaseComputeServiceLiveTest.java', 'compute/src/test/java/org/jclouds/compute/BaseVersionedServiceLiveTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,dd89ad3068087df368f569d0af67e007382e2e7f,cf4acc8000e39bcb43fee154ce1e09f829bf7bd0,https://github.com/jclouds/legacy-jclouds/commit/dd89ad3068087df368f569d0af67e007382e2e7f,backfilled tests and refactored most of org.jclouds.location.suppliers package,2011-10-23 02:38:25,Adrian Cole,"['apis/cloudwatch/src/test/java/org/jclouds/cloudwatch/CloudWatchAsyncClientTest.java', 'core/src/test/java/org/jclouds/location/suppliers/JustProviderTest.java', 'core/src/test/java/org/jclouds/location/suppliers/OnlyLocationOrFirstRegionOptionallyMatchingRegionIdTest.java', 'core/src/test/java/org/jclouds/location/suppliers/OnlyLocationOrFirstZoneTest.java', 'providers/aws-s3/src/test/java/org/jclouds/aws/s3/AWSS3AsyncClientTest.java', 'providers/aws-s3/src/test/java/org/jclouds/aws/s3/binders/AssignCorrectHostnameAndBindAsHostPrefixIfConfiguredTest.java', 'providers/cloudloadbalancers-us/src/test/java/org/jclouds/cloudloadbalancers/features/BaseCloudLoadBalancersAsyncClientTest.java', 'providers/softlayer/src/test/java/org/jclouds/softlayer/compute/functions/DatacenterToLocationTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,a3505f80d168e06cb2cbcfa8d26c19fbe9ea9bb3,552242e863c5d2e8cea17b284006df83d8f3d00c,https://github.com/jclouds/legacy-jclouds/commit/a3505f80d168e06cb2cbcfa8d26c19fbe9ea9bb3,"issue 384: removed KickstartAdmin, VirtualboxLiveTest. Refactoring of listImages to support yaml idea",2011-10-17 23:15:46,andreaturli,"['sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/experiment/SetupVirtualBoxForLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/experiment/VirtualboxAdministrationKickstartLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/experiment/VirtualboxLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/functions/IsoToIMachineLiveTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,0f73d04fca09c2be4464a1ea3602c4713cb3f9f9,b2ade042bc66cba2ee03899f6f3064216479804b,https://github.com/jclouds/legacy-jclouds/commit/0f73d04fca09c2be4464a1ea3602c4713cb3f9f9,refactored tests so that admin starts first via @BeforeSuite,2011-10-11 06:43:57,Adrian Cole,"['sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/experiment/SetupVirtualBoxForLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/experiment/VirtualboxAdministrationKickstartLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/experiment/VirtualboxLiveTest.java', 'sandbox-apis/virtualbox/src/test/java/org/jclouds/virtualbox/functions/IsoToIMachineLiveTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,20d9df3ad31803708b2edaa334eeb95a59bd8657,1682c06ac3b9194d43d4446d55360193093c3769,https://github.com/jclouds/legacy-jclouds/commit/20d9df3ad31803708b2edaa334eeb95a59bd8657,"Allow users to override timeouts on sync interface: some refactoring, unit test added. See issue #253",2011-10-03 13:16:56,ddurnev,['core/src/test/java/org/jclouds/concurrent/internal/SyncProxyTest.java']
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,86817b76128d7f1781ec9c61efb0128c4ea67146,d3206417346bea06a0ce0ad39e7744066524b72d,https://github.com/jclouds/legacy-jclouds/commit/86817b76128d7f1781ec9c61efb0128c4ea67146,"Issue 550: Refactored the ISO 3166 filtering methods for Providers API.

* core/src/main/java/org/jclouds/providers/ProviderPredicates.java
  (inIso3166Code): Deleted.
  (boundedByIso3166Code): Added.

* core/src/main/java/org/jclouds/providers/Providers.java
  (withIso3166Code): Deleted.
  (boundedByIso3166Code): Added.

* core/src/test/java/org/jclouds/providers/ProvidersTest.java
  (testWithIso3166Code): Deleted.
  (testBoundedByIso3166Code): Added
  (testIntersectingIso3166Code): Deleted.
  (testCollocatedWith): Added.",2011-05-26 16:21:46,Jeremy Whitlock,['core/src/test/java/org/jclouds/providers/ProvidersTest.java']
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,197284471e55c80936a82de71c833e9cdca291f7,b6bbb9c1c610d5b50300bda0310ccd22aecceeac,https://github.com/jclouds/legacy-jclouds/commit/197284471e55c80936a82de71c833e9cdca291f7,"Adds plumbing to the jclouds core to allow for refactoring the provider plugin
system, which initially will only be used for object metadata related to
cloud providers.

* .gitignore: Added an ignore pattern for Emacs etags file (TAGS).

[in core/src/main/java]

* org/jclouds/providers/ProviderMetadata.java: Added.
  (This file is a simple interface cloud providers will implement to be
   pluggable into this new plugin system.)

* org/jclouds/providers/ProviderPredicates.java: Added.
  (This file contains predicates that will filter Iterable<ProviderMetadata>
   objects.)

* org/jclouds/providers/Providers.java: Added.
  (This file contains ""simplicity methods"" for getting available cloud
   providers based on certain criteria, like by type or by id.)

[in core/src/test/java]

* org/jclouds/providers/JcloudsTestBlobStoreProviderMetadata.java,
  org/jclouds/providers/JcloudsTestComputeProviderMetadata.java: Added.
  (These files are implementations of org.jclouds.providers.ProviderMetadata
   used for testing purposes.)

* org/jclouds/providers/ProvidersTest.java: Added.
  (This file tests org.jclouds.providers.Providers.)

[in src/test/resources]

* META-INF/services/org.jclouds.providers.ProviderMetadata: Added.
  (This file is used by java.util.ServiceLoader to locate the available
   cloud provider implementations on the classpath.)",2011-05-06 23:05:00,Jeremy Whitlock,['core/src/test/java/org/jclouds/providers/ProvidersTest.java']
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,3a690186f4afa2ef2ba15365f9372bf1827f5d29,15e74945da3844ab48c3a1ab4dad76cdae6782c2,https://github.com/jclouds/legacy-jclouds/commit/3a690186f4afa2ef2ba15365f9372bf1827f5d29,refactored cloudstack tests,2011-05-06 07:30:14,Adrian Cole,"['sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/functions/ListCapabilitiesResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/functions/ListNetworkOfferingsResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/functions/ListPortForwardingRuleResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/functions/ListPublicIPAddressesResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/functions/ListSecurityGroupsResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/BaseItemParserTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/BaseParserTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/BaseSetParserTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/ListAccountsResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/ListCapabilitiesResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/ListDiskOfferingsResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/ListHypervisorsResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/ListNetworkOfferingsResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/ListNetworksResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/ListOSCategoriesResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/ListPortForwardingRulesResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/ListPublicIPAddressesResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/ListSecurityGroupsResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/ListServiceOfferingsResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/ListTemplatesResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/ListVirtualMachinesResponseTest.java', 'sandbox-apis/cloudstack/src/test/java/org/jclouds/cloudstack/parse/ListZonesResponseTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,2d888fb18e368c5dc7787def7681425410dac368,99bbdfce8a371c0a33fc22a5605a83b496c95c4b,https://github.com/jclouds/legacy-jclouds/commit/2d888fb18e368c5dc7787def7681425410dac368,template test predicate refactor,2011-01-30 04:55:31,Adrian Cole,"['apis/cloudservers/src/test/java/org/jclouds/cloudservers/compute/CloudServersTemplateBuilderLiveTest.java', 'apis/elasticstack/src/test/java/org/jclouds/elasticstack/compute/ElasticStackTemplateBuilderLiveTest.java', 'apis/eucalyptus/src/test/java/org/jclouds/eucalyptus/compute/EucalyptusTemplateBuilderLiveTest.java', 'compute/src/test/java/org/jclouds/compute/BaseTemplateBuilderLiveTest.java', 'providers/aws-ec2/src/test/java/org/jclouds/aws/ec2/compute/AWSEC2TemplateBuilderLiveTest.java', 'providers/bluelock-vcdirector/src/test/java/org/jclouds/vcloud/bluelock/compute/BlueLockVCloudDirectorTemplateBuilderLiveTest.java', 'providers/cloudservers-uk/src/test/java/org/jclouds/rackspace/cloudservers/compute/CloudServersUKTemplateBuilderLiveTest.java', 'providers/cloudservers-us/src/test/java/org/jclouds/rackspace/cloudservers/compute/CloudServersUSTemplateBuilderLiveTest.java', 'providers/cloudsigma-zrh/src/test/java/org/jclouds/cloudsigma/compute/CloudSigmaTemplateBuilderLiveTest.java', 'providers/elastichosts-lon-b/src/test/java/org/jclouds/elastichosts/compute/ElasticHostsBlueSquareLondonTemplateBuilderLiveTest.java', 'providers/elastichosts-lon-p/src/test/java/org/jclouds/elastichosts/compute/ElasticHostsPeer1LondonTemplateBuilderLiveTest.java', 'providers/elastichosts-sat-p/src/test/java/org/jclouds/elastichosts/compute/ElasticHostsPeer1SanAntonioTemplateBuilderLiveTest.java', 'providers/eucalyptus-partnercloud-ec2/src/test/java/org/jclouds/epc/compute/EucalyptusPartnerCloudEucalyptusTemplateBuilderLiveTest.java', 'providers/gogrid/src/test/java/org/jclouds/gogrid/compute/GoGridTemplateBuilderLiveTest.java', 'providers/openhosting-east1/src/test/java/org/jclouds/openhosting/compute/OpenHostingEast1TemplateBuilderLiveTest.java', 'providers/serverlove-z1-man/src/test/java/org/jclouds/serverlove/compute/ServerloveManchesterTemplateBuilderLiveTest.java', 'providers/skalicloud-sdg-my/src/test/java/org/jclouds/skalicloud/compute/SkaliCloudMalaysiaTemplateBuilderLiveTest.java', 'providers/slicehost/src/test/java/org/jclouds/slicehost/compute/SlicehostTemplateBuilderLiveTest.java', 'providers/trmk-ecloud/src/test/java/org/jclouds/vcloud/terremark/compute/TerremarkECloudTemplateBuilderLiveTest.java', 'providers/trmk-vcloudexpress/src/test/java/org/jclouds/vcloud/terremark/compute/TerremarkVCloudExpressTemplateBuilderLiveTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,c1f6eab2c4998e217f74182fa53770cbfa7e2952,3921856973dbd795b04657536ec372cb0a294c63,https://github.com/jclouds/legacy-jclouds/commit/c1f6eab2c4998e217f74182fa53770cbfa7e2952,refactored test logic,2010-12-17 18:15:35,Adrian Cole,['compute/src/test/java/org/jclouds/compute/BaseComputeServiceLiveTest.java']
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,a9de959146d2e0913f41dc661a5338311d06ff9c,1a63d627b19c17a9f81645845e86a79394f0f593,https://github.com/jclouds/legacy-jclouds/commit/a9de959146d2e0913f41dc661a5338311d06ff9c,Issue 377: refactored value classes and tests so that we could test and implement credential storage,2010-10-17 05:24:22,Adrian Cole,"['aws/core/src/test/java/org/jclouds/aws/ComputeAndBlobStoreTogetherHappilyLiveTest.java', 'aws/core/src/test/java/org/jclouds/aws/CredentialsStoredInBlobStoreTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/compute/EC2ComputeServiceTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/compute/functions/CredentialsForInstanceTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/compute/functions/ImageParserTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/compute/functions/RunningInstanceToNodeMetadataTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/compute/internal/EC2TemplateBuilderImplTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/compute/strategy/CreateKeyPairPlacementAndSecurityGroupsAsNeededAndReturnRunOptionsTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/compute/strategy/EC2RunNodesAndAddToSetStrategyTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/xml/DescribeImagesResponseHandlerTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/xml/DescribeInstancesResponseHandlerTest.java', 'compute/src/test/java/org/jclouds/compute/BaseComputeServiceLiveTest.java', 'compute/src/test/java/org/jclouds/compute/StubComputeServiceIntegrationTest.java', 'compute/src/test/java/org/jclouds/compute/domain/internal/TemplateBuilderImplTest.java', 'core/src/test/java/org/jclouds/rest/CredentialStoreModuleTest.java', 'core/src/test/java/org/jclouds/rest/RestContextBuilderTest.java', 'rackspace/src/test/java/org/jclouds/rackspace/cloudservers/compute/functions/CloudServersImageToImageTest.java', 'rackspace/src/test/java/org/jclouds/rackspace/cloudservers/compute/functions/FlavorToHardwareTest.java', 'rackspace/src/test/java/org/jclouds/rackspace/cloudservers/compute/functions/ServerToNodeMetadataTest.java', 'rackspace/src/test/java/org/jclouds/rackspace/cloudservers/functions/ParseFlavorFromJsonResponseTest.java', 'rackspace/src/test/java/org/jclouds/rackspace/cloudservers/functions/ParseImageFromJsonResponseTest.java', 'rackspace/src/test/java/org/jclouds/rackspace/cloudservers/functions/ParseServerFromJsonResponseTest.java', 'slicehost/src/test/java/org/jclouds/slicehost/compute/functions/FlavorToHardwareTest.java', 'slicehost/src/test/java/org/jclouds/slicehost/compute/functions/SliceToNodeMetadataTest.java', 'slicehost/src/test/java/org/jclouds/slicehost/compute/functions/SlicehostImageToImageTest.java', 'slicehost/src/test/java/org/jclouds/slicehost/xml/FlavorHandlerTest.java', 'slicehost/src/test/java/org/jclouds/slicehost/xml/ImageHandlerTest.java', 'slicehost/src/test/java/org/jclouds/slicehost/xml/ImagesHandlerTest.java', 'slicehost/src/test/java/org/jclouds/slicehost/xml/SliceHandlerTest.java', 'slicehost/src/test/java/org/jclouds/slicehost/xml/SlicesHandlerTest.java', 'vcloud/terremark/src/test/java/org/jclouds/vcloud/terremark/compute/TerremarkVCloudComputeClientTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,e8d0a11cda55328ea25fb1abb3183694f8c771db,31d2da3c6f54f23ced74b2b01776cfe3eaf2fb28,https://github.com/jclouds/legacy-jclouds/commit/e8d0a11cda55328ea25fb1abb3183694f8c771db,Issue 301: refactored http payload and rewrote crufty tests,2010-07-10 04:13:11,Adrian Cole,"['atmos/src/test/java/org/jclouds/atmosonline/saas/AtmosStorageAsyncClientTest.java', 'atmos/src/test/java/org/jclouds/atmosonline/saas/blobstore/config/AtmosBlobStoreModuleTest.java', 'atmos/src/test/java/org/jclouds/atmosonline/saas/filters/SignRequestTest.java', 'atmos/src/test/java/org/jclouds/atmosonline/saas/functions/ParseSystemMetadataFromHeadersTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/AMIAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/AvailabilityZoneAndRegionAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/ElasticBlockStoreAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/ElasticIPAddressAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/InstanceAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/KeyPairAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/MonitoringAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/SecurityGroupAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/elb/ELBAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/filters/FormSignerTest.java', 'aws/core/src/test/java/org/jclouds/aws/handlers/ParseAWSErrorFromXmlContentTest.java', 'aws/core/src/test/java/org/jclouds/aws/s3/S3AsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/s3/binders/BindBucketLoggingToXmlPayloadTest.java', 'aws/core/src/test/java/org/jclouds/aws/s3/binders/BindNoBucketLoggingToXmlPayloadTest.java', 'aws/core/src/test/java/org/jclouds/aws/s3/config/S3RestClientModuleTest.java', 'aws/core/src/test/java/org/jclouds/aws/s3/filters/RequestAuthorizeSignatureTest.java', 'aws/core/src/test/java/org/jclouds/aws/s3/functions/ParseObjectMetadataFromHeadersTest.java', 'aws/core/src/test/java/org/jclouds/aws/s3/util/S3UtilsTest.java', 'aws/core/src/test/java/org/jclouds/aws/sqs/SQSAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/sqs/config/SQSRestClientModuleTest.java', 'aws/core/src/test/java/org/jclouds/aws/sqs/xml/ListQueuesResponseHandlerTest.java', 'azure/src/test/java/org/jclouds/azure/storage/blob/AzureBlobAsyncClientTest.java', 'azure/src/test/java/org/jclouds/azure/storage/blob/blobstore/config/AzureBlobStoreModuleTest.java', 'azure/src/test/java/org/jclouds/azure/storage/queue/AzureQueueAsyncClientTest.java', 'blobstore/src/test/java/org/jclouds/blobstore/functions/ParseBlobFromHeadersAndHttpContentTest.java', 'blobstore/src/test/java/org/jclouds/blobstore/functions/ParseBlobMetadataFromHeadersTest.java', 'boxdotnet/src/test/java/org/jclouds/boxdotnet/BoxDotNetAsyncClientTest.java', 'chef/src/test/java/org/jclouds/chef/ChefAsyncClientTest.java', 'chef/src/test/java/org/jclouds/chef/filters/SignedHeaderAuthTest.java', 'chef/src/test/java/org/jclouds/chef/functions/ParseCookbookVersionFromJsonTest.java', 'chef/src/test/java/org/jclouds/chef/functions/ParseErrorFromJsonOrReturnBodyTest.java', 'chef/src/test/java/org/jclouds/chef/functions/ParseKeyFromJsonTest.java', 'chef/src/test/java/org/jclouds/chef/functions/ParseKeySetFromJsonTest.java', 'chef/src/test/java/org/jclouds/chef/functions/ParseOrganizationFromJsonTest.java', 'chef/src/test/java/org/jclouds/chef/functions/ParseSandboxFromJsonTest.java', 'chef/src/test/java/org/jclouds/chef/functions/ParseUploadSiteFromJsonTest.java', 'chef/src/test/java/org/jclouds/chef/functions/ParseUserFromJsonTest.java', 'chef/src/test/java/org/jclouds/chef/functions/ParseValueSetFromJsonTest.java', 'core/src/test/java/org/jclouds/concurrent/internal/SyncProxyTest.java', 'core/src/test/java/org/jclouds/http/BaseHttpCommandExecutorServiceIntegrationTest.java', 'core/src/test/java/org/jclouds/http/BaseHttpErrorHandlerTest.java', 'core/src/test/java/org/jclouds/http/functions/ParseURIFromListOrLocationHeaderIf20xTest.java', 'core/src/test/java/org/jclouds/http/functions/ReturnStringIf200Test.java', 'core/src/test/java/org/jclouds/http/handlers/BackoffLimitedRetryHandlerTest.java', 'core/src/test/java/org/jclouds/rest/BaseRestClientTest.java', 'core/src/test/java/org/jclouds/rest/RestClientTest.java', 'core/src/test/java/org/jclouds/rest/internal/RestAnnotationProcessorTest.java', 'extensions/gae/src/test/java/org/jclouds/gae/ConvertToGaeRequestTest.java', 'extensions/gae/src/test/java/org/jclouds/gae/ConvertToJcloudsResponseTest.java', 'extensions/ning/src/test/java/org/jclouds/http/ning/NingHttpCommandExecutorServiceTest.java', 'gogrid/src/test/java/org/jclouds/gogrid/handlers/GoGridErrorHandlerTest.java', 'gogrid/src/test/java/org/jclouds/gogrid/services/GridImageAsyncClientTest.java', 'gogrid/src/test/java/org/jclouds/gogrid/services/GridIpAsyncClientTest.java', 'gogrid/src/test/java/org/jclouds/gogrid/services/GridJobAsyncClientTest.java', 'gogrid/src/test/java/org/jclouds/gogrid/services/GridLoadBalancerAsyncClientTest.java', 'gogrid/src/test/java/org/jclouds/gogrid/services/GridServerAsyncClientTest.java', 'ibmdev/src/test/java/org/jclouds/ibmdev/IBMDeveloperCloudAsyncClientTest.java', 'ibmdev/src/test/java/org/jclouds/ibmdev/functions/ParseAddressFromJsonTest.java', 'ibmdev/src/test/java/org/jclouds/ibmdev/functions/ParseAddressesFromJsonTest.java', 'ibmdev/src/test/java/org/jclouds/ibmdev/functions/ParseExpirationTimeFromJsonTest.java', 'ibmdev/src/test/java/org/jclouds/ibmdev/functions/ParseImageFromJsonTest.java', 'ibmdev/src/test/java/org/jclouds/ibmdev/functions/ParseImagesFromJsonTest.java', 'ibmdev/src/test/java/org/jclouds/ibmdev/functions/ParseInstanceFromJsonTest.java', 'ibmdev/src/test/java/org/jclouds/ibmdev/functions/ParseInstancesFromJsonTest.java', 'ibmdev/src/test/java/org/jclouds/ibmdev/functions/ParseKeyFromJsonTest.java', 'ibmdev/src/test/java/org/jclouds/ibmdev/functions/ParseKeysFromJsonTest.java', 'ibmdev/src/test/java/org/jclouds/ibmdev/functions/ParseVolumeFromJsonTest.java', 'ibmdev/src/test/java/org/jclouds/ibmdev/functions/ParseVolumesFromJsonTest.java', 'mezeo/pcs2/core/src/test/java/org/jclouds/mezeo/pcs2/PCSAsyncClientTest.java', 'mezeo/pcs2/core/src/test/java/org/jclouds/mezeo/pcs2/PCSCloudTest.java', 'mezeo/pcs2/core/src/test/java/org/jclouds/mezeo/pcs2/binders/BindContainerNameToXmlPayloadTest.java', 'nirvanix/sdn/core/src/test/java/org/jclouds/nirvanix/sdn/SDNAsyncClientTest.java', 'opscodeplatform/src/test/java/org/jclouds/opscodeplatform/OpscodePlatformAsyncClientTest.java', 'rackspace/src/test/java/org/jclouds/rackspace/cloudfiles/functions/ParseObjectInfoFromHeadersTest.java', 'rackspace/src/test/java/org/jclouds/rackspace/cloudservers/CloudServersAsyncClientTest.java', 'twitter/src/test/java/org/jclouds/twitter/TwitterAsyncClientTest.java', 'vcloud/core/src/test/java/org/jclouds/vcloud/VCloudAsyncClientTest.java', 'vcloud/core/src/test/java/org/jclouds/vcloud/VCloudLoginTest.java', 'vcloud/core/src/test/java/org/jclouds/vcloud/VCloudVersionsTest.java', 'vcloud/core/src/test/java/org/jclouds/vcloud/functions/ParseLoginResponseFromHeadersTest.java', 'vcloud/hostingdotcom/src/test/java/org/jclouds/vcloud/hostingdotcom/HostingDotComVCloudAsyncClientTest.java', 'vcloud/terremark/src/test/java/org/jclouds/vcloud/terremark/TerremarkVCloudAsyncClientTest.java', 'vcloud/terremark/src/test/java/org/jclouds/vcloud/terremark/handlers/ParseTerremarkVCloudErrorFromHttpResponseTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,da3baf523c50078aa7d8fc463bd4734280853d7a,c948e49183f0b8b5460db01ac1035a092f5e28af,https://github.com/jclouds/legacy-jclouds/commit/da3baf523c50078aa7d8fc463bd4734280853d7a,"Issue 301: refactored http payload data from blob -> core, added content length, type, md5; fixed length bug in ec2 and added more tests to ensure this doesn't happen again",2010-07-08 10:46:34,Adrian Cole,"['atmos/src/test/java/org/jclouds/atmosonline/saas/AtmosStorageClientLiveTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/AMIAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/ElasticBlockStoreAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/ElasticIPAddressAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/InstanceAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/KeyPairAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/MonitoringAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/ec2/services/SecurityGroupAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/elb/ELBAsyncClientTest.java', 'aws/core/src/test/java/org/jclouds/aws/s3/S3ClientLiveTest.java', 'aws/core/src/test/java/org/jclouds/aws/s3/binders/BindS3ObjectToPayloadTest.java', 'aws/core/src/test/java/org/jclouds/aws/s3/functions/ParseObjectMetadataFromHeadersTest.java', 'azure/src/test/java/org/jclouds/azure/storage/blob/AzureBlobClientLiveTest.java', 'azure/src/test/java/org/jclouds/azure/storage/blob/binders/BindAzureBlobToPayloadTest.java', 'blobstore/src/test/java/org/jclouds/blobstore/binders/BindBlobToMultipartFormTest.java', 'blobstore/src/test/java/org/jclouds/blobstore/domain/internal/MutableBlobMetadataImplTest.java', 'blobstore/src/test/java/org/jclouds/blobstore/functions/ParseBlobFromHeadersAndHttpContentTest.java', 'blobstore/src/test/java/org/jclouds/blobstore/integration/internal/BaseBlobIntegrationTest.java', 'blobstore/src/test/java/org/jclouds/blobstore/integration/internal/BaseBlobLiveTest.java', 'blobstore/src/test/java/org/jclouds/blobstore/integration/internal/BaseBlobMapIntegrationTest.java', 'blobstore/src/test/java/org/jclouds/blobstore/integration/internal/BaseBlobStoreIntegrationTest.java', 'chef/src/test/java/org/jclouds/chef/ChefAsyncClientTest.java', 'chef/src/test/java/org/jclouds/chef/ChefClientLiveTest.java', 'chef/src/test/java/org/jclouds/chef/functions/ParseUploadSiteFromJsonTest.java', 'core/src/test/java/org/jclouds/http/BaseHttpCommandExecutorServiceIntegrationTest.java', 'core/src/test/java/org/jclouds/http/MultipartFormTest.java', 'core/src/test/java/org/jclouds/rest/RestClientTest.java', 'core/src/test/java/org/jclouds/rest/internal/RestAnnotationProcessorTest.java', 'demos/gae-tweetstore-spring/src/test/java/org/jclouds/demo/tweetstore/controller/StoreTweetsControllerTest.java', 'demos/gae-tweetstore/src/test/java/org/jclouds/demo/tweetstore/controller/StoreTweetsControllerTest.java', 'mezeo/pcs2/core/src/test/java/org/jclouds/mezeo/pcs2/PCSAsyncClientTest.java', 'mezeo/pcs2/core/src/test/java/org/jclouds/mezeo/pcs2/PCSClientLiveTest.java', 'rackspace/src/test/java/org/jclouds/rackspace/cloudfiles/CloudFilesClientLiveTest.java', 'rackspace/src/test/java/org/jclouds/rackspace/cloudfiles/binders/BindCFObjectToPayloadTest.java', 'vcloud/core/src/test/java/org/jclouds/vcloud/binders/BindCloneVAppParamsToXmlPayloadTest.java', 'vcloud/core/src/test/java/org/jclouds/vcloud/binders/BindInstantiateVAppTemplateParamsToXmlPayloadTest.java', 'vcloud/terremark/src/test/java/org/jclouds/vcloud/terremark/binders/BindAddInternetServiceToXmlPayloadTest.java', 'vcloud/terremark/src/test/java/org/jclouds/vcloud/terremark/binders/BindAddNodeServiceToXmlPayloadTest.java', 'vcloud/terremark/src/test/java/org/jclouds/vcloud/terremark/binders/BindNodeConfigurationToXmlPayloadTest.java', 'vcloud/terremark/src/test/java/org/jclouds/vcloud/terremark/binders/BindVAppConfigurationToXmlPayloadTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,449576cec94d93ca6ffb57d9e1a86418d2f5425e,80e22b0322ad352909c3ca20f5691dc87c88db02,https://github.com/jclouds/legacy-jclouds/commit/449576cec94d93ca6ffb57d9e1a86418d2f5425e,Issue 230: refactored test class,2010-06-16 03:02:30,Adrian Cole,['ibmdev/src/test/java/org/jclouds/ibmdev/IBMDeveloperCloudClientLiveTest.java']
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,050af3c3f7f25904d71c2dd83c9b8c29ecd574e8,88d5f42da2341472774878f12a46e445255ef1e8,https://github.com/jclouds/legacy-jclouds/commit/050af3c3f7f25904d71c2dd83c9b8c29ecd574e8,Issue 176: size can now test compatibility with images; refactored vcloud config logic; updated to support latest bluelock,2010-05-23 05:43:28,Adrian Cole,"['aws/core/src/test/java/org/jclouds/aws/ec2/compute/internal/EC2TemplateBuilderImplTest.java', 'compute/src/test/java/org/jclouds/compute/BaseComputeServiceLiveTest.java', 'compute/src/test/java/org/jclouds/compute/internal/TemplateBuilderImplTest.java', 'core/src/test/java/org/jclouds/util/UtilsTest.java', 'vcloud/bluelock/src/test/java/org/jclouds/vcloud/bluelock/BlueLockVCloudClientLiveTest.java', 'vcloud/bluelock/src/test/java/org/jclouds/vcloud/bluelock/compute/BlueLockVCloudComputeServiceLiveTest.java', 'vcloud/bluelock/src/test/java/org/jclouds/vcloud/bluelock/compute/config/providers/ParseVAppTemplatesInVDCToSizeProviderTest.java', 'vcloud/core/src/test/java/org/jclouds/vcloud/compute/strategy/VCloudListNodesStrategyTest.java', 'vcloud/core/src/test/java/org/jclouds/vcloud/xml/VAppHandlerTest.java']"
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,6786db27389b5e774f5451614b44571af4923464,338257ea98761ec25a2436822abfa9231d9508ea,https://github.com/jclouds/legacy-jclouds/commit/6786db27389b5e774f5451614b44571af4923464,code refactoring for the test,2010-02-19 18:47:52,Alex Yarmula,['aws/demos/resize-ebs/resize-ebs-java/src/test/java/org/jclouds/tools/ebsresize/InstanceVolumeManagerLiveTest.java']
jclouds/legacy-jclouds,https://github.com/jclouds/legacy-jclouds,e3672b6a5951920a07269c1ebc199b50d0a58834,ffd34b36c27e8d1df2cca0999a8db69938d785c1,https://github.com/jclouds/legacy-jclouds/commit/e3672b6a5951920a07269c1ebc199b50d0a58834,"Issue 73: Revised and renamed key value store to BlobStore with common Map implementations; refactored implementations and test drivers to utilize new blobstore

git-svn-id: http://jclouds.googlecode.com/svn/trunk@1910 3d8758e0-26b5-11de-8745-db77d3ebf521",2009-09-24 00:28:01,adrian.f.cole,"['aws/ec2/core/src/test/java/org/jclouds/aws/ec2/commands/options/BaseEC2RequestOptionsTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/S3ContextBuilderTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/S3IntegrationTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/commands/CopyObjectIntegrationTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/commands/DeleteBucketIntegrationTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/commands/DeleteObjectIntegrationTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/commands/GetAccessControlListIntegrationTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/commands/GetObjectIntegrationTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/commands/ListBucketIntegrationTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/commands/PutAccessControlListIntegrationTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/commands/PutObjectIntegrationTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/commands/PutObjectLiveTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/filters/RequestAuthorizeSignatureTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/functions/ListBucketHandlerTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/functions/ReturnTrueIfBucketAlreadyOwnedByYouTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/integration/S3BlobIntegrationTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/integration/S3BlobLiveTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/integration/S3BlobMapIntegrationTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/integration/S3ContainerIntegrationTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/integration/S3ContainerLiveTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/integration/S3InputStreamMapIntegrationTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/integration/S3ServiceIntegrationTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/options/CopyObjectOptionsTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/options/PutBucketOptionsTest.java', 'aws/s3/core/src/test/java/org/jclouds/aws/s3/xml/S3ParserTest.java', 'aws/s3/extensions/jets3t/src/test/java/org/jclouds/aws/s3/jets3t/JCloudsS3ServiceLiveTest.java', 'aws/s3/perftest/src/test/java/com/amazon/s3/S3ParserTest.java', 'aws/s3/perftest/src/test/java/org/jclouds/aws/s3/AmazonPerformanceLiveTest.java', 'aws/s3/perftest/src/test/java/org/jclouds/aws/s3/BaseJCloudsPerformanceLiveTest.java', 'aws/s3/perftest/src/test/java/org/jclouds/aws/s3/BasePerformanceLiveTest.java', 'aws/s3/perftest/src/test/java/org/jclouds/aws/s3/JCloudsGaePerformanceLiveTest.java', 'aws/s3/perftest/src/test/java/org/jclouds/aws/s3/JCloudsNioPerformanceLiveTest.java', 'aws/s3/perftest/src/test/java/org/jclouds/aws/s3/JCloudsPerformanceLiveTest.java', 'aws/s3/perftest/src/test/java/org/jclouds/aws/s3/Jets3tPerformanceLiveTest.java', 'aws/s3/samples/createandlistbuckets/src/test/java/org/jclouds/aws/s3/samples/test/CreateListOwnedBucketsIntegrationTest.java', 'aws/s3/samples/createandlistbuckets/src/test/java/org/jclouds/aws/s3/samples/test/CreateListOwnedBucketsLiveTest.java', 'aws/s3/samples/googleappengine/src/test/java/org/jclouds/samples/googleappengine/functest/GoogleAppEngineLiveTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/AzureBlobConnectionLiveTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/AzureBlobContextBuilderTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/AzureBlobStoreLiveTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/AzureBlobStoreTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/integration/AzureBlobContainerIntegrationTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/integration/AzureBlobContainerLiveTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/integration/AzureBlobInputStreamMapIntegrationTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/integration/AzureBlobIntegrationTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/integration/AzureBlobLiveTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/integration/AzureBlobMapIntegrationTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/integration/AzureBlobServiceIntegrationTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/options/CreateContainerOptionsTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/options/ListBlobsOptionsTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/xml/AccountNameEnumerationResultsHandlerTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/xml/BaseHandlerTest.java', 'azure/storage/blob/core/src/test/java/org/jclouds/azure/storage/blob/xml/ContainerNameEnumerationResultsHandlerTest.java', 'azure/storage/core/src/test/java/org/jclouds/azure/storage/filters/SharedKeyAuthenticationLiveTest.java', 'azure/storage/core/src/test/java/org/jclouds/azure/storage/options/CreateOptionsTest.java', 'azure/storage/core/src/test/java/org/jclouds/azure/storage/options/ListOptionsTest.java', 'azure/storage/core/src/test/java/org/jclouds/azure/storage/xml/BaseHandlerTest.java', 'azure/storage/queue/core/src/test/java/org/jclouds/azure/storage/queue/AzureQueueConnectionLiveTest.java', 'azure/storage/queue/core/src/test/java/org/jclouds/azure/storage/queue/AzureQueueConnectionTest.java', 'azure/storage/queue/core/src/test/java/org/jclouds/azure/storage/queue/xml/AccountNameEnumerationResultsHandlerTest.java', 'azure/storage/queue/core/src/test/java/org/jclouds/azure/storage/queue/xml/BaseHandlerTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/BaseBlobMapTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/domain/BlobTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/functions/ParseBlobFromHeadersAndHttpContentTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/functions/ParseBlobMetadataFromHeadersTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/integration/StubBlobIntegrationTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/integration/StubBlobMapIntegrationTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/integration/StubContainerIntegrationTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/integration/StubInputStreamMapIntegrationTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/integration/StubServiceIntegrationTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/integration/internal/BaseBlobIntegrationTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/integration/internal/BaseBlobLiveTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/integration/internal/BaseBlobMapIntegrationTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/integration/internal/BaseBlobStoreIntegrationTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/integration/internal/BaseContainerIntegrationTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/integration/internal/BaseContainerLiveTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/integration/internal/BaseInputStreamMapIntegrationTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/integration/internal/BaseMapIntegrationTest.java', 'blobstore/core/src/test/java/org/jclouds/blobstore/integration/internal/BaseServiceIntegrationTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/CloudFilesBlobStoreLiveTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/CloudFilesCDNConnectionLiveTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/CloudFilesCDNContextBuilderTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/CloudFilesConnectionLiveTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/CloudFilesContextBuilderTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/functions/ParseBlobMetadataListFromJsonResponseTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/functions/ParseContainerListFromJsonResponseTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/functions/ParseObjectMetadataFromHeadersTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/integration/CloudFilesBlobIntegrationTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/integration/CloudFilesBlobLiveTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/integration/CloudFilesBlobMapIntegrationTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/integration/CloudFilesContainerIntegrationTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/integration/CloudFilesContainerLiveTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/integration/CloudFilesInputStreamMapIntegrationTest.java', 'rackspace/cloudfiles/core/src/test/java/org/jclouds/rackspace/cloudfiles/integration/CloudFilesServiceIntegrationTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/CloudServersConnectionLiveTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/CloudServersConnectionTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/binders/ChangeAdminPassBinderTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/binders/ChangeServerNameBinderTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/binders/CreateImageBinderTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/binders/RebootTypeBinderTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/functions/ParseAddressesFromJsonResponseTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/functions/ParseBackupScheduleFromJsonResponseTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/functions/ParseFlavorFromJsonResponseTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/functions/ParseFlavorListFromJsonResponseTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/functions/ParseImageFromJsonResponseTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/functions/ParseImageListFromJsonResponseTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/functions/ParseInetAddressListFromJsonResponseTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/functions/ParseServerFromJsonResponseTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/functions/ParseServerListFromJsonResponseTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/functions/ParseSharedIpGroupFromJsonResponseTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/functions/ParseSharedIpGroupListFromJsonResponseTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/options/CreateServerOptionsTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/options/CreateSharedIpGroupOptionsTest.java', 'rackspace/cloudservers/core/src/test/java/org/jclouds/rackspace/cloudservers/options/RebuildServerOptionsTest.java']"
torakiki/sejda,https://github.com/torakiki/sejda,c96495211e504ec3358676d11756df1e01519912,497db7fb58c9805f8ee0ee4834c0f6e1b9a763e2,https://github.com/torakiki/sejda/commit/c96495211e504ec3358676d11756df1e01519912,Refactor failing tests,2023-04-27 13:14:00,torakiki,"['sejda-conversion/src/test/java/org/sejda/conversion/BaseFileSourceListParserTest.java', 'sejda-conversion/src/test/java/org/sejda/conversion/CsvFileSourceListParserTest.java', 'sejda-conversion/src/test/java/org/sejda/conversion/XmlFileSourceListParserTest.java']"
torakiki/sejda,https://github.com/torakiki/sejda,ee9a321ad5b4f01965e014c0b2623a8a1fb70519,138b3f74216897a0dd21c2caefdc2c510bf6599a,https://github.com/torakiki/sejda/commit/ee9a321ad5b4f01965e014c0b2623a8a1fb70519,refactored boilerplate around tests,2022-03-03 13:06:22,Edi Weissmann,['sejda-sambox/src/test/java/org/sejda/impl/sambox/component/TableOfContentsCreatorTest.java']
torakiki/sejda,https://github.com/torakiki/sejda,e8cc85de74c65cc3e00e920a2db702cb2be78671,64b2026e74b5b3d967240946366beaead5a5a11a,https://github.com/torakiki/sejda/commit/e8cc85de74c65cc3e00e920a2db702cb2be78671,Refactored tests to work with jdk from 5 to 8,2014-12-29 16:22:12,Andrea Vacondio,"['sejda-itext/src/test/java/org/sejda/impl/itext/component/ITextOutlineSubsetProviderTest.java', 'sejda-itext/src/test/java/org/sejda/impl/itext/component/split/PagesPdfSplitterTest.java']"
torakiki/sejda,https://github.com/torakiki/sejda,16047ca8b5cbd866971f4282f413c02409e1ca99,128cc3dda55e1bd498e03eccc832cf8d663d4837,https://github.com/torakiki/sejda/commit/16047ca8b5cbd866971f4282f413c02409e1ca99,"close #64: refactor unit tests to run on windows as well, fix bug in reading password protected file name tokens on windows",2011-10-13 22:41:28,ediweissmann,"['sejda-console/src/test/java/org/sejda/cli/MergeTaskTest.java', 'sejda-console/src/test/java/org/sejda/cli/model/adapter/PdfFileSourceAdapterTest.java', 'sejda-console/src/test/java/org/sejda/cli/model/adapter/XmlFileSourceListParserTest.java']"
torakiki/sejda,https://github.com/torakiki/sejda,99aa5d2011d3d2a8fe983e4caf9219f62f867b80,c11360fea07f6fce49aedadce07bb07877bb63ab,https://github.com/torakiki/sejda/commit/99aa5d2011d3d2a8fe983e4caf9219f62f867b80,"refactor TestableTask getXYZTestableTasks methods to return results that are not specific to the parameterized tests format of object[] arrays, and do the transformation in the unit tests",2011-10-13 12:42:58,ediweissmann,"['sejda-console/src/test/java/org/sejda/cli/AbstractTaskTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/AcrossAllTasksTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/EncryptionIntegrationTest.java', 'sejda-console/src/test/java/org/sejda/cli/ExampleUsageIntegrationTest.java', 'sejda-console/src/test/java/org/sejda/cli/FileOutputTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/FolderOutputTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/MandatoryInputAndOutputParametersTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/MultipleInputSourceFilesTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/PdfFormatOutputTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/PrefixableOutputTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/SingleInputSourceFileTraitTest.java']"
torakiki/sejda,https://github.com/torakiki/sejda,22ddca4a2d8464e8f586b2ed3e96afe02784591d,bf954d363b1d8d5235f12015cf99d52022eec212,https://github.com/torakiki/sejda/commit/22ddca4a2d8464e8f586b2ed3e96afe02784591d,"re #52: added few missing short names for options, added unit test that checks short names are not clashing for one cli
re #51: added prefix option to all commands that have folder as output (except unpack), renamed simplesplit's predefinedPages option short name from -p to -s due to collision on short name with prefix. added unit test that tests the prefixable output trait
refactored folder output/file output trait tests to cover all testabl tasks and to derive the information on whether a task has folder output directly from the cli arguments class",2011-10-11 16:48:29,ediweissmann,"['sejda-console/src/test/java/org/sejda/cli/AbstractTaskTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/FileOutputTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/FolderOutputTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/MultipleInputSourceFilesTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/PrefixableOutputTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/ShortNamesUniqueTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/SimpleSplitTaskTest.java']"
torakiki/sejda,https://github.com/torakiki/sejda,0a2d1102edc0be19a8f531c0b640452fe5627755,81582fcf59dfbec2b2cab39087a3e28dd2119c28,https://github.com/torakiki/sejda/commit/0a2d1102edc0be19a8f531c0b640452fe5627755,"renamed options in AlternateMix to use natural name (firstStep instead of stepFirst)
fixed bug in SetPageLabels example usage
fixed missing space in command help, in the example usage line
changed logging of percentage done to de-register the same listener added by another thread (unit-tests would register many times same listener)
removed default value for pageRotation in RotateTask
reviewed all pdfsam incompatibility todos
refactored/moved unit test for command specific help request",2011-10-09 09:42:05,ediweissmann,"['sejda-console/src/test/java/org/sejda/cli/AlternateMixTaskTest.java', 'sejda-console/src/test/java/org/sejda/cli/GeneralConsoleOptionsTest.java', 'sejda-console/src/test/java/org/sejda/cli/HelpRequestTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/RotateTaskTest.java']"
torakiki/sejda,https://github.com/torakiki/sejda,68fc8331d63342e721da88fe97982298b448f2ad,bc403d9a1bfd88ffe94cd9964fc7bbc8e66c53a9,https://github.com/torakiki/sejda/commit/68fc8331d63342e721da88fe97982298b448f2ad,"0000016: sejda-console: refactored tests, more trait based, refactored composition of task cli arguments to match better the multiple inputs/outputs allowed for tasks",2011-08-31 19:09:15,ediweissmann,"['sejda-console/src/test/java/org/sejda/cli/AbstractTaskTest.java', 'sejda-console/src/test/java/org/sejda/cli/AbstractTaskTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/AcrossAllTasksTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/AlternateMixConsoleTest.java', 'sejda-console/src/test/java/org/sejda/cli/AlternateMixTaskTest.java', 'sejda-console/src/test/java/org/sejda/cli/BaseTaskConsoleTest.java', 'sejda-console/src/test/java/org/sejda/cli/CompressedFlagTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/DecryptTaskTest.java', 'sejda-console/src/test/java/org/sejda/cli/EncryptTaskTest.java', 'sejda-console/src/test/java/org/sejda/cli/FileOutputTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/FolderOutputTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/GeneralConsoleOptionsTest.java', 'sejda-console/src/test/java/org/sejda/cli/HelpRequestTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/MandatoryInputAndOutputParametersTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/MultipleInputSourceFilesTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/OverwriteFlagTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/PdfVersionTraitTest.java', 'sejda-console/src/test/java/org/sejda/cli/RotateTaskTest.java', 'sejda-console/src/test/java/org/sejda/cli/ViewerPreferencesTaskTest.java']"
torakiki/sejda,https://github.com/torakiki/sejda,e561f1871251fc0c12d77aece6a482056133000e,14b1ea24e41dbc3edc703535d309a0b832ce2036,https://github.com/torakiki/sejda/commit/e561f1871251fc0c12d77aece6a482056133000e,0000001: added some unit test. Refactor file extension validator to improve readability.,2011-08-30 10:38:41,torakiki,['sejda-core/src/test/java/org/sejda/core/validation/validator/FileExtensionValidatorTest.java']
torakiki/sejda,https://github.com/torakiki/sejda,f9dd4ca7b0e66c29aa1c0ca86437496e94f42d22,ccf342baed5ce479b0334d0cc22204614e12d00a,https://github.com/torakiki/sejda/commit/f9dd4ca7b0e66c29aa1c0ca86437496e94f42d22,"sejda-console: add jdepend unit test for package cycles, refactor naming (options are now cli arguments)",2011-07-08 20:25:34,ediweissmann,"['sejda-console/src/test/java/org/sejda/JDependTest.java', 'sejda-console/src/test/java/org/sejda/cli/BaseConsoleTest.java']"
torakiki/sejda,https://github.com/torakiki/sejda,a8af406f7c8fc175c3e51fd483eadd189381359c,6294c78efd7f9917e9c7885936422aa5fc87f6e7,https://github.com/torakiki/sejda/commit/a8af406f7c8fc175c3e51fd483eadd189381359c,0000001: refactor and unit tests.,2011-01-23 15:49:42,torakiki,"['src/test/java/org/sejda/core/manipulation/model/input/PdfFileSourceTest.java', 'src/test/java/org/sejda/core/manipulation/model/input/PdfStreamSourceTest.java', 'src/test/java/org/sejda/core/manipulation/model/input/PdfURLSourceTest.java', 'src/test/java/org/sejda/core/manipulation/model/output/PdfDirectoryOutputTest.java', 'src/test/java/org/sejda/core/manipulation/model/output/PdfFileOutputTest.java', 'src/test/java/org/sejda/core/manipulation/model/output/PdfStreamOutputTest.java', 'src/test/java/org/sejda/core/manipulation/model/pdf/label/PdfPageLabelTest.java', 'src/test/java/org/sejda/core/support/io/OutputWriterTest.java']"
stanford-futuredata/macrobase,https://github.com/stanford-futuredata/macrobase,384ab0c0418bb9c3bc8ec7ad5cbec9557d973af4,0213e44ef634c5617afdd6e48bf3cc0eae0bb69d,https://github.com/stanford-futuredata/macrobase/commit/384ab0c0418bb9c3bc8ec7ad5cbec9557d973af4,"Parsing is really fast now (half the memory usage too) (#237)

* getting requiredColumns to the parser

* dataframe only includes necessary columns

* eliminated CSVDataFrameLoader pass-through class, folded its minimal functionality into CSVDataFrameParser

* Don't parse into rows

* refactoring for clarity and improving unit tests",2018-01-13 06:08:29,Peter Kraft,"['lib/src/test/java/edu/stanford/futuredata/macrobase/UnsupervisedCSVTest.java', 'lib/src/test/java/edu/stanford/futuredata/macrobase/analysis/summary/apriori/APrioriSummarizerTest.java', 'lib/src/test/java/edu/stanford/futuredata/macrobase/ingest/DataFrameCSVLoaderTest.java']"
stanford-futuredata/macrobase,https://github.com/stanford-futuredata/macrobase,fdfd2bb97a206987f7f51dc1cfbf49ec9a0aee9e,485162a168bce8f1f02d6b56b1c03ba496e5c6c7,https://github.com/stanford-futuredata/macrobase/commit/fdfd2bb97a206987f7f51dc1cfbf49ec9a0aee9e,"macrobase-lib 0.1 (#192)

* Initial DataFrame code

* Change ItemsetEncoder to encode columns

* Add get column method for dataframes

* Adding select and filter to dataframe

* Initial test based on seen usage

* Initial refactor of BatchSummarize, FPGrowth, FPGrowthEmerging etc.

* dataframe CSV loader

* fixing dependencies

* dataframe csv loader

* updating supervisedtest

* Move ItemsetEncoder to summarizer

* percentile classifier and unsupervised csv test

* support for building source and javadoc jars

`mvn verify` will now build two associated jars:
one for sources and one for javadocs, which we can upload
to maven to make it easier to use the library

* Addressed some of Peter's comments
- renamed core -> runtime
- changed groupId in pom.xml
- Rename EncodedItemsetResult->ItemsetResult, ItemsetResult->AttributeSet, ItemsetEncoder->AttributeEncoder
- Throw MacrobaseException instead of RuntimeException
- Renamed all filter methods in DataFrame to filter()
- Removed Apriori and dead code
CSVParser and DataFrame not finished

* Minor tweaks in filter API

* Removing unstable csv parser

* Add getRows() in DataFrame; enable attr combinations by default

* improving test coverage

* changing loadrows to a constructor

Trying to make dataframes as immutable as possible

* core=>runtime renaming clean up

* Rename modules

* More javadoc comments

* pgp plugin

* Changed exception in DataFrame

* test coverage, bugfix for summarizer

* Add deploy plugins to lib module
You can upload the SNAPSHOT module right now by 'mvn clean deploy'!

* independent maven package

* adding full package namespace",2017-03-25 00:46:56,Edward Gan,"['legacy/src/test/java/macrobase/analysis/classify/StaticThresholdClassifierTest.java', 'legacy/src/test/java/macrobase/analysis/pipeline/operator/MBGroupByTest.java', 'legacy/src/test/java/macrobase/analysis/sample/AChaoTest.java', 'legacy/src/test/java/macrobase/analysis/stats/AutocorrelationTest.java', 'legacy/src/test/java/macrobase/analysis/stats/FFTTest.java', 'legacy/src/test/java/macrobase/analysis/stats/GaussianTest.java', 'legacy/src/test/java/macrobase/analysis/stats/MADTest.java', 'legacy/src/test/java/macrobase/analysis/stats/MinCovDetTest.java', 'legacy/src/test/java/macrobase/analysis/stats/RandomProjectionTest.java', 'legacy/src/test/java/macrobase/analysis/stats/RobustEmpiricalCovarianceTest.java', 'legacy/src/test/java/macrobase/analysis/stats/TruncateTest.java', 'legacy/src/test/java/macrobase/analysis/stats/WinsorizerTest.java', 'legacy/src/test/java/macrobase/analysis/stats/ZScoreTest.java', 'legacy/src/test/java/macrobase/analysis/summary/count/AmortizedMaintenanceCounterTest.java', 'legacy/src/test/java/macrobase/analysis/summary/count/ExactCountTest.java', 'legacy/src/test/java/macrobase/analysis/summary/count/SpaceSavingTest.java', 'legacy/src/test/java/macrobase/analysis/summary/itemset/AprioriTest.java', 'legacy/src/test/java/macrobase/analysis/summary/itemset/FPGrowthTest.java', 'legacy/src/test/java/macrobase/analysis/summary/itemset/RiskRatioTest.java', 'legacy/src/test/java/macrobase/analysis/summary/itemset/StreamingFPGrowthTest.java', 'legacy/src/test/java/macrobase/analysis/transform/LinearMetricNormalizerTest.java', 'legacy/src/test/java/macrobase/analysis/transform/LowMetricTransformTest.java', 'legacy/src/test/java/macrobase/conf/MacroBaseConfTest.java', 'legacy/src/test/java/macrobase/ingest/CSVIngesterTest.java', 'legacy/src/test/java/macrobase/ingest/CachingSQLIngesterTest.java', 'legacy/src/test/java/macrobase/ingest/DatumEncoderTest.java', 'legacy/src/test/java/macrobase/ingest/SQLIngesterTest.java', 'legacy/src/test/java/macrobase/pipeline/BasePipelineTest.java', 'legacy/src/test/java/macrobase/pipeline/BasicBatchedPipelineTest.java', 'legacy/src/test/java/macrobase/pipeline/BasicOneShotEWStreamingPipelineTest.java', 'legacy/src/test/java/macrobase/pipeline/operator/MBOperatorTest.java', 'legacy/src/test/java/macrobase/runtime/MacroBaseApplicationTest.java', 'legacy/src/test/java/macrobase/runtime/command/MacroBasePipelineCommandTest.java', 'lib/src/test/java/edu/stanford/futuredata/macrobase/SupervisedEventTest.java', 'lib/src/test/java/edu/stanford/futuredata/macrobase/UnsupervisedCSVTest.java', 'lib/src/test/java/edu/stanford/futuredata/macrobase/analysis/classify/PercentileClassifierTest.java', 'lib/src/test/java/edu/stanford/futuredata/macrobase/analysis/summary/count/ExactCountTest.java', 'lib/src/test/java/edu/stanford/futuredata/macrobase/analysis/summary/itemset/AttributeEncoderTest.java', 'lib/src/test/java/edu/stanford/futuredata/macrobase/analysis/summary/itemset/FPGrowthTest.java', 'lib/src/test/java/edu/stanford/futuredata/macrobase/analysis/summary/itemset/RiskRatioTest.java', 'lib/src/test/java/edu/stanford/futuredata/macrobase/datamodel/DataFrameTest.java', 'lib/src/test/java/edu/stanford/futuredata/macrobase/datamodel/RowTest.java', 'lib/src/test/java/edu/stanford/futuredata/macrobase/datamodel/SchemaTest.java', 'lib/src/test/java/edu/stanford/futuredata/macrobase/ingest/DataFrameCSVLoaderTest.java']"
stanford-futuredata/macrobase,https://github.com/stanford-futuredata/macrobase,a326d3327a9ab704bcb19d741a53f8ce7624399c,74da730d5dfc315e699f9627f09cd0823bf24f97,https://github.com/stanford-futuredata/macrobase/commit/a326d3327a9ab704bcb19d741a53f8ce7624399c,"Configuration refactoring: use single MacroBaseConf file, enable diagnostic testing.",2016-02-16 21:33:32,Peter Bailis,"['src/test/java/macrobase/analysis/BatchAnalyzerTest.java', 'src/test/java/macrobase/analysis/StreamingAnalyzerTest.java', 'src/test/java/macrobase/conf/MacroBaseConfTest.java']"
stanford-futuredata/macrobase,https://github.com/stanford-futuredata/macrobase,5050493a6dbc802ddef52bc2bc44f350224e0800,572aa3ee0c4d75f1ef842fefd44672898a288ebd,https://github.com/stanford-futuredata/macrobase/commit/5050493a6dbc802ddef52bc2bc44f350224e0800,Refactor test directory to match src directory.,2016-02-16 06:36:10,Peter Bailis,"['src/test/java/macrobase/analysis/outlier/MADTest.java', 'src/test/java/macrobase/analysis/outlier/MinCovDetTest.java', 'src/test/java/macrobase/analysis/summary/count/ExactCountTest.java', 'src/test/java/macrobase/analysis/summary/count/SpaceSavingTest.java', 'src/test/java/macrobase/analysis/summary/itemset/AprioriTest.java', 'src/test/java/macrobase/analysis/summary/itemset/FPGrowthTest.java', 'src/test/java/macrobase/analysis/summary/itemset/StreamingFPGrowthTest.java']"
apache/commons-collections,https://github.com/apache/commons-collections,87647d0812f3ec8f10ead3d2059e60801f7538b7,1e6ccae88426aa8c2d257fe0f42c382ea9b9c14e,https://github.com/apache/commons-collections/commit/87647d0812f3ec8f10ead3d2059e60801f7538b7,"Simplify bloom filters (#258)

* Fixed some unit tests

* First set with complete test cases.

* Cleaned up hasher collecton processing

* cleaned up code

* added license headers

* Refactored and cleaned up

Moved to dependency on BitMapProducer, IndexProducer and
BitCountProducer to retrieve internal representations of the data.

* Added license header.

* Updated documentation

* Fixed bug and added tests

* Added ""@since 4.5"" where necessary

* Added BitMapProducer constructor to SimpleBloomFilter

* added BitMapProducer.fromLongArray() and Hasher.isEmpty()

* Changes to speed up Simple filter processing

* Null hasher used when a hasher is required but no values are available.

* Added Hasher.Filter and Hasher.FilteredIntConsumer

* Updated documentation + formatted.

* Added license

* fixed checkstyle issues

* fixed javadoc issues

* fixed test issue

* fixed javadoc issues

* Reduced the acceptable delta for p tests

* Updated docs and test cases

* Updated docs and test cases

* fixed issue with Shape javadoc

* Added more test coverage.

* fixed formatting issues

* Updated tests to use assertThrows.

* fixed indents

* Added constructor with IndexProducer

* Fixed issue with compare and different length bitMap arrays

* fixed formatting issues

* Efficiency changes

cleaned up asIndexArray

BitMapProducer to IndexProducer conversion

* changed XProviers to use XPredicates

* Removed NoMatchException

* Removed unneeded BitMap funcs

Moves isSparse() to Shape.

* fixed checkstyle issues

* Fixed javadoc errors

* simplified parameter in BitMapProducer.fromIndexProducer

* fixed tests

* added BitMapping verification

* Added more tests

* Added more tests

* Fixed typos

* Changes requested  by aherbert

* fixed ""bit map"" in documentation

* Renamed tests

* Removed blank lines

* changed new X<foo> to new X<>

* updated documentation

* Added BloomFilter.copy()

* changed ArrayCountingBloomFilter to use copy() method

* cleaned up numberOfBitsMaps()

* added asBitMapArray() and makePredicate() to BitMapProducer

* Moved asIndexArray() to IndexProducer

* harmonized Simple and Sparse Bloom filter constructors

* Implemented AbstractCountingBloomFilter.asindexArray()

* updated documentation

* fixed up NullHasher

* implemented hasher filter

* Fixed style issues

* added default SimpleHasher increment.

* Added modulus calculation to SimpleHasher

* fixed Hashing issues

* moved hasher/filter/* to /hasher

* moved bloomfilter/hasher to bloomfilter

* fixed up checkstyle issues

* Made Filter -> IndexFilter -w- factory

* moved IndexFilter into Hasher

* updated hashing tests & fixed checksyle

* removed SingleItemhasherCollection as associated methods

* Fixed some unit tests

* First set with complete test cases.

* Cleaned up hasher collecton processing

* cleaned up code

* added license headers

* Refactored and cleaned up

Moved to dependency on BitMapProducer, IndexProducer and
BitCountProducer to retrieve internal representations of the data.

* Added license header.

* Updated documentation

* Fixed bug and added tests

* Added ""@since 4.5"" where necessary

* Added BitMapProducer constructor to SimpleBloomFilter

* added BitMapProducer.fromLongArray() and Hasher.isEmpty()

* Changes to speed up Simple filter processing

* Null hasher used when a hasher is required but no values are available.

* Added Hasher.Filter and Hasher.FilteredIntConsumer

* Updated documentation + formatted.

* Added license

* fixed checkstyle issues

* fixed javadoc issues

* fixed test issue

* fixed javadoc issues

* Reduced the acceptable delta for p tests

* Updated docs and test cases

* Updated docs and test cases

* fixed issue with Shape javadoc

* Added more test coverage.

* fixed formatting issues

* Updated tests to use assertThrows.

* fixed indents

* Added constructor with IndexProducer

* Fixed issue with compare and different length bitMap arrays

* fixed formatting issues

* Efficiency changes

cleaned up asIndexArray

BitMapProducer to IndexProducer conversion

* changed XProviers to use XPredicates

* Removed NoMatchException

* Removed unneeded BitMap funcs

Moves isSparse() to Shape.

* fixed checkstyle issues

* Fixed javadoc errors

* simplified parameter in BitMapProducer.fromIndexProducer

* fixed tests

* added BitMapping verification

* Added more tests

* Added more tests

* Fixed typos

* Changes requested  by aherbert

* fixed ""bit map"" in documentation

* Renamed tests

* Removed blank lines

* changed new X<foo> to new X<>

* updated documentation

* Added BloomFilter.copy()

* changed ArrayCountingBloomFilter to use copy() method

* cleaned up numberOfBitsMaps()

* added asBitMapArray() and makePredicate() to BitMapProducer

* Moved asIndexArray() to IndexProducer

* harmonized Simple and Sparse Bloom filter constructors

* Implemented AbstractCountingBloomFilter.asindexArray()

* updated documentation

* fixed up NullHasher

* implemented hasher filter

* Fixed style issues

* added default SimpleHasher increment.

* Added modulus calculation to SimpleHasher

* fixed Hashing issues

* moved hasher/filter/* to /hasher

* moved bloomfilter/hasher to bloomfilter

* fixed up checkstyle issues

* Made Filter -> IndexFilter -w- factory

* moved IndexFilter into Hasher

* updated hashing tests & fixed checksyle

* removed SingleItemhasherCollection as associated methods

* fixed javadoc issues

* fixed javadoc issues

* added checks for BitMapProducer limits and index limits

* updated tests

* added tests

* fixed checkstyle issues

* fixed formatting and test coverage

* fixed javadoc issue

* put back checkstyle.xml

* switched to forEachBitMapPair

* updated BitMap and Index array production

* fixed merge with BitMapProducer

* Cleaned up formatting

* fixed checkstyle issues

* fixed coding issues

* updated documentation

* simplified test

* removed unwanted merge files

* removed duplicate entry

* put back test that incorrectly removed

* fixed asIndexArray error

* fixed checkstyle errors

* Changes for last review",2022-06-15 17:24:22,Claude Warren,"['src/test/java/org/apache/commons/collections4/bloomfilter/AbstractBitCountProducerTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/AbstractBitMapProducerTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/AbstractBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/AbstractCountingBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/AbstractHasherTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/AbstractIndexProducerTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/ArrayCountingBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/ArrayTrackerTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/BitCountProducerFromArrayCountingBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/BitCountProducerFromIndexProducerTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/BitMapProducerFromArrayCountingBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/BitMapProducerFromIndexProducerTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/BitMapProducerFromLongArrayTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/BitMapProducerFromSimpleBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/BitMapProducerFromSparseBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/BitMapTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/BitMapTrackerTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/BloomFilterIndexerTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/DefaultBitMapProducerTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/DefaultBloomFilterMethodsTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/DefaultBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/HasherBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/HasherCollectionTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/IndexFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/IndexProducerFromArrayCountingBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/IndexProducerFromBitmapProducerTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/IndexProducerFromHasherCollectionTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/IndexProducerFromHasherTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/IndexProducerFromIntArrayTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/IndexProducerFromSimpleBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/IndexProducerFromSparseBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/IndexProducerTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/SetOperationsTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/ShapeTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/SimpleBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/SimpleHasherTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/SparseBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/UniqueIndexProducerFromHasherCollectionTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/UniqueIndexProducerFromHasherTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasherBuilderTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasherTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/HashFunctionIdentityImplTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/HashFunctionValidatorTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/HasherBuilderTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/ShapeTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/StaticHasherTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/AbstractHashFunctionTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/MD5CyclicTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/Murmur128x64CyclicTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/Murmur32x86IterativeTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/ObjectsHashIterativeTest.java', 'src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java']"
apache/commons-collections,https://github.com/apache/commons-collections,f55268b092dd63e0a02900623881ce7860261a19,eab0aa0b093efbafa3d188226985e9c2dcbd13c4,https://github.com/apache/commons-collections/commit/f55268b092dd63e0a02900623881ce7860261a19,"[COLLECTIONS-809] JUnit v5 assertThrows (#291)

Refactor PredicatedMapTest

Refactor UnmodifiableSortedSetTest

Refactor PredicatedSortedSetTest

Refactor PredicatedSetTest

Refactor PredicatedNavigableSetTest

Refactor ListOrderedSetTest

Refactor PredicatedSortedMapTest

Refactor ReferenceIdentityMapTest

Refactor ReferenceMapTest

Refactor TransformedSortedMapTest

Refactor PredicatedMapTest

Refactor UnmodifiableSortedSetTest

Refactor PredicatedSortedSetTest

Refactor PredicatedSetTest

Refactor PredicatedNavigableSetTest

Refactor ListOrderedSetTest

Refactor PredicatedSortedMapTest

Refactor ReferenceIdentityMapTest

Refactor ReferenceMapTest

Refactor TransformedSortedMapTest

Refactor UnmodifiableMultiValuedMapTest

Refactor PredicatedMultiSetTest

Refactor UnmodifiableMultiSetTest

Refactor CircularFifoQueueTest

Refactor UnmodifiableQueueTest

Refactor CompositeSetTest

Refactor AbstractQueueTest

Refactor AbstractMultiSetTest

Refactor AbstractMultiValuedMapTest

Refactor AbstractBidiMapTest

Refactor AbstractBloomFilterTest

Refactor AbstractIteratorTest

Refactor AbstractLinkedListTest

Refactor AbstractListTest

Refactor AbstractSortedMapTest

Refactor AbstractOrderedMapTest

Refactor AbstractIterableMapTest

Refactor AbstractMapTest

Refactor AbstractMapIteratorTest

Refactor AbstractListIteratorTest

Refactor AbstractCollectionTest",2022-03-16 19:19:09,John Patrick,"['src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java', 'src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java', 'src/test/java/org/apache/commons/collections4/bidimap/DualHashBidiMapTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/AbstractBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java', 'src/test/java/org/apache/commons/collections4/iterators/AbstractIteratorTest.java', 'src/test/java/org/apache/commons/collections4/iterators/AbstractListIteratorTest.java', 'src/test/java/org/apache/commons/collections4/iterators/AbstractMapIteratorTest.java', 'src/test/java/org/apache/commons/collections4/iterators/BoundedIteratorTest.java', 'src/test/java/org/apache/commons/collections4/list/AbstractLinkedListTest.java', 'src/test/java/org/apache/commons/collections4/list/AbstractListTest.java', 'src/test/java/org/apache/commons/collections4/map/AbstractIterableMapTest.java', 'src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java', 'src/test/java/org/apache/commons/collections4/map/AbstractOrderedMapTest.java', 'src/test/java/org/apache/commons/collections4/map/AbstractSortedMapTest.java', 'src/test/java/org/apache/commons/collections4/map/PredicatedMapTest.java', 'src/test/java/org/apache/commons/collections4/map/PredicatedSortedMapTest.java', 'src/test/java/org/apache/commons/collections4/map/ReferenceIdentityMapTest.java', 'src/test/java/org/apache/commons/collections4/map/ReferenceMapTest.java', 'src/test/java/org/apache/commons/collections4/map/TransformedSortedMapTest.java', 'src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java', 'src/test/java/org/apache/commons/collections4/multimap/UnmodifiableMultiValuedMapTest.java', 'src/test/java/org/apache/commons/collections4/multiset/AbstractMultiSetTest.java', 'src/test/java/org/apache/commons/collections4/multiset/PredicatedMultiSetTest.java', 'src/test/java/org/apache/commons/collections4/multiset/UnmodifiableMultiSetTest.java', 'src/test/java/org/apache/commons/collections4/queue/AbstractQueueTest.java', 'src/test/java/org/apache/commons/collections4/queue/CircularFifoQueueTest.java', 'src/test/java/org/apache/commons/collections4/queue/UnmodifiableQueueTest.java', 'src/test/java/org/apache/commons/collections4/set/CompositeSetTest.java', 'src/test/java/org/apache/commons/collections4/set/ListOrderedSetTest.java', 'src/test/java/org/apache/commons/collections4/set/PredicatedNavigableSetTest.java', 'src/test/java/org/apache/commons/collections4/set/PredicatedSetTest.java', 'src/test/java/org/apache/commons/collections4/set/PredicatedSortedSetTest.java', 'src/test/java/org/apache/commons/collections4/set/UnmodifiableSortedSetTest.java']"
apache/commons-collections,https://github.com/apache/commons-collections,469c04b14c393a9725cb10e9d22429870bb508a3,fde8c8618ad6fa603dd836438fe2d099021d669f,https://github.com/apache/commons-collections/commit/469c04b14c393a9725cb10e9d22429870bb508a3,"Initial bloom filter code contribution (#83)

* Added initial bloom filter code.  Added changed lang3 dependency from
test to compile in pom.xml

* added tests + made recommended changes.

* Updated documentation

* refactored ProtoBloomFilter added tests.

* Cleand up code and added tests

* Added CountingBloomFilter

* Fixed CountingBloomFilter issues

Fixed checkstyle and bug report issues

* Initial bloom filter collections checkin

* Added unit tests

* fixed test cases

* Extract BloomFilter as an interface

* added missing license info

* fixed Jacoco errors

* fixed names for so build picks up tests

* cleaned up Jacoco report for BloomNestedCollection

* removed unused code

* cleaned up and reformatted

* added javadoc

fixed issue with BloomNestedCollection detecting duplicates in an edge
case.

* fixed candidate testing bug

* Cleand up niggling report issues.

* fixed javadoc errors

* fixed javadoc for java 13 issue

* Second set of fixes.


* ""package private for testing"" for methods and properties.
* In ""Builder"":
** Field ""hashes"" made ""final""
* removes some ""Serializable"" implementations.
* ""StandardBloomFilter"" made non non ""final"" fields final and changed
""final protected"" to ""final private"".
* removed transient fields
* made Package name singular
* added javadocs for private and protected fields and methods.
* Occurrences of ""bloom"" replaced with ""Bloom""

* removed checkstyle and findbugs exclusions

* Fixed method and class names

* Documentation updates

* Fixed checkstyle isses

Added BloomFilterConfiguration functions for estimation.

* added .checkstyle to eclipse ignore section.

* renamed test classes to match main class names

* Updated the documentation.

* Implemented requested changes.  Part of COLLECTIONS-728

Changed remaining ""get"" comments to ""gets"" etc.
Added final where possible and reasonable.
renamed enum Change to CHANGE
fixed missing javadoc links and missed name changes.
fixed ProtoBloomFilter hashCode
renamed CollectionStatistics to BloomCollectionStatistics
renamed CollectionConfiguration to BloomCollectionConfiguration
renamed BloomCollectionStatistics.getTxnCount() to getTransactionCount()

* Added final set of constructors and tests for them.

Cleaned up issues from Gilles Sadowski review

* fixes for Gilles Sadowski issues in BloomCollectionStatistics

* Update javadoc

* renamed match() -> matches() and inverseMatch() -> inverseMatches()

This follows the pattern set with the Object.equals() method name.

* added isFull() method to check if a bloom filter is full.

* Changed gate from StandardBloomFilter to BloomFilter

* renamed BloomCollectionX -> BloomFilterGatedX

specifically:
BloomCollectionConfiguration -> BloomFilterGatedConfiguraiton
BloomCollectionStatistics -> BloomFilterGatedStatistics

* Made the StandardBloomFilter(BitSet) constructor public

* removed extraneous build() methods from ProtoBloomFilter.Factory

* Added Use cases

* Initial cut

* changes for interface

* Changed to Hasher implementation

* Added missing files and removed Shape from some BloomFilter calls

* Added  @since 4.5 tags

* fixed javadoc

* fixed PMD errors

* Added tests and fixed sign extension issues

* changed to Byte constant

* made BloomFilter.verify*() non final

* Added remove(Hasher) for completeness

* Replaced private implementation of MurmurHash3 with commons-codec

* fixed typo

* Removed Hasher.Factory added HashFunction interface

* removed Usage.md

* made commons-codec dependency optional

* Improved performance of Iterator.

* renamed instance variable ""md"" as messageDigest.

* updated javadoc

* renamed Iter to Iterator and removed unused imports

* removed unused imports

* Made instance variables final.

Also fixed MD5 constructor to throw IllegalStateException if MD5 algo
can not be found.

* removed unused imports

* Updated javadoc.

* Added HashFunctionIdentity to replace HashFunctionName

Added test cases, updated java doc.
Renamed function implementations to reflect actual function.
Added comparators for HashFunctionIdentity

* fixed naming issues

* Updated javadoc

* fixed checkstyle issue

* Removed link that was causing problems in java 11+ javadoc

* changed HashFunctionIdentity.getProcess() to getProcessType()

* changed HashFunctionIdentity.getProcess() to getProcessType()

* Added package documentation

* Added BloomFilter interface and removed unnecessary methods

* updated tests and fixed issues

* Moved set operations to separate class and updated tests

* fixed FindBugs, PMD and Checkstyle errors

* fixed javadocs

* Added SetOperations and tests

* Added javadocs indicating optional commons-codec required

* Added another cosine test

* Updated to commons-codec 1.14

* fixed typos

* moved Hasher to o.a.c.c.b.hasher package

* extracted Shape.java and moved to o.a.c.c.b.hasher package

* Added javadoc and removed unused imports in testing code

* Added isEmpty() method to Hasher",2020-01-24 23:10:46,Claude Warren,"['src/test/java/org/apache/commons/collections4/bloomfilter/AbstractBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/BitSetBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/CountingBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/DefaultBloomFilterMethodsTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/HasherBloomFilterTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/SetOperationsTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/CommonComparatorTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/DeepComparatorTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasherBuilderTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasherTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/HashFunctionIdentityImplTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/ShapeTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/StaticHasherTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/MD5CyclicTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/Murmur128x86CyclicTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/Murmur32x86IterativeTest.java', 'src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/ObjectsHashIterativeTest.java']"
apache/commons-collections,https://github.com/apache/commons-collections,5a87d98aa1b85f6ed33275135ab4622bcf1974ff,528dbde3d2311257877c58bd8a2e72fb51d15168,https://github.com/apache/commons-collections/commit/5a87d98aa1b85f6ed33275135ab4622bcf1974ff,"[COLLECTION-497,498,499] Refactored test framework for bag implementations, added missing tests, added CollectionSortedBag.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1540833 13f79535-47bb-0310-9956-ffa450edef68",2013-11-11 20:28:22,Thomas Neidhart,"['src/test/java/org/apache/commons/collections4/bag/AbstractBagTest.java', 'src/test/java/org/apache/commons/collections4/bag/AbstractSortedBagTest.java', 'src/test/java/org/apache/commons/collections4/bag/CollectionBagTest.java', 'src/test/java/org/apache/commons/collections4/bag/CollectionSortedBagTest.java', 'src/test/java/org/apache/commons/collections4/bag/HashBagTest.java', 'src/test/java/org/apache/commons/collections4/bag/PredicatedBagTest.java', 'src/test/java/org/apache/commons/collections4/bag/PredicatedSortedBagTest.java', 'src/test/java/org/apache/commons/collections4/bag/SynchronizedBagTest.java', 'src/test/java/org/apache/commons/collections4/bag/TransformedBagTest.java', 'src/test/java/org/apache/commons/collections4/bag/TransformedSortedBagTest.java', 'src/test/java/org/apache/commons/collections4/bag/TreeBagTest.java', 'src/test/java/org/apache/commons/collections4/bag/UnmodifiableBagTest.java', 'src/test/java/org/apache/commons/collections4/bag/UnmodifiableSortedBagTest.java']"
apache/commons-collections,https://github.com/apache/commons-collections,83226e162de60bd22551b1a37cc3e513811e1449,ed085d064c0f80b0bcf382550d10fe6b6fc9f283,https://github.com/apache/commons-collections/commit/83226e162de60bd22551b1a37cc3e513811e1449,"Refactor trie package: reduce interface by extending IterableSortedMap and only adding prefixMap method, remove all key analyzers but the StringKeyAnalyzer, refactor PatriciaTrie class by moving all remaining methods to AbstractPatriciaTrie and fixing the key type to String, integrating the test classes into the framework.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1492866 13f79535-47bb-0310-9956-ffa450edef68",2013-06-13 21:01:00,Thomas Neidhart,"['src/test/java/org/apache/commons/collections4/trie/PatriciaTrie2Test.java', 'src/test/java/org/apache/commons/collections4/trie/PatriciaTrieTest.java', 'src/test/java/org/apache/commons/collections4/trie/UnmodifiableTrieTest.java', 'src/test/java/org/apache/commons/collections4/trie/analyzer/ByteArrayKeyAnalyzerTest.java']"
apache/commons-collections,https://github.com/apache/commons-collections,6cbcb9ebc66d4036d486bf002a2371291b2ab5fa,e1f8cea8a6815de8a3ea277728dffb0909dc13be,https://github.com/apache/commons-collections/commit/6cbcb9ebc66d4036d486bf002a2371291b2ab5fa,"Improved IndexedCollection, refactored test to comply with standard test framework.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1377059 13f79535-47bb-0310-9956-ffa450edef68",2012-08-24 19:21:14,Thomas Neidhart,"['src/test/java/org/apache/commons/collections/AbstractDecoratedCollectionTest.java', 'src/test/java/org/apache/commons/collections/collection/IndexedCollectionTest.java']"
devlive-community/datacap,https://github.com/devlive-community/datacap,279fb2980a00be5150c6d2c5683aef38397255eb,cc0a548c6d9c87488a118580170d5435fabaf56e,https://github.com/devlive-community/datacap/commit/279fb2980a00be5150c6d2c5683aef38397255eb,[Refactor] [Core] Refactoring plug-in configuration extraction mode (test connection part),2023-01-18 12:59:46,qianmoQ,"['server/src/test/java/io/edurt/datacap/server/common/PluginCommonTest.java', 'server/src/test/java/io/edurt/datacap/server/common/ResourceCommonTest.java']"
apache/karaf,https://github.com/apache/karaf,01d0aae9b62531919f00d96eb22119bf59d0209b,713d25d4ffd40ad669a53b5d1fa9d8b497fc8b57,https://github.com/apache/karaf/commit/01d0aae9b62531919f00d96eb22119bf59d0209b,Refactor test,2017-08-16 09:12:46,Christian Schneider,"['jaas/modules/src/test/java/org/apache/karaf/jaas/modules/properties/PropertiesBackingEngineTest.java', 'jaas/modules/src/test/java/org/apache/karaf/jaas/modules/properties/PropertiesLoginModuleTest.java']"
apache/karaf,https://github.com/apache/karaf,cefee0f0c8cb3688e48eba033899f8687c34bd04,b6945908cdb4bc96d98a754d554a68d6751b3c70,https://github.com/apache/karaf/commit/cefee0f0c8cb3688e48eba033899f8687c34bd04,Refactor of mavenresolver tests,2017-05-18 07:52:06,Christian Schneider,"['itests/src/test/java/org/apache/karaf/itests/mavenresolver/MavenResolverRegisteredBeforeConfigAdminTest.java', 'itests/src/test/java/org/apache/karaf/itests/mavenresolver/MavenResolverRegisteredOnlyAfterConfigAdminTest.java']"
apache/karaf,https://github.com/apache/karaf,c8ee7d1329386ba5cc9df590cd529682380d5f2a,263cc57314c118f8d255723263b38d8b15c96c1c,https://github.com/apache/karaf/commit/c8ee7d1329386ba5cc9df590cd529682380d5f2a,"Refactoring in test to make jmx handling a little simpler

git-svn-id: https://svn.apache.org/repos/asf/karaf/trunk@1540966 13f79535-47bb-0310-9956-ffa450edef68",2013-11-12 08:25:22,Christian Schneider,"['itests/src/test/java/org/apache/karaf/itests/ConfigTest.java', 'itests/src/test/java/org/apache/karaf/itests/DiagnosticTest.java', 'itests/src/test/java/org/apache/karaf/itests/FeatureTest.java', 'itests/src/test/java/org/apache/karaf/itests/HttpTest.java', 'itests/src/test/java/org/apache/karaf/itests/InstanceTest.java', 'itests/src/test/java/org/apache/karaf/itests/KarTest.java', 'itests/src/test/java/org/apache/karaf/itests/LogTest.java', 'itests/src/test/java/org/apache/karaf/itests/ObrTest.java', 'itests/src/test/java/org/apache/karaf/itests/PackageTest.java', 'itests/src/test/java/org/apache/karaf/itests/ServiceTest.java', 'itests/src/test/java/org/apache/karaf/itests/SystemShutdownTest.java', 'itests/src/test/java/org/apache/karaf/itests/SystemTest.java', 'itests/src/test/java/org/apache/karaf/itests/WebTest.java', 'itests/src/test/java/org/apache/karaf/itests/WrapperTest.java']"
apache/karaf,https://github.com/apache/karaf,b48acb97bc2528dcaca3376f39a10e1bfed8c01f,2a3b3d7246189d4cfc9883a063343851d09004fd,https://github.com/apache/karaf/commit/b48acb97bc2528dcaca3376f39a10e1bfed8c01f,"[KARAF-1798] Refactore the itests to use Karaf exam. Add itests on standard features.

git-svn-id: https://svn.apache.org/repos/asf/karaf/trunk@1381939 13f79535-47bb-0310-9956-ffa450edef68",2012-09-07 08:58:41,Jean-Baptiste Onofre,"['itests/kittests/src/test/java/org/apache/karaf/kittests/KitTest.java', 'itests/src/test/java/org/apache/karaf/itests/KarafStandardFeaturesTest.java', 'itests/tests/src/test/java/org/apache/karaf/shell/itests/CoreTest.java', 'itests/tests/src/test/java/org/apache/karaf/shell/itests/FeaturesTest.java']"
apache/karaf,https://github.com/apache/karaf,0b3194f773a82c40025a0ea66d75a41d0598a2d7,a62332ce7964bb7e1b21a74268b3d8b3bd31dcd7,https://github.com/apache/karaf/commit/0b3194f773a82c40025a0ea66d75a41d0598a2d7,"Refactored ListServices and added a test for it

git-svn-id: https://svn.apache.org/repos/asf/karaf/trunk@1209142 13f79535-47bb-0310-9956-ffa450edef68",2011-12-01 16:30:51,Christian Schneider,['shell/services/src/test/java/org/apache/karaf/shell/services/ListServicesTest.java']
gresrun/jesque,https://github.com/gresrun/jesque,d20099f1e12041501c27d271040fa53f66855a6b,29e0c30a29060a255c4822bec632bb731818cf33,https://github.com/gresrun/jesque/commit/d20099f1e12041501c27d271040fa53f66855a6b,Minor refactoring in tests.,2011-03-10 05:06:10,Greg Haines,['src/test/java/net/greghaines/jesque/IntegrationTest.java']
BaseXdb/basex,https://github.com/BaseXdb/basex,a618c3daa348f6133d4104a1642365569219f44b,05c27d26ac282352cfd2dde813104e041dd7819d,https://github.com/BaseXdb/basex/commit/a618c3daa348f6133d4104a1642365569219f44b,"[MOD] XQuery, refactorings: positional tests, recursive simplifications",2022-09-08 12:52:17,Christian Grün,['basex-core/src/test/java/org/basex/server/SessionTest.java']
BaseXdb/basex,https://github.com/BaseXdb/basex,2db5d97c0835b2603672105b9de126401a874920,330b251ea6f3ef38990f290e50c2e8875e290f8d,https://github.com/BaseXdb/basex/commit/2db5d97c0835b2603672105b9de126401a874920,"[MOD] Tests: Cleanups, refactorings",2022-07-19 12:53:00,Christian Grün,"['basex-api/src/test/java/org/basex/http/rest/RESTParallelGetTest.java', 'basex-api/src/test/java/org/basex/http/rest/RESTPutTest.java', 'basex-api/src/test/java/org/basex/query/func/RequestModuleTest.java', 'basex-core/src/test/java/org/basex/core/CatalogTest.java', 'basex-core/src/test/java/org/basex/data/StoreTest.java', 'basex-core/src/test/java/org/basex/query/NamespaceTest.java', 'basex-core/src/test/java/org/basex/query/ast/FuncItemTest.java', 'basex-core/src/test/java/org/basex/query/ast/RewritingsTest.java', 'basex-core/src/test/java/org/basex/query/expr/FilterTest.java', 'basex-core/src/test/java/org/basex/query/expr/GFLWORTest.java', 'basex-core/src/test/java/org/basex/query/expr/PathTest.java', 'basex-core/src/test/java/org/basex/query/expr/SimpleMapTest.java', 'basex-core/src/test/java/org/basex/query/ft/FTQueryTest.java', 'basex-core/src/test/java/org/basex/query/func/ArrayModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/FnModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/FtModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/HofModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/InspectModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/JobModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/ProfModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/UpdateModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/UtilModuleTest.java', 'basex-core/src/test/java/org/basex/query/index/IndexOptimizeTest.java', 'basex-core/src/test/java/org/basex/query/simple/SimpleTest.java', 'basex-core/src/test/java/org/basex/query/up/MixUpdatesTest.java', 'basex-core/src/test/java/org/basex/query/up/UpdateTest.java', 'basex-core/src/test/java/org/basex/server/ConcurrencyTest.java', 'basex-core/src/test/java/org/basex/server/SessionTest.java']"
BaseXdb/basex,https://github.com/BaseXdb/basex,ba3e4191de91bab1ed443202f4e95f391dca4ace,1a20fefbea28c30972eb54ee4ccc53ec24c12ecb,https://github.com/BaseXdb/basex/commit/ba3e4191de91bab1ed443202f4e95f391dca4ace,[MOD] JUnit tests: refactorings,2019-01-28 12:57:30,Christian Gruen,"['basex-core/src/test/java/org/basex/data/IndexTest.java', 'basex-core/src/test/java/org/basex/index/SelectiveIndexTest.java', 'basex-core/src/test/java/org/basex/query/NamespaceTest.java', 'basex-core/src/test/java/org/basex/query/SerializerTest.java', 'basex-core/src/test/java/org/basex/query/ast/QueryPlanTest.java', 'basex-core/src/test/java/org/basex/query/expr/AnnotationsTest.java', 'basex-core/src/test/java/org/basex/query/expr/ArrayTest.java', 'basex-core/src/test/java/org/basex/query/expr/ArrowTest.java', 'basex-core/src/test/java/org/basex/query/expr/FilterTest.java', 'basex-core/src/test/java/org/basex/query/expr/HigherOrderTest.java', 'basex-core/src/test/java/org/basex/query/expr/LookupTest.java', 'basex-core/src/test/java/org/basex/query/expr/MapTest.java', 'basex-core/src/test/java/org/basex/query/expr/MixedTest.java', 'basex-core/src/test/java/org/basex/query/expr/PackageAPITest.java', 'basex-core/src/test/java/org/basex/query/expr/PathTest.java', 'basex-core/src/test/java/org/basex/query/ft/FTQueryTest.java', 'basex-core/src/test/java/org/basex/query/func/AdminModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/ArchiveModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/BinModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/ClientModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/ConvertModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/CryptoModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/CsvModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/DbModuleServerTest.java', 'basex-core/src/test/java/org/basex/query/func/DbModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/FetchModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/FileModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/FtModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/HashModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/HtmlModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/IndexModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/InspectModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/JavaFunctionTest.java', 'basex-core/src/test/java/org/basex/query/func/JobsModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/JsonModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/LazyModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/MathModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/OutModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/ProcModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/ProfModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/RandomModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/RepoModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/SignatureTest.java', 'basex-core/src/test/java/org/basex/query/func/SqlModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/StringsModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/UnitModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/UpdateModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/UserModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/ValidateModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/WebModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/XQueryModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/XsltModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/ZipModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/fn/FnIdTest.java', 'basex-core/src/test/java/org/basex/query/up/AtomicUpdatesTest.java', 'basex-core/src/test/java/org/basex/query/up/FastReplaceTest.java', 'basex-core/src/test/java/org/basex/query/up/MixUpdatesTest.java', 'basex-core/src/test/java/org/basex/query/up/NodeUpdateComparatorTest.java', 'basex-core/src/test/java/org/basex/query/up/ReplaceTest.java', 'basex-core/src/test/java/org/basex/query/up/UpdateTest.java', 'basex-core/src/test/java/org/basex/query/util/CollationTest.java', 'basex-tests/src/test/java/org/basex/local/single/UpdIndexTest.java']"
BaseXdb/basex,https://github.com/BaseXdb/basex,6faf6cf2280d93e3a130d4245cc83b7907d450d6,7e7beeef813495073e4b952d89b9a01131d8dd28,https://github.com/BaseXdb/basex/commit/6faf6cf2280d93e3a130d4245cc83b7907d450d6,"[MOD] Core, tests: global option and system property handling refactored",2015-05-29 16:27:58,Christian Gruen,"['basex-api/src/test/java/org/basex/SandboxTest.java', 'basex-api/src/test/java/org/basex/api/xmldb/XMLDBBaseTest.java', 'basex-api/src/test/java/org/basex/http/rest/RESTGetTest.java', 'basex-api/src/test/java/org/expath/ns/GeoTest.java', 'basex-core/src/test/java/org/basex/SandboxTest.java', 'basex-core/src/test/java/org/basex/query/FTIndexQueryTest.java', 'basex-core/src/test/java/org/basex/query/expr/PackageAPITest.java', 'basex-tests/src/test/java/org/basex/SandboxTest.java']"
BaseXdb/basex,https://github.com/BaseXdb/basex,1fcce00c81759c73ff7e7bdb6d570276b1ed4c22,f9912d27ca34056ad5595847e413d2ec4b87496c,https://github.com/BaseXdb/basex/commit/1fcce00c81759c73ff7e7bdb6d570276b1ed4c22,"[MOD] Refactoring: "".test"" removed from package paths of test classes",2013-11-09 12:25:33,Christian Gruen,"['basex-api/src/test/java/org/expath/ns/GeoTest.java', 'basex-core/src/test/java/org/basex/BaseXClientTest.java', 'basex-core/src/test/java/org/basex/BaseXStandaloneTest.java', 'basex-core/src/test/java/org/basex/BaseXTest.java', 'basex-core/src/test/java/org/basex/MainTest.java', 'basex-core/src/test/java/org/basex/SandboxTest.java', 'basex-core/src/test/java/org/basex/build/AddDeleteTest.java', 'basex-core/src/test/java/org/basex/build/AddRawOptionTest.java', 'basex-core/src/test/java/org/basex/build/CollectionPathTest.java', 'basex-core/src/test/java/org/basex/build/CreateTest.java', 'basex-core/src/test/java/org/basex/build/CsvParserTest.java', 'basex-core/src/test/java/org/basex/build/PathTest.java', 'basex-core/src/test/java/org/basex/build/XMLParserTest.java', 'basex-core/src/test/java/org/basex/core/CommandLockingTest.java', 'basex-core/src/test/java/org/basex/core/CommandTest.java', 'basex-core/src/test/java/org/basex/core/LangTest.java', 'basex-core/src/test/java/org/basex/core/LockingTest.java', 'basex-core/src/test/java/org/basex/core/PermissionTest.java', 'basex-core/src/test/java/org/basex/core/PinTest.java', 'basex-core/src/test/java/org/basex/core/PoolTest.java', 'basex-core/src/test/java/org/basex/core/ServerCommandTest.java', 'basex-core/src/test/java/org/basex/core/XMLCommandTest.java', 'basex-core/src/test/java/org/basex/data/DiskDataTest.java', 'basex-core/src/test/java/org/basex/data/DiskTableTest.java', 'basex-core/src/test/java/org/basex/data/IdPreMapBulkFixedTest.java', 'basex-core/src/test/java/org/basex/data/IdPreMapBulkTest.java', 'basex-core/src/test/java/org/basex/data/IdPreMapTest.java', 'basex-core/src/test/java/org/basex/data/MemDataTest.java', 'basex-core/src/test/java/org/basex/data/StoreTest.java', 'basex-core/src/test/java/org/basex/data/TableTest.java', 'basex-core/src/test/java/org/basex/data/UpdateTest.java', 'basex-core/src/test/java/org/basex/index/IndexCacheTest.java', 'basex-core/src/test/java/org/basex/io/GlobTest.java', 'basex-core/src/test/java/org/basex/io/IOTest.java', 'basex-core/src/test/java/org/basex/io/in/TextInputTest.java', 'basex-core/src/test/java/org/basex/io/parse/json/JsonParserTest.java', 'basex-core/src/test/java/org/basex/io/random/DataAccessTest.java', 'basex-core/src/test/java/org/basex/io/serial/SAXSerializerTest.java', 'basex-core/src/test/java/org/basex/io/serial/json/JsonSerializerTest.java', 'basex-core/src/test/java/org/basex/query/AdvancedQueryTest.java', 'basex-core/src/test/java/org/basex/query/CollationTest.java', 'basex-core/src/test/java/org/basex/query/FTIndexQueryTest.java', 'basex-core/src/test/java/org/basex/query/FTWildcardTest.java', 'basex-core/src/test/java/org/basex/query/IndexOptimizeTest.java', 'basex-core/src/test/java/org/basex/query/NamespaceTest.java', 'basex-core/src/test/java/org/basex/query/QueryContextTest.java', 'basex-core/src/test/java/org/basex/query/QueryTest.java', 'basex-core/src/test/java/org/basex/query/SeqTypeTest.java', 'basex-core/src/test/java/org/basex/query/SerializerTest.java', 'basex-core/src/test/java/org/basex/query/ast/FlworOptimizeTest.java', 'basex-core/src/test/java/org/basex/query/ast/FuncItemTest.java', 'basex-core/src/test/java/org/basex/query/ast/InlineTest.java', 'basex-core/src/test/java/org/basex/query/ast/QueryPlanTest.java', 'basex-core/src/test/java/org/basex/query/ast/StringRangeTest.java', 'basex-core/src/test/java/org/basex/query/ast/TCOTest.java', 'basex-core/src/test/java/org/basex/query/expr/AnnotationsTest.java', 'basex-core/src/test/java/org/basex/query/expr/FLWORTest.java', 'basex-core/src/test/java/org/basex/query/expr/HigherOrderTest.java', 'basex-core/src/test/java/org/basex/query/expr/MapTest.java', 'basex-core/src/test/java/org/basex/query/expr/MixedTest.java', 'basex-core/src/test/java/org/basex/query/expr/PackageAPITest.java', 'basex-core/src/test/java/org/basex/query/func/FNAdminTest.java', 'basex-core/src/test/java/org/basex/query/func/FNArchiveTest.java', 'basex-core/src/test/java/org/basex/query/func/FNClientTest.java', 'basex-core/src/test/java/org/basex/query/func/FNConvertTest.java', 'basex-core/src/test/java/org/basex/query/func/FNCryptoTest.java', 'basex-core/src/test/java/org/basex/query/func/FNCsvTest.java', 'basex-core/src/test/java/org/basex/query/func/FNDbServerTest.java', 'basex-core/src/test/java/org/basex/query/func/FNDbTest.java', 'basex-core/src/test/java/org/basex/query/func/FNFetchTest.java', 'basex-core/src/test/java/org/basex/query/func/FNFileTest.java', 'basex-core/src/test/java/org/basex/query/func/FNFormatDETest.java', 'basex-core/src/test/java/org/basex/query/func/FNFormatDateTest.java', 'basex-core/src/test/java/org/basex/query/func/FNFormatIntTest.java', 'basex-core/src/test/java/org/basex/query/func/FNFormatNumTest.java', 'basex-core/src/test/java/org/basex/query/func/FNFtTest.java', 'basex-core/src/test/java/org/basex/query/func/FNGenTest.java', 'basex-core/src/test/java/org/basex/query/func/FNHashTest.java', 'basex-core/src/test/java/org/basex/query/func/FNHofTest.java', 'basex-core/src/test/java/org/basex/query/func/FNHtmlTest.java', 'basex-core/src/test/java/org/basex/query/func/FNIndexTest.java', 'basex-core/src/test/java/org/basex/query/func/FNInspectTest.java', 'basex-core/src/test/java/org/basex/query/func/FNJsonTest.java', 'basex-core/src/test/java/org/basex/query/func/FNMapTest.java', 'basex-core/src/test/java/org/basex/query/func/FNMathTest.java', 'basex-core/src/test/java/org/basex/query/func/FNNotTest.java', 'basex-core/src/test/java/org/basex/query/func/FNOutTest.java', 'basex-core/src/test/java/org/basex/query/func/FNPatTest.java', 'basex-core/src/test/java/org/basex/query/func/FNProcTest.java', 'basex-core/src/test/java/org/basex/query/func/FNProfTest.java', 'basex-core/src/test/java/org/basex/query/func/FNPutTest.java', 'basex-core/src/test/java/org/basex/query/func/FNRandomTest.java', 'basex-core/src/test/java/org/basex/query/func/FNRepoTest.java', 'basex-core/src/test/java/org/basex/query/func/FNSqlTest.java', 'basex-core/src/test/java/org/basex/query/func/FNStreamTest.java', 'basex-core/src/test/java/org/basex/query/func/FNUnitTest.java', 'basex-core/src/test/java/org/basex/query/func/FNValidateTest.java', 'basex-core/src/test/java/org/basex/query/func/FNXQueryTest.java', 'basex-core/src/test/java/org/basex/query/func/FNXsltTest.java', 'basex-core/src/test/java/org/basex/query/func/FNZipTest.java', 'basex-core/src/test/java/org/basex/query/func/FuncTest.java', 'basex-core/src/test/java/org/basex/query/func/JavaFuncTest.java', 'basex-core/src/test/java/org/basex/query/func/QueryModuleTest.java', 'basex-core/src/test/java/org/basex/query/func/SignatureTest.java', 'basex-core/src/test/java/org/basex/query/simple/DocTest.java', 'basex-core/src/test/java/org/basex/query/simple/FTTest.java', 'basex-core/src/test/java/org/basex/query/simple/NSTest.java', 'basex-core/src/test/java/org/basex/query/simple/SimpleTest.java', 'basex-core/src/test/java/org/basex/query/simple/TypeTest.java', 'basex-core/src/test/java/org/basex/query/simple/XPathMarkFTTest.java', 'basex-core/src/test/java/org/basex/query/simple/XQUPTest.java', 'basex-core/src/test/java/org/basex/query/simple/XQuery30Test.java', 'basex-core/src/test/java/org/basex/query/up/AtomicUpdatesTest.java', 'basex-core/src/test/java/org/basex/query/up/FastReplaceTest.java', 'basex-core/src/test/java/org/basex/query/up/UpdatePrimitiveComparatorTest.java', 'basex-core/src/test/java/org/basex/query/up/UpdateTest.java', 'basex-core/src/test/java/org/basex/server/AdminStressTest.java', 'basex-core/src/test/java/org/basex/server/ClientSessionOutTest.java', 'basex-core/src/test/java/org/basex/server/ClientSessionTest.java', 'basex-core/src/test/java/org/basex/server/EventTest.java', 'basex-core/src/test/java/org/basex/server/LocalSessionOutTest.java', 'basex-core/src/test/java/org/basex/server/LocalSessionTest.java', 'basex-core/src/test/java/org/basex/server/LockingTest.java', 'basex-core/src/test/java/org/basex/server/SemaphoreTest.java', 'basex-core/src/test/java/org/basex/server/SessionTest.java', 'basex-core/src/test/java/org/basex/server/XdmInfoTest.java', 'basex-core/src/test/java/org/basex/util/BitArrayTest.java', 'basex-core/src/test/java/org/basex/util/CompressTest.java', 'basex-core/src/test/java/org/basex/util/FTBitapSearchTest.java', 'basex-core/src/test/java/org/basex/util/MinHeapTest.java', 'basex-core/src/test/java/org/basex/util/StringListTest.java', 'basex-core/src/test/java/org/basex/util/TokenSetTest.java', 'basex-core/src/test/java/org/basex/util/UTF8Test.java', 'basex-core/src/test/java/org/basex/util/VersionTest.java', 'basex-core/src/test/java/org/basex/util/WesternTokenizerTest.java', 'basex-core/src/test/java/org/basex/util/options/OptionsTest.java', 'basex-tests/src/test/java/org/basex/FNCryptoTest.java', 'basex-tests/src/test/java/org/basex/SandboxTest.java', 'basex-tests/src/test/java/org/basex/performance/CollAddTest.java', 'basex-tests/src/test/java/org/basex/performance/CollStressTest.java', 'basex-tests/src/test/java/org/basex/performance/DocReplaceTest.java', 'basex-tests/src/test/java/org/basex/performance/IncUpdateTest.java', 'basex-tests/src/test/java/org/basex/performance/LocalStressTest.java', 'basex-tests/src/test/java/org/basex/performance/RESTConcurrencyTest.java', 'basex-tests/src/test/java/org/basex/performance/ReplaceInPlaceTest.java', 'basex-tests/src/test/java/org/basex/performance/ScanTest.java', 'basex-tests/src/test/java/org/basex/performance/ServerMemTest.java', 'basex-tests/src/test/java/org/basex/performance/ServerStressTest.java', 'basex-tests/src/test/java/org/basex/performance/XQUFServerStressTest.java', 'basex-tests/src/test/java/org/basex/performance/XQUFStressTest.java']"
BaseXdb/basex,https://github.com/BaseXdb/basex,12d6021a0a01901384031a889ab2383c1c2661c8,a558fc056330a48f1f381183a54099513218254d,https://github.com/BaseXdb/basex/commit/12d6021a0a01901384031a889ab2383c1c2661c8,"[MOD] ID-PRE: refactored pre() method
[FIX] ID-PRE tests: fixed test insertDeleteCorrectness()
[ADD] ID-PRE tests: added tests for trivial cases
[ADD] ID-PRE: additional delete() test
[ADD] ID-PRE: new simpler delete() implementation
[ADD] ID-PRE: added size() method for debug purposes",2012-03-26 14:48:20,dimitarp,"['src/test/java/org/basex/test/data/IdPreMapBulkFixedTest.java', 'src/test/java/org/basex/test/data/IdPreMapBulkTest.java', 'src/test/java/org/basex/test/data/IdPreMapTest.java']"
BaseXdb/basex,https://github.com/BaseXdb/basex,76d513642b9703adf13b94dd9580883b344c6e7f,eb5a1fe529dd13df962ef7fa394e18b4df3aa87b,https://github.com/BaseXdb/basex/commit/76d513642b9703adf13b94dd9580883b344c6e7f,"[ADD] RestXq: first test methods added; bugs fixed
[MOD] XQuery: tokens and strings in HTTP client code revised
[MOD] Refactoring: String arguments added to QNm constructors",2012-02-26 00:50:13,Christian Grün,"['src/test/java/org/basex/test/rest/HTTPClientTest.java', 'src/test/java/org/basex/test/rest/HTTPTest.java', 'src/test/java/org/basex/test/rest/RESTTest.java', 'src/test/java/org/basex/test/restxq/RestXqTest.java']"
BaseXdb/basex,https://github.com/BaseXdb/basex,8d9da6e11f52263a096ef0ddbdf438eabb75deb2,793541b3ce079aa4c0dc5f50ed2dffbb1ca1a8c1,https://github.com/BaseXdb/basex/commit/8d9da6e11f52263a096ef0ddbdf438eabb75deb2,"[DEL] Tests: removed unnecessary methods
[MOD] Tests: added more descriptive comments
[MOD] Tests: refactoring",2012-02-18 14:34:32,dimitarp,['src/test/java/org/basex/test/io/DataAccessTest.java']
BaseXdb/basex,https://github.com/BaseXdb/basex,c1d3320c3bfeb7b436baf63e8d005b2e4212c5fe,d9fe5993ebacd1b621cbe994fd29b3493028972b,https://github.com/BaseXdb/basex/commit/c1d3320c3bfeb7b436baf63e8d005b2e4212c5fe,"[MOD] RepoManager -> moved methods for removing and adding a package
to the repository to class Repo
[MOD] Repo: added synchronized methods for adding and deleteing a
package from namespace and package dictionary
[MOD] unit tests refactoring",2011-06-07 20:51:42,rosishadura,['src/test/java/org/basex/test/query/advanced/PackageAPITest.java']
BaseXdb/basex,https://github.com/BaseXdb/basex,e8238bbda6c12576138a9808344b5a474a924964,902dfa6bc68d9767f09404a974d1e9a2d19a89a1,https://github.com/BaseXdb/basex/commit/e8238bbda6c12576138a9808344b5a474a924964,"- refactoring
- added unit tests for Version
- some fixes",2011-05-28 20:01:13,rosishadura,"['src/test/java/org/basex/test/query/advanced/PackageAPITest.java', 'src/test/java/org/basex/test/query/advanced/VersionTest.java']"
BaseXdb/basex,https://github.com/BaseXdb/basex,0a04a7786584690d90647c31da9d425db259f619,e7bceab4c54a92c6b3e9646e22f4778e6e14efa0,https://github.com/BaseXdb/basex/commit/0a04a7786584690d90647c31da9d425db259f619,*XQUP: refactoring; fixes and testcases concerning insert expression,2009-10-08 15:36:33,kircher,['test/org/basex/test/query/XQUPTest.java']
BaseXdb/basex,https://github.com/BaseXdb/basex,a34233dccd2939a26f3216530da07fa32496a1ee,0ab07c3700a8ae77cf0c04784d4824b1a6380fb7,https://github.com/BaseXdb/basex/commit/a34233dccd2939a26f3216530da07fa32496a1ee,"[FS] filesystem commands and clases moved to org.basex.fs-package. ""filesystem mode"" introduced in console for filesystem instances: BaseX command BASH added to enter this mode (in which no ""fs"" prefix is needed anymore to enter filesystem commands). Help system and command logics revised to better match this mode. Data.deepfs flag replaced by DataFS instance (formerly static FSUtils).

[XQ] additional XQuery Tests resolved; 18 of 15000 tests are still to be fixed..

[General] lots of refactoring, still thriving for somewhat better (?) code...",2008-10-11 15:24:09,christian,"['src/org/basex/query/xquery/path/KindTest.java', 'src/org/basex/query/xquery/path/NameTest.java', 'src/org/basex/query/xquery/path/Test.java']"
operator-framework/java-operator-sdk,https://github.com/operator-framework/java-operator-sdk,dca90ed3c8a6afe0f226cf17e8e6f50046d57d3a,d9ebacef4de2cb316f45fbb557e1d29a84d35f4d,https://github.com/operator-framework/java-operator-sdk/commit/dca90ed3c8a6afe0f226cf17e8e6f50046d57d3a,"feat: make default watched namespaces behavior explicit (#1177)

* feat: make default watched namespaces behavior explicit

This uses the constant that was initially introduced for the same reason
on KubernetesDependent, which is now moved to Constants. Uncovered
several issues with configuration overriding in the process and added
test coverage.

Fixes #1176

* refactor: DEPLOYED_NAMESPACE_ONLY -> CURRENT_NAMESPACE_ONLY",2022-04-22 14:01:55,Chris Laprun,"['operator-framework-core/src/test/java/io/javaoperatorsdk/operator/OperatorTest.java', 'operator-framework-core/src/test/java/io/javaoperatorsdk/operator/api/config/ControllerConfigurationOverriderTest.java', 'operator-framework-core/src/test/java/io/javaoperatorsdk/operator/api/config/ResourceConfigurationTest.java', 'operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/ControllerTest.java', 'operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/event/EventSourceManagerTest.java', 'operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/event/ReconciliationDispatcherTest.java', 'operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/event/source/informer/InformerEventSourceTest.java']"
operator-framework/java-operator-sdk,https://github.com/operator-framework/java-operator-sdk,1dc199397c94dd14b53a23cd702069ef909e0bed,8e9300e4fa655e8e582c22093b7b1cfc13f8a5c3,https://github.com/operator-framework/java-operator-sdk/commit/1dc199397c94dd14b53a23cd702069ef909e0bed,"Removing events from context (#596)

* fix: WIP

* fix: Addressing Custom Resource by Name and Namespace refactor + Informer Cache WIP

* fix: Build is fixed, (test failing)

* fix: Test fixes

* fix: minor update

* fix: EventSourceManager small fix

* fix: Unit tests fixed

* fix: DefaultEventHandler init from EventSourceManager

* fix: custom resource selector test improvement

* fix: wip test imrpovements

* fix: test improvements

* fix: further improvements

* fix: build

* feature: add mvn jar to gitignore

* Exposing CustomResourceEventSource and informers

* fix: cleanup

* fix: remove caching optimization since it not possible anymore with informer

* fix:  formatting

* refactor: make name/namespace final

* feature: Simple label selector support

* fix: formatting

* fix: code inspection reports

* fix: merge from v2

* fix: removed most deprecated apis

* wip: started to remove events from variouse layers

* fix: progress with implementation and tests

* fix: Updated informer mapping to CustomResourceID

* fix: imports

* fix: decorational changes

* fix: event marker unit test

* Default Event Handler Unit tests

* fix: fixes after merge

* fix: changes from code review

* fix: method naming

* Update operator-framework-core/src/main/java/io/javaoperatorsdk/operator/processing/EventMarker.java

Co-authored-by: Chris Laprun <metacosm@users.noreply.github.com>

* Update operator-framework-core/src/main/java/io/javaoperatorsdk/operator/processing/EventMarker.java

Co-authored-by: Chris Laprun <metacosm@users.noreply.github.com>

* fix: comment

* fix: fixes from merge

* fix: remove not used method

* fix: formatting

Co-authored-by: Chris Laprun <metacosm@gmail.com>
Co-authored-by: Chris Laprun <metacosm@users.noreply.github.com>",2021-10-13 14:54:21,Attila Mészáros,"['operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/DefaultEventHandlerTest.java', 'operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/EventBufferTest.java', 'operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/EventDispatcherTest.java', 'operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/EventMarkerTest.java', 'operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/event/EventListTest.java']"
operator-framework/java-operator-sdk,https://github.com/operator-framework/java-operator-sdk,8e9300e4fa655e8e582c22093b7b1cfc13f8a5c3,6e0100152c2aac0ef526e3da1cb1c76c53a435b1,https://github.com/operator-framework/java-operator-sdk/commit/8e9300e4fa655e8e582c22093b7b1cfc13f8a5c3,"Refined Interface of `EventSource` and `EventSourceManager` (#597)

* WIP

* Addressing Custom Resource by Name and Namespace refactor + Informer Cache WIP

* fix: DefaultEventHandler init from EventSourceManager

* fix: custom resource selector test improvement

* fix: wip test imrpovements

* fix: test improvements

* fix: further improvements

* fix: build

* feature: add mvn jar to gitignore

* Exposing CustomResourceEventSource and informers

* fix: cleanup

* fix: remove caching optimization since it not possible anymore with informer

* fix:  formatting

* refactor: make name/namespace final

* feature: Simple label selector support

* fix: formatting

* fix: code inspection reports

* fix: merge from v2

* fix: removed most deprecated apis

* chore: renaming vars named k8sClient to kubernetsClient

* chore(deps): bump jandex-maven-plugin from 1.1.1 to 1.2.1 (#592)

Bumps [jandex-maven-plugin](https://github.com/wildfly/jandex-maven-plugin) from 1.1.1 to 1.2.1.
- [Release notes](https://github.com/wildfly/jandex-maven-plugin/releases)
- [Commits](https://github.com/wildfly/jandex-maven-plugin/compare/1.1.1...1.2.1)

---
updated-dependencies:
- dependency-name: org.jboss.jandex:jandex-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>

* chore(deps-dev): bump mockito-core from 3.12.4 to 4.0.0 (#591)

Bumps [mockito-core](https://github.com/mockito/mockito) from 3.12.4 to 4.0.0.
- [Release notes](https://github.com/mockito/mockito/releases)
- [Commits](https://github.com/mockito/mockito/compare/v3.12.4...v4.0.0)

---
updated-dependencies:
- dependency-name: org.mockito:mockito-core
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>

* feature: Build PR on v2

* chore(ci): use Java 17

* chore(ci): use only Temurin distribution

* fix: Updated informer mapping to CustomResourceID

* chore: add generics to PostExecutionControl to reduce IDEs noise (#594)

* chore: polish the junit5 extension (#593)

* fix: EventSourceManager API wip

* fix: code review fixes

* fix: improvements of Event Source related APIs

* fix: remarks from code review

Co-authored-by: Chris Laprun <metacosm@gmail.com>
Co-authored-by: Ioannis Canellos <iocanel@gmail.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Luca Burgazzoli <lburgazzoli@users.noreply.github.com>",2021-10-13 13:15:28,Attila Mészáros,"['operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/DefaultEventHandlerTest.java', 'operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/event/DefaultEventSourceManagerTest.java', 'operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/event/internal/TimerEventSourceTest.java']"
operator-framework/java-operator-sdk,https://github.com/operator-framework/java-operator-sdk,adca825481fb7d4a05fbaa3c6b2724cd058784e6,61d1f8ac29d00398ddd0c2eef8303250d747042b,https://github.com/operator-framework/java-operator-sdk/commit/adca825481fb7d4a05fbaa3c6b2724cd058784e6,refactor: simplify test-specific constructor,2021-08-26 22:40:27,Chris Laprun,"['operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/CustomResourceSelectorTest.java', 'operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/DefaultEventHandlerTest.java']"
operator-framework/java-operator-sdk,https://github.com/operator-framework/java-operator-sdk,dc1ce6a58f6550f6711eb00b72250cb8ab2e2c22,265c17773770f582072c08fce0dd975aab0134a9,https://github.com/operator-framework/java-operator-sdk/commit/dc1ce6a58f6550f6711eb00b72250cb8ab2e2c22,refactor: move test to appropriate package,2021-03-29 16:28:10,Chris Laprun,['operator-framework-core/src/test/java/io/javaoperatorsdk/operator/processing/EventDispatcherTest.java']
operator-framework/java-operator-sdk,https://github.com/operator-framework/java-operator-sdk,257f4aa0e975e16f3d194fbf3478511f9f2052de,09e344676e8f023176a8cc60d85642452414aacb,https://github.com/operator-framework/java-operator-sdk/commit/257f4aa0e975e16f3d194fbf3478511f9f2052de,"refactor: move test sample / duplicate some to fix integration tests

The issue is that since the sample code was living under the
operator-framework-core module, which doesn't include the annotation
processor, the controller implementations were not processed and thus
not found by the runtime when needed. This should, hopefully, address
the issue.",2020-12-17 14:38:26,Chris Laprun,"['operator-framework-core/src/test/java/io/javaoperatorsdk/operator/EventDispatcherTest.java', 'operator-framework/src/test/java/io/javaoperatorsdk/operator/config/runtime/DefaultConfigurationServiceTest.java']"
operator-framework/java-operator-sdk,https://github.com/operator-framework/java-operator-sdk,aebdb129127cad7c934c1385788402027306539f,7a650ff7e1ed8af101fe4101cd35e141ff14ad61,https://github.com/operator-framework/java-operator-sdk/commit/aebdb129127cad7c934c1385788402027306539f,"Refactor setup and cleanup of integration test""

So that the operator is only created once for all tests, resources are deleted before each test and operator is stopped after",2020-01-15 21:52:38,charlotte.mach,"['operator-framework/src/test/java/com/github/containersolutions/operator/ConcurrencyTest.java', 'operator-framework/src/test/java/com/github/containersolutions/operator/IntegrationTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,8d6c3c7cc2b70c1468562494263cb9399acb2add,309ce3a51b3305153c7d373a53b61573543bba9e,https://github.com/CorfuDB/CorfuDB/commit/8d6c3c7cc2b70c1468562494263cb9399acb2add,"Remove Networkstretcher from the FailureDetector poll round logic (#3594)

* Retry and poll report

* Test fixes and logs

* Refactor

* Fixes

* Return the interrupted exception as logic in some places depends on it

* Codacy

* Adjust test settings

* check

* Fix the test

* Fix tst

* Fix

* Suggested fixes

* Interval retry for FD in progress

* Fixed interval poll

* Fix

* Interface for router

* Adjust test client connection timeout

* Adjust detection poll interval",2023-08-10 18:39:33,Pavel Zaytsev,"['infrastructure/src/test/java/org/corfudb/infrastructure/management/FailureDetectorTest.java', 'infrastructure/src/test/java/org/corfudb/infrastructure/management/NetworkStretcherTest.java', 'test/src/test/java/org/corfudb/runtime/view/AbstractViewTest.java', 'test/src/test/java/org/corfudb/runtime/view/LayoutViewTest.java', 'test/src/test/java/org/corfudb/runtime/view/StateTransferTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,7ee5ed74c399428413bd81c3be5b63bff6d9e7d5,d335af5f9b8a62d55e7b0ff37d409715dac37f29,https://github.com/CorfuDB/CorfuDB/commit/7ee5ed74c399428413bd81c3be5b63bff6d9e7d5,"Additional APIs for LR Client: setDestination (#3518)

* Added setDestinations() + more javadoc + cleanup

* Added setDestinations() + more javadoc + cleanup

* setDestination refactor + updated comments

* Updated comments + logging for setDestination

* Remove redundant APIs + method renaming

* Codacy fix - repeated strings in tests

---------

Co-authored-by: Shreay Patel <pshreay@vmware.com>",2023-02-27 17:11:53,Shreay Patel,['test/src/test/java/org/corfudb/runtime/LogReplicationLogicalGroupClientTest.java']
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,11e7987cb4d9b1563e3e57ea7932069365c8f5fc,b8a17a463dae25e4f97906920bc4c5a08d0e4dce,https://github.com/CorfuDB/CorfuDB/commit/11e7987cb4d9b1563e3e57ea7932069365c8f5fc,"Additional compactor tests (#3471)

Add CorfuStoreCompactorMain UTs and few refactoring changes",2023-01-24 18:25:44,Sravanthi A,"['corfudb-tools/src/main/java/org/corfudb/compactor/CorfuStoreCompactorConfigUnitTest.java', 'test/src/test/java/org/corfudb/compactor/CorfuStoreCompactorMainUnitTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,409d8302eed7364dfd7004cdb6c920862f7416cd,76ff2cf6d5041d29068dfee617f78e3ed5c9d51c,https://github.com/CorfuDB/CorfuDB/commit/409d8302eed7364dfd7004cdb6c920862f7416cd,"Failure detector read only filesystem - read only partition. Part 3 (#3112)

* FailureDetector: file system failures

* FailureDetector: make EpochHandler more async

* Include FileSystemStats and PartitionAttribute

* Get rid of ResourceQuota failures.
Add missing check of ""readOnly"" filesystem in FileSystemAgent

* Fix FileSystemAdvisorTest and HealingAgentTest

* ClusterStateContext remove getter annotation
FileSystemAdvisorTest: test checks if there are no nodes to heal
Implement FailureDetectorTestContext which is a toolkit for easier testing of FD functionality

* Improved DecisionMakerAgent: take into consideration that a node could have the highest number of successful connections but at the same time the partition is read-only.
In that case, we have to recalculate the final decision-maker.

* Improved DecisionMakerAgent refactoring: now it's clear that the idea of multiple decision-maker is overcomplicated. Since we don't care about ordering between writable nodes, then we can just check that a decision-maker is a writable node, if that's ok, then the node can be a decision-maker.

Extracted FailuresAgent from RMS, added a unit test for the entire failure detection workflow.

* checkstyle fixes",2022-01-05 22:12:47,Viacheslav,"['infrastructure/src/test/java/org/corfudb/infrastructure/management/ClusterGraphTest.java', 'infrastructure/src/test/java/org/corfudb/infrastructure/management/ClusterStateCollectorTest.java', 'infrastructure/src/test/java/org/corfudb/infrastructure/management/ClusterStateTest.java', 'infrastructure/src/test/java/org/corfudb/infrastructure/management/CompleteGraphAdvisorTest.java', 'infrastructure/src/test/java/org/corfudb/infrastructure/management/FailureDetectorTest.java', 'infrastructure/src/test/java/org/corfudb/infrastructure/management/FileSystemAdvisorTest.java', 'infrastructure/src/test/java/org/corfudb/infrastructure/management/NodeRankTest.java', 'infrastructure/src/test/java/org/corfudb/infrastructure/management/failuredetector/DecisionMakerAgentTest.java', 'infrastructure/src/test/java/org/corfudb/infrastructure/management/failuredetector/EpochHandlerTest.java', 'infrastructure/src/test/java/org/corfudb/infrastructure/management/failuredetector/FailuresAgentTest.java', 'infrastructure/src/test/java/org/corfudb/infrastructure/management/failuredetector/HealingAgentTest.java', 'test/src/test/java/org/corfudb/infrastructure/log/StreamLogFilesTest.java', 'test/src/test/java/org/corfudb/runtime/clients/LogUnitHandlerTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,7fa6e613644e33e2a79e9ce01a87d366bbd2c9a3,86d4be8fd029d2efa62fa90a3a913cc1f90e79b5,https://github.com/CorfuDB/CorfuDB/commit/7fa6e613644e33e2a79e9ce01a87d366bbd2c9a3,"Add Priority Level For Clients

Added the ability for clients to tag their requests with a priority
level, this priority is then used by the servers to reject certain
tasks under resource constraints.

Added the ability to set a max size on the data log. The LogUnit
will now track the log size and fail writes after the log size
has been reached. Except for the case where the writes originate
from a high priority client.

Ignore QuorumReplicationProtocolTest Tests

Set the priority level of the management clients to high.

Log the CorfuRuntimeParameters when the client connects.

readingTrimmedAddress wait for futures.

refactored initStreamLogDirectory",2019-07-09 20:14:23,Maithem,"['test/src/test/java/org/corfudb/infrastructure/LogUnitServerTest.java', 'test/src/test/java/org/corfudb/infrastructure/ResourceQuotaTest.java', 'test/src/test/java/org/corfudb/infrastructure/log/StreamLogFilesTest.java', 'test/src/test/java/org/corfudb/runtime/clients/LogUnitHandlerTest.java', 'test/src/test/java/org/corfudb/runtime/view/replication/QuorumReplicationProtocolTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,1c6339210fdfe059cb9bd0e9a2dcea88e728aa76,dea3924ea2a6c1e786655332c0689a0a1c705db2,https://github.com/CorfuDB/CorfuDB/commit/1c6339210fdfe059cb9bd0e9a2dcea88e728aa76,"Refactor Network Stretching logic out of FailureDetector (#1854)

Add NetworkStretcher/FailureDetector unit tests.

Co-authored-by: hisundar <sundar.sridharan@gmail.com>
Co-authored-by: xnull <xrw.null@gmail.com>",2019-06-06 05:15:13,Sundar Sridharan,"['infrastructure/src/test/java/org/corfudb/infrastructure/management/FailureDetectorTest.java', 'infrastructure/src/test/java/org/corfudb/infrastructure/management/NetworkStretcherTest.java', 'test/src/test/java/org/corfudb/runtime/view/ManagementViewTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,6c20b1d39e730f98062f8475a31786aef1dea84c,406b4502ada0eeab9a77e1e3c1c8daabfafd5f85,https://github.com/CorfuDB/CorfuDB/commit/6c20b1d39e730f98062f8475a31786aef1dea84c,"Fine grain sequencer metrics, compaction timer, fix test, refactoring (#1611)",2018-12-17 20:15:11,Sam B,['test/src/test/java/org/corfudb/infrastructure/log/StreamLogCompactionTest.java']
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,ddef541fde973a4bf6e5741bd9651f3c630a6ec5,3267c439e7ea8c72c1daa596e81fd39c765aba3c,https://github.com/CorfuDB/CorfuDB/commit/ddef541fde973a4bf6e5741bd9651f3c630a6ec5,"Refactor CorfuServer so that code can be reused in tests (#1061)

* Refactor CorfuServer so that code can be reused in tests

* make interface public

* Fix NPE

* Fix typo

* remove useless assignment",2017-12-20 18:40:36,Michael Wei,"['logReader/src/test/java/org/corfudb/logReader/logReaderTest.java', 'test/src/test/java/org/corfudb/infrastructure/BaseServerTest.java', 'test/src/test/java/org/corfudb/runtime/clients/BaseClientTest.java', 'test/src/test/java/org/corfudb/runtime/clients/NettyClientRouterTest.java', 'test/src/test/java/org/corfudb/runtime/clients/NettyCommTest.java', 'test/src/test/java/org/corfudb/runtime/clients/TestClientRouterTest.java', 'test/src/test/java/org/corfudb/runtime/view/AbstractViewTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,1db8225bbd20ab2452b840999eee37897dfab43e,a830d84f0050b013c17178d581dd17bfacce420d,https://github.com/CorfuDB/CorfuDB/commit/1db8225bbd20ab2452b840999eee37897dfab43e,"Modifying epoch seal (#462)

* Modifying epoch seal

* Logging exceptions

* Abstract in seperate seal classes and added tests

* Parallel seal and code refactor

* Added seal helper class",2017-03-14 04:14:09,Zeeshan Lokhandwala,"['test/src/test/java/org/corfudb/runtime/view/AbstractViewTest.java', 'test/src/test/java/org/corfudb/runtime/view/LayoutSealTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,fad1fca1015b55ad9ee532ad42f5bb6a5b1ee450,c449c22a34bbfa0a6dfbc2dcf84d6b985048ba73,https://github.com/CorfuDB/CorfuDB/commit/fad1fca1015b55ad9ee532ad42f5bb6a5b1ee450,"basic annotation processor

finished CompileProxy implementation

tests now pass

readme, as well as support for undo

use undo log if available for rollback.

adds a unit test which explitly tests for aborts

more refactor. just need to improve the situation with two transactions modifying the same object simultaneously

cleanup of proxy code

continued cleanup of code

improved testing framework, fix issue with rollback

test improvements

more documentation for test cases

more tests. However, it seems like something additional is going to be need for nested transactions (an in-memory transaction log?) since right now we end up just resetting.

move undo log to object

simplify pointer tracking

fix outstanding issues before refactor of versioned object

cleaning up transactional contexts

commenting of versionlockedobject

optimistic commits

broken reject test

pass RS

snapshot and write-after-write tx contexts

Cleanup of unit tests

restore testing framework doc",2016-11-11 21:14:31,Michael Wei,"['test/src/test/java/org/corfudb/AbstractCorfuTest.java', 'test/src/test/java/org/corfudb/runtime/collections/FGMapTest.java', 'test/src/test/java/org/corfudb/runtime/collections/PutIfAbsentMapTest.java', 'test/src/test/java/org/corfudb/runtime/collections/SMRMapTest.java', 'test/src/test/java/org/corfudb/runtime/object/CompileProxyTest.java', 'test/src/test/java/org/corfudb/runtime/object/CorfuSMRObjectProxyTest.java', 'test/src/test/java/org/corfudb/runtime/object/transactions/AbstractTransactionContextTest.java', 'test/src/test/java/org/corfudb/runtime/object/transactions/LockingTransactionalContextTest.java', 'test/src/test/java/org/corfudb/runtime/object/transactions/OptimisticTransactionContextTest.java', 'test/src/test/java/org/corfudb/runtime/object/transactions/SnapshotTransactionContextTest.java', 'test/src/test/java/org/corfudb/runtime/object/transactions/TransactionalContextTest.java', 'test/src/test/java/org/corfudb/runtime/object/transactions/WriteAfterWriteTransactionContextTest.java', 'test/src/test/java/org/corfudb/runtime/view/ObjectsViewTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,9e18550facca8ba286034b47861ca5602a3acb40,8e7645de81c690584dacac918f888ae341739164,https://github.com/CorfuDB/CorfuDB/commit/9e18550facca8ba286034b47861ca5602a3acb40,"Introducing Management Server (#261)

* Introducing Management Server

* Management server fixes

* Added additional logging

* Failure msg handler added.

* Refactored Management CorfuMsgs. Added mngmnt bootstrap cmdlet

* Fixed undefinitely running test",2016-11-15 23:19:57,Zeeshan Lokhandwala,"['src/test/java/org/corfudb/infrastructure/ManagementServerTest.java', 'src/test/java/org/corfudb/runtime/clients/AbstractClientTest.java', 'src/test/java/org/corfudb/runtime/clients/ManagementClientTest.java', 'src/test/java/org/corfudb/runtime/view/AbstractViewTest.java', 'src/test/java/org/corfudb/runtime/view/ManagementViewTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,fc6a9f1ff8d370d7f50ebde956f9065dac0df2df,d9d2eb815b0ad708875e6d21834a19a5cfc05f18,https://github.com/CorfuDB/CorfuDB/commit/fc6a9f1ff8d370d7f50ebde956f9065dac0df2df,"Squash of slfritchie/eqc-layout-hack6c branch (prep for final PR) at 9a51bd10

Commit summary messages:

Fix query + wrong client epoch bug (server side & model side)

Fix buf in commit: epoch must be strictly increasing

Fix model problem with commit & client epoch to conform to Medhavi's implementation

Fix bug: commit checks epoch of msg's layout

Fix model bug: Medhavi's code uses wrongEpochException instead of NACK

Remove spammy debugging messages

Fix double reply for LAYOUT_REQUEST. handleMessageLayoutRequest() still has TODO item

Fix remaining junit test problems

Restructure Erlang code, add README.md and Build.sh

QC code refactoring: big overhaul for PropEr & EQC support

WIP: smrmap_qc.erl refactoring

Fix zero-arity bug in corfu_smrobject

WIP: working on reset()-surviving data

OUCH, this causes a put/reset/put timeout!

WIP: yakshaving for reset() of layout server & SMRMap test: reset doesn't hang put, but no visible reset either

WIP: yakshaving for reset() of layout server & SMRMap test: reset doesn't hang put yay!

WIP: yakshaving for reset(): damn, broken using *much* more reliable put/reset/get/put -> timeout

WIP: yakshaving for reset(): WHOA! sequencer reset() causes timeout of put/reset/get/put!

WIP: yakshaving for reset(): fix space leak caused by not unmap'ing files

WIP: yakshaving for reset(): where is this timeout, drat drat

Bugfix/TODO: if backpointer doesn't actually point backward, then {bogus response} and {return early}

DAMNDAMN important reboot() state fix

DAMNDAMN important reboot() state fix, part 2

Remove debugging spam

Fix Null pointer error in LogUnitServer constructor in junit testing

Work around inability to terminate Netty client worker thread pool

Workaround for intermittent 'Disconnected endpoint' NetworkException (doesn't work)

Try to fix a data race bug ... but I don't understand why it works.

Exercise by:

    proper:quickcheck(proper:numtests(10*1000,smrmap_qc:prop()), [noshrink]).

Update via git rebase: HAHAHA, no, the bug is still present in this
commit.

Old comment:

With the prior commit, this would almost certainly end up with a
failure.  With this commit, the bug is either fixed, *or* I've merely
reduced the race window size somewhat?

Try to fix a data race bug, part II.  Seems better.  Window closed?  Not sure...

Stop clobbering my tracing level

Fix think-o's in prop_parallel()

Add NOTE to start of prop_parallel() execution about ?ALWAYS()

Rename smrmap_qc.erl -> map_qc.erl; add FGMap support

Add workarounds for bugs #211 and #212

Add ?ELSE() macro to match PropEr's strict expectation of postcondtion() -> boolean() return value

Clean up cmdlet return String[] conventions

Move QuickCheck code to new QuickCheckMode.java

Final comment cruft cleanup",2016-08-18 00:36:59,Scott Lystig Fritchie,['src/test/java/org/corfudb/infrastructure/LayoutServerTest.java']
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,d9d2eb815b0ad708875e6d21834a19a5cfc05f18,d78c0e3487a0d2fd47c1314667a0f5387f51863f,https://github.com/CorfuDB/CorfuDB/commit/d9d2eb815b0ad708875e6d21834a19a5cfc05f18,"Squash of slf/eqc-layout-hack4 as of commit e942fac4

* Summary:

Squash of slf/eqc-layout-hack as of commit b83b97c1

Hrm, parallel test case where Proper doesn't find a good interleaving?

The code changes here are minor spammy things, to show exactly what's
happening with the command sequence filtering for the parallel test case.
The output confirms that the reset is being done only once, at the
beginning of the sequently cmd sequence.

This case has an interleaving that's pretty easy to spot by eye, but it's
causing Proper to find a failure.  The case fails, expecting ""Hello-world!""
and instead getting [].

This counterexample fails 100% consistently.  Hmmmmmmmmmmmmmmmmmm.

    (foo2@sfritchie-m01)43> proper:check(smrmap_eqc:prop_parallel(), C1).

     **** Keep original reset
    ****

    Cmds {[{init,{state,false,42,[],
                        [{cmdlet0,'corfu@sfritchie-m01'},
                         {cmdlet1,'corfu@sfritchie-m01'},
                         {cmdlet2,'corfu@sfritchie-m01'},
                         {cmdlet3,'corfu@sfritchie-m01'},
                         {cmdlet4,'corfu@sfritchie-m01'},
                         {cmdlet5,'corfu@sfritchie-m01'},
                         {cmdlet6,'corfu@sfritchie-m01'},
                         {cmdlet7,'corfu@sfritchie-m01'},
                         {cmdlet8,'corfu@sfritchie-m01'},
                         {cmdlet9,'corfu@sfritchie-m01'},
                         {cmdlet10,'corfu@sfritchie-m01'},
                         {cmdlet11,'corfu@sfritchie-m01'},
                         {cmdlet12,'corfu@sfritchie-m01'},
                         {cmdlet13,...},
                         {...}|...]}},
           {set,{var,1},
                {call,smrmap_eqc,reset,[{cmdlet4,'corfu@sfritchie-m01'},42]}},
           {set,{var,7},
                {call,smrmap_eqc,put,
                      [{cmdlet15,'corfu@sfritchie-m01'},42,""a"",[]]}}],
          [[{set,{var,3},
                 {call,smrmap_eqc,put,
                       [{cmdlet2,'corfu@sfritchie-m01'},42,""m"",""Another-value""]}},
            {set,{var,4},
                 {call,smrmap_eqc,put,
                       [{cmdlet9,'corfu@sfritchie-m01'},42,""a"",""Hello-world!""]}}],
           [{set,{var,3},
                 {call,smrmap_eqc,get,
                       [{cmdlet5,'corfu@sfritchie-m01'},42,""a""]}}]]}
    3,[2,1]Failed: The input fails the test.
    An exception was raised: error:{case_clause,{key,[97],expected,[72,101,108,108,111,45,119,111,114,108,100,33],got,[]}}.
    Stacktrace: [{proper_statem,check,6,
                                [{file,""src/proper_statem.erl""},{line,683}]},
                 {proper_statem,check,6,
                                [{file,""src/proper_statem.erl""},{line,688}]},
                 {proper_statem,run_parallel_commands,3,
                                [{file,""src/proper_statem.erl""},{line,619}]},
                 {timer,tc,1,[{file,""timer.erl""},{line,166}]},
                 {smrmap_eqc,'-prop_parallel/2-fun-6-',2,
                             [{file,""smrmap_eqc.erl""},{line,304}]},
                 {proper,apply_args,3,[{file,""src/proper.erl""},{line,1353}]},
                 {proper,retry,3,[{file,""src/proper.erl""},{line,1040}]},
                 {erl_eval,do_apply,6,[{file,""erl_eval.erl""},{line,674}]}].
    false

Put limits on parallel_commands() use {sigh}. Avoid using reset().

parallel_commands() length limit to 6, remove some spammy msgs

WIP: start layout_eqc.erl

WIP: reset/shutdown refactoring

WIP: stop/start/reset getting closer

WIP: stop/start/reset getting closer

Layout server reset() yakshaving done, I think

Add unit test for LayoutServer.reset()

Split reset() and reboot()

EQC: reboot, reset, query, prepare.  First bug found but NOT a bug, yay!

So, the description that appears below describes a bug found when the
server is running in memory mode.  Silly me, this test assumes that the
server is running in persistent mode.

* On reboot() when in persistent mode, all layout + phase 1 + phase 2
  info should be remembered.

* On reboot when in memory mode, all that stuff should be forgotten.

Heh.

--- snip --- snip --- snip ---

So, state is getting lost in layout server reboot, oops.

    (foo@sbb5)16> eqc:current_counterexample().
    [[{init,{state,false,""sbb5:8000"",
                   [cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,
                    cmdlet7,cmdlet8,cmdlet9],
                   0}},
      {set,{var,1},
           {call,layout_eqc,reset,
                 [{cmdlet4,'corfu-8000@sbb5'},""sbb5:8000""]}},
      {set,{var,2},
           {call,layout_eqc,prepare,
                 [{cmdlet9,'corfu-8000@sbb5'},""sbb5:8000"",1]}},
      {set,{var,3},
           {call,layout_eqc,reboot,
                 [{cmdlet0,'corfu-8000@sbb5'},""sbb5:8000""]}},
      {set,{var,4},
           {call,layout_eqc,prepare,
                 [{cmdlet3,'corfu-8000@sbb5'},""sbb5:8000"",1]}}]]

... has the last step:

            .... history truncated ....
	    {set,{var,4},
		 {call,layout_eqc,prepare,
		       [{cmdlet3,'corfu-8000@sbb5'},
			""sbb5:8000"",1]}},
	    [],
	    {normal,[""OK""]}}]
    S: {state,true,[115,98,98,53,58,56,48,48,48],[cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,cmdlet7,cmdlet8,cmdlet9],1}
    R: {postcondition,false}

Add bogus command 'resetAMNESIA' to demonstrate that the model is working

resetAMNESIA() just calls reset(), which throws away server state and
causes amnesia and which this model is currently NOT modeling.
Therefore, we ought to discover an amnesia failing test case quickly,
and we do.

    (foo@sbb5)54> eqc:current_counterexample().
    [[{init,{state,false,""sbb5:8000"",
                   [cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,
                    cmdlet7,cmdlet8,cmdlet9],
                   0}},
      {set,{var,1},
           {call,layout_eqc,reset,
                 [{cmdlet4,'corfu-8000@sbb5'},""sbb5:8000""]}},
      {set,{var,2},
           {call,layout_eqc,prepare,
                 [{cmdlet4,'corfu-8000@sbb5'},""sbb5:8000"",1]}},
      {set,{var,3},
           {call,layout_eqc,resetFOO,
                 [{cmdlet6,'corfu-8000@sbb5'},""sbb5:8000""]}},
      {set,{var,4},
           {call,layout_eqc,prepare,
                 [{cmdlet5,'corfu-8000@sbb5'},""sbb5:8000"",1]}}]]

... and ...

        {eqc_statem_history,{state,true,""sbb5:8000"",
                                   [cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,
                                    cmdlet5,cmdlet6,cmdlet7,cmdlet8,cmdlet9],
                                   1},
                            {set,{var,4},
                                 {call,layout_eqc,prepare,
                                       [{cmdlet5,'corfu-8000@sbb5'},
                                        ""sbb5:8000"",1]}},
                            [],
                            {normal,[""OK""]}}]
    S:
{state,true,[115,98,98,53,58,56,48,48,48],[cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,cmdlet7,cmdlet8,cmdlet9],1}
    R: {postcondition,false}

Remove resetAMNESIA command, hooray no failures.

    eqc:quickcheck(eqc:numtests(1000, layout_eqc:prop())).
    [....]
    OK, passed 1000 tests

    42.43% {layout_eqc,query,2}
    41.74% {layout_eqc,prepare,3}
    10.12% {layout_eqc,reboot,2}
     5.70% {layout_eqc,reset,2}

    41.9% 0
    26.7% 1
    14.3% 2
     6.8% 3
     4.0% 4
     2.7% 5
     1.7% 6
     0.9% 7
     0.4% 8
     0.2% 10
     0.1% 18
     0.1% 17
     0.1% 12
     0.1% 9
    true

Add parallel_commands(), though not compatible with PropEr, sorry

With parallel_commands(), we see a concurrency race/bug with reboot vs.  prepare

Excellent, this exposes a bug in the reboot code, where a prepare
op running concurrently exposes a NoBootstrapException, which should
not be visible.

Approximately 4 times out of 100, this case below fails on my MacBook.
Its nondeterminism has confused QC's shrinking, so the test case is
larger than it really needs to be.  After some sequential commands, the
parallel stuff is:

    Parallel:

    1. layout_eqc:prepare({cmdlet7, 'corfu-8000@sbb5'}, ""sbb5:8000"", 10) ->
      [""ERROR"", ""Exception during prepare {}\n"",
       ""org.corfudb.runtime.exceptions.NoBootstrapException: Layout server not bootstrapped!""]
    2. layout_eqc:reboot({cmdlet0, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
       layout_eqc:query({cmdlet3, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK"", ""{... JSON stuff omitted...}""]
       layout_eqc:reboot({cmdlet3, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]

    Reason: no_possible_interleaving

Steps:

    C1 = [1,{[{init,{state,false,[115,98,98,53,58,56,48,48,48],[cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,cmdlet7,cmdlet8,cmdlet9],0}},{set,{var,1},{call,layout_eqc,reset,[{cmdlet4,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}},{set,{var,2},{call,layout_eqc,prepare,[{cmdlet1,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],7]}},{set,{var,3},{call,layout_eqc,reboot,[{cmdlet9,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}},{set,{var,4},{call,layout_eqc,prepare,[{cmdlet0,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],2]}},{set,{var,5},{call,layout_eqc,query,[{cmdlet4,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}},{set,{var,6},{call,layout_eqc,query,[{cmdlet0,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}},{set,{var,7},{call,layout_eqc,reboot,[{cmdlet0,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}},{set,{var,8},{call,layout_eqc,query,[{cmdlet2,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}}],[[{set,{var,9},{call,layout_eqc,prepare,[{cmdlet7,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],10]}}],[{set,{var,10},{call,layout_eqc,reboot,[{cmdlet0,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}},{set,{var,11},{call,layout_eqc,query,[{cmdlet3,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}},{set,{var,12},{call,layout_eqc,reboot,[{cmdlet3,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}}]]}].
    [eqc:check(eqc:numtests(100, layout_eqc:prop_parallel()), C1) || _ <- lists:seq(1,100)].

Excellent: rearrange synchronized use to reduce failure rate: 4% -> 0%

Add naive propose to EQC, finds basic bug (I think)

If we use:

    eqc:quickcheck(eqc:numtests(100, layout_eqc:prop())).

... we very quickly find something that shrinks down to:

     {set,{var,1},
          {call,layout_eqc,reset,[{cmdlet8,'corfu-8000@sbb5'},""sbb5:8000""]}},
     {set,{var,2},
          {call,layout_eqc,propose,
                [{cmdlet9,'corfu-8000@sbb5'},
                 ""sbb5:8000"",1,
                 ""... JSON omitted....

The return value from command #2 is [""OK""].  There was no prepare with
any rank.  This seems to me to be a bug, but it's been a while since
I've read Medhavi's and Dahlia's correspondence on how Things Ought To
Work(tm).

WIP: temp work-around propose bug/weirdness

WIP: LayoutServer.java transplant, part I

WIP: compiles w/o error. Now to redo reset() and reboot() for LayoutServer

Fix layout server reset(). Unit tests pass. layout_eqc is broken.

Fix model error for 2x propose @ same rank

Bugfix for propose w/o prepare (null pointer exception)

Ooops, cmdlet usage problem: server wants layout in commit msg, but cmdlet permits rank only

Fix cmdlet usage for 'corfu_layout committed'

WIP: commit check not correct yet....

Compensate for epoch # missing inside of commit message

WIP: fighting epoch changes, on the client side this time {sigh}

Fix bug with CorfuMsg epoch # in cmdlet use

Model fix. Bug fix for returning NACK from layout commit

Change back to pretty_commands() for now

Change gen_layout() from JSON -> more terse Erlang record

Scrape the rank value out of OutrankedException. Bug found?

Also, change the namges of internal vars for rank tracking.
Old names were daft.

Bug?  Using the same rank twice is bad?

    layout_eqc:reset({cmdlet9, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
    layout_eqc:commit({cmdlet2, 'corfu-8000@sbb5'}, ""sbb5:8000"", 64,
        #layout{ epoch = 1, ls = [], ss = [], segs = []}) ->
      [""OK""]
    layout_eqc:prepare({cmdlet3, 'corfu-8000@sbb5'}, ""sbb5:8000"", 1) -> [""OK""]
    layout_eqc:reboot({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
    layout_eqc:prepare({cmdlet9, 'corfu-8000@sbb5'}, ""sbb5:8000"", 1) -> [""OK""]

    Reason:
      Post-condition failed:
      false

Fix model bug: don't reset prepared rank to -1, derp.

    layout_eqc:reset({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
    layout_eqc:prepare({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"", 94) -> [""OK""]
    layout_eqc:propose({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"", 94,
        #layout{ epoch = 1, ls = [], ss = [], segs = []}) -> [""OK""]
    layout_eqc:commit({cmdlet0, 'corfu-8000@sbb5'}, ""sbb5:8000"", 94,
        #layout{ epoch = 1, ls = [], ss = [], segs = []}) -> [""OK""]
    layout_eqc:reboot({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
    layout_eqc:propose({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"", -1,
        #layout{ epoch = 1, ls = [], ss = [], segs = []}) ->
      [""ERROR"", ""Exception during propose {}\n"",
       ""org.corfudb.runtime.exceptions.OutrankedException: Higher rank
94 encountered"",

%% After chatting with Dahlia, the model should separate
%% rank checking from epoch checking.  In theory, the
%% implementation could reset rank state after a new
%% layout with bigger epoch has been committed.  The
%% current implementation does not reset the rank state;
%% that may change, pending more changes in PR #210 and
%% perhaps elsewhere.

Also, ...

        // SLF TODO: add a first-class command to the EQC model to tell the
        // client to update the client router's epoch?  Dahlia think that that'll
        // be necessary sometime soon.  Hm.

Bugfix for #169: include new layout in OutrankedException

Model fix: don't allow multiple propose @ same rank

WIP: Fix more model problems

Bugfix: reset rank & proposed layout on commit

Model fix: check epoch upon commit & ignore rank

Add PropEr/QuickCheck compat func check_result()

Fix persistence bug in reboot()

WIP: less spam

Bugfix: do not allow 2x commit at same epoch

Counterexample (fixed by this patch):

    layout_eqc:reset({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
    layout_eqc:commit({cmdlet5, 'corfu-8000@sbb5'}, ""sbb5:8000"", 37,
        #layout{ epoch = 1, ls = [], ss = [], segs = []}) ->
      [""OK""]
    layout_eqc:commit({cmdlet3, 'corfu-8000@sbb5'}, ""sbb5:8000"", 37,
        #layout{ epoch = 1, ls = [], ss = [], segs = []}) ->
      [""OK""]

    Reason:
      Post-condition failed:
      false

WIP: less spam

Validate query() result.  'OK, passed 500 tests', hooray!

PropEr:

    OK: Passed 500 test(s).

    25% {layout_eqc,propose,4}
    24% {layout_eqc,prepare,3}
    24% {layout_eqc,query,2}
    10% {layout_eqc,commit,4}
    8% {layout_eqc,reset,2}
    5% {layout_eqc,reboot,2}

    54% 0
    25% 1
    14% 2
    5% 3
    0% 4
    true

QuickCheck:

    (foo@sbb5)249> eqc:quickcheck(eqc:numtests(500, layout_eqc:prop())).
    OK, passed 500 tests

    25.74% {layout_eqc,query,2}
    25.12% {layout_eqc,prepare,3}
    24.08% {layout_eqc,propose,4}
    11.65% {layout_eqc,commit,4}
     6.70% {layout_eqc,reset,2}
     6.70% {layout_eqc,reboot,2}

Clean up prop_parallel() handling

Move gen_epoch() back to something more sane

Add ?ALWAYS() to prop_parallel() to help shrinking during non-deterministic races

For example, here's a race that needs fixing.

    Sequential prefix:

       layout_eqc:reset({cmdlet0, 'corfu-8000@sbb5'}, ""sbb5:8000"") ->
[""OK""]

    Parallel:

    1. layout_eqc:commit({cmdlet2, 'corfu-8000@sbb5'}, ""sbb5:8000"", -1,
        #layout{ epoch = 22, ls = [], ss = [], segs = []}) ->
      [""OK""]
    2. layout_eqc:propose({cmdlet5, 'corfu-8000@sbb5'}, ""sbb5:8000"", -1,
        #layout{ epoch = 5, ls = [], ss = [], segs = []}) ->
      [""ERROR"", ""Exception during propose"",
       ""org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch.
       [expected=22]"",..........

WIP: prop_parallel() model fixing

Fix model bug: if wrongEpochException, check it against model's committed_epoch

Fix model handling of WrongEpochException during commit

Fix model handling of WrongEpochException during prepare

WIP: sanity try/catch wrapper around postcondition()

Fix model bug: race where epoch changes quickly enough to interfere with propose

WIP: fix model problem with wrong epochs by making client epoch # explicit in all commands

WIP: Fix more model problems

Fix typo in exception reporting.  Concurrency bug remaining is *icky*.

I'm stopping for the night.  This one seems pretty strange: The
*same* counter-example fails in *two* different ways, which is pretty
cool in a heartless kind of way..

    C2 = [{[{init,{state,false,[115,98,98,53,58,56,48,48,48],[cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,cmdlet7,cmdlet8,cmdlet9],-1,[],[],0}},{set,{var,1},{call,layout_eqc,reset,[{cmdlet5,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}}],[[{set,{var,2},{call,layout_eqc,prepare,[{cmdlet6,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],25,1]}},{set,{var,3},{call,layout_eqc,prepare,[{cmdlet8,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],25,1]}}],[{set,{var,4},{call,layout_eqc,commit,[{cmdlet0,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],0,35,{layout,25,[],[],[]}]}},{set,{var,5},{call,layout_eqc,prepare,[{cmdlet7,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],25,2]}}]]}].

Failure mode number 1: all parallel commands succeed.  However, the second
prepare, {var,3}'s command, should fail (same rank = 1).

    Sequential prefix:

       layout_eqc:reset({cmdlet5, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]

    Parallel:

    1. layout_eqc:prepare({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"", 25, 1) -> [""OK""]
       layout_eqc:prepare({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"", 25, 1) -> [""OK""]
    2. layout_eqc:commit({cmdlet0, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 35,
        #layout{ epoch = 25, ls = [], ss = [], segs = []}) ->
      [""OK""]
       layout_eqc:prepare({cmdlet7, 'corfu-8000@sbb5'}, ""sbb5:8000"", 25, 2) -> [""OK""]

    Reason: no_possible_interleaving
    false

Here's the second failure mode: all parallel commands fail.  All of
the exceptions report that the server's epoch is still 0 (the default).
If the server's epoch is 0, then (at least) the commit at command {var,4}
should succeed.

    Sequential prefix:

       layout_eqc:reset({cmdlet5, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]

    Parallel:

    1. layout_eqc:prepare({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"", 25, 1) ->
      [""ERROR"", ""Exception during prepare"",
       ""org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]"",
       ""correctEpoch: 0"",
       ""stack: java.util.concurrent.ExecutionException: org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]\n\tat java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357).............
       layout_eqc:prepare({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"", 25, 1) ->
         [""ERROR"", ""Exception during prepare"",
          ""org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]"",
          ""correctEpoch: 0"",
          ""stack: java.util.concurrent.ExecutionException: org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]\n\tat java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)..................
    2. layout_eqc:commit({cmdlet0, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 35,
        #layout{ epoch = 25, ls = [], ss = [], segs = []}) ->
      [""ERROR"", ""Exception during commit"",
       ""org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]"",
       ""correctEpoch: 0"",
       ""stack: java.util.concurrent.ExecutionException: org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]\n\tat java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)............
       layout_eqc:prepare({cmdlet7, 'corfu-8000@sbb5'}, ""sbb5:8000"", 25, 2) ->
         [""ERROR"", ""Exception during prepare"",
          ""org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]"",
          ""correctEpoch: 0"",
          ""stack: java.util.concurrent.ExecutionException: org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]\n\tat java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)\n\t............

    Reason: no_possible_interleaving
    false

public -> private, add synchronised.  Still buggy, see previous commit. Can I have Erlang back now?

Implementation fix: CorfuMsg's epoch=0 is OK, but negative is bad

WIP: chasing a concurrency bug

    (foo@sbb5)186> io:format(""C6 = ~w.\n"", [eqc:current_counterexample()]).
    C6 = [{[{init,{state,false,[115,98,98,53,58,56,48,48,48],[cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,cmdlet7,cmdlet8,cmdlet9],-1,[],[],0}},{set,{var,1},{call,layout_eqc,reset,[{cmdlet0,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}}],[[{set,{var,2},{call,layout_eqc,prepare,[{cmdlet2,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],22,1]}},{set,{var,3},{call,layout_eqc,prepare,[{cmdlet6,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],22,1]}}],[{set,{var,4},{call,layout_eqc,commit,[{cmdlet8,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],0,1,{layout,22,[],[],[]}]}},{set,{var,5},{call,layout_eqc,query,[{cmdlet3,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],22]}}]]}].
    eqc:check(eqc:numtests(5*10, layout_eqc:prop_parallel()), C6).

This fails in two different ways.  The one I'm chasing right now is the
one below; the 2nd prepare() should be failing (both prepare() calls use
rank=1 inside of epoch 22).

    Sequential prefix:

       layout_eqc:reset({cmdlet0, 'corfu-8000@sbb5'}, ""sbb5:8000"") ->
[""OK""]

    Parallel:

    1. layout_eqc:prepare({cmdlet2, 'corfu-8000@sbb5'}, ""sbb5:8000"", 22, 1) -> [""OK""]
       layout_eqc:prepare({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"", 22, 1) -> [""OK""]
    2. layout_eqc:commit({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 1,
        #layout{ epoch = 22, ls = [], ss = [], segs = []}) ->
      [""OK""]
       layout_eqc:query({cmdlet3, 'corfu-8000@sbb5'}, ""sbb5:8000"", 22) ->
         [""OK"",
          ""{\n  \""layoutServers\"": [],\n  \""sequencers\"": [],\n \""segments\"": [],\n  \""epoch\"": 22\n}""]

    Reason: no_possible_interleaving
    false

All of the System.out.print* goop that I've added suggests that the
first prepare is writing using epoch 0:

    DS: write /tmp/corfu-test-dir/PHASE_1_0RANK

... but the second prepare is using epoch 22:

    DS: write /tmp/corfu-test-dir/PHASE_1_22RANK

Full console output:

    Layout server reset

    DS: write /tmp/corfu-test-dir/LAYOUT_CURRENT
    DS: cache put LAYOUT_CURRENT
    DS: write /tmp/corfu-test-dir/LAYOUTS_0
    DS: cache put LAYOUTS_0
    DS: read /tmp/corfu-test-dir/LAYOUT_CURRENT
    DS: cache get LAYOUT_CURRENT
    DS: cache get LAYOUT_CURRENT
    DS: write /tmp/corfu-test-dir/SERVER_EPOCH_CURRENT
    DS: cache put SERVER_EPOCH_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get LAYOUT_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: notExists read /tmp/corfu-test-dir/PHASE_1_0RANK
    DS: cache get PHASE_1_0RANK
    DS: cache get SERVER_EPOCH_CURRENT
    DS: notExists read /tmp/corfu-test-dir/PHASE_2_0DATA
    DS: cache get PHASE_2_0DATA
    New phase 1 rank=Rank(rank=1, clientId=0f04f13d-ae16-4e50-97cd-215461bf06df) A
    DS: cache get SERVER_EPOCH_CURRENT
    DS: write /tmp/corfu-test-dir/PHASE_1_0RANK
    DS: cache put PHASE_1_0RANK
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get PHASE_1_0RANK
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get PHASE_1_0RANK
    New phase 1 rank=Rank(rank=1, clientId=0f04f13d-ae16-4e50-97cd-215461bf06df) B
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get LAYOUT_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: delete /tmp/corfu-test-dir/PHASE_1_0RANK
    DS: cache delete PHASE_1_0RANK
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache delete PHASE_2_0DATA
    DS: write /tmp/corfu-test-dir/LAYOUT_CURRENT
    DS: cache put LAYOUT_CURRENT
    DS: write /tmp/corfu-test-dir/LAYOUTS_22
    DS: cache put LAYOUTS_22
    DS: write /tmp/corfu-test-dir/SERVER_EPOCH_CURRENT
    DS: cache put SERVER_EPOCH_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get LAYOUT_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: notExists read /tmp/corfu-test-dir/PHASE_1_22RANK
    DS: cache get PHASE_1_22RANK
    DS: cache get SERVER_EPOCH_CURRENT
    DS: notExists read /tmp/corfu-test-dir/PHASE_2_22DATA
    DS: cache get PHASE_2_22DATA
    New phase 1 rank=Rank(rank=1, clientId=0f04f13d-ae16-4e50-97cd-215461bf06df) A
    DS: cache get SERVER_EPOCH_CURRENT
    DS: write /tmp/corfu-test-dir/PHASE_1_22RANK
    DS: cache put PHASE_1_22RANK
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get PHASE_1_22RANK
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get PHASE_1_22RANK
    New phase 1 rank=Rank(rank=1, clientId=0f04f13d-ae16-4e50-97cd-215461bf06df) B
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get LAYOUT_CURRENT
    DS: cache get LAYOUT_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT

WIP: chasing a concurrency bug (cont)

Very interesting, the client epoch value isn't being propagated from
client side to server side correctly?

    % egrep -i 'reset|write|delete|incom|validate|--epoch' ~/foo
    Layout server reset
    DS: write /tmp/corfu-test-dir/LAYOUT_CURRENT
    DS: write /tmp/corfu-test-dir/LAYOUTS_0
    DS: write /tmp/corfu-test-dir/SERVER_EPOCH_CURRENT
    corfu_layout: --epoch 22 opts {--log-level=INFO, prepare=true, committed=false, --rank=1, query=false, bootstrap=false, <address>:<port>=sbb5:8000, --single=false, propose=false, --layout-file=null, --epoch=22}
    corfu_layout: --epoch 0 opts {--log-level=INFO, prepare=false, committed=true, --rank=1, query=false, bootstrap=false, <address>:<port>=sbb5:8000, --single=false, propose=false, --layout-file=/tmp/layout.{1471,288155,852181}, --epoch=0}
    validateEpoch: msgtype LAYOUT_PREPARE ignoreEpoch false msgEpoch 0 serverEpoch 0
    [...]

On the client side, the ""--epoch 22"" option is there.  But on the server
side in NettyServerRouter's validateEpoch(), the epoch is 0.  Grr.

Fix model client-side concurrency bugs

* Use ConcurrentHashMap for routers
* Use routers.putIfAbsent, then re-get
* Add new flag ""-p/--quickcheck-ap-prefix"" to avoid false sharing of
  client-side router.

Remove debug spam

Fix model bug: don't check client epoch # for query

The counter-example found by EQC prior to this patch:

    Sequential prefix:

       layout_eqc:reset({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
       layout_eqc:commit({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 100,
           #layout{ epoch = 5, ls = [], ss = [], segs = []}) ->
         [""OK""]
       layout_eqc:query({cmdlet3, 'corfu-8000@sbb5'}, ""sbb5:8000"", 22) ->
         [""OK"",
          ""{\n  \""layoutServers\"": [],\n  \""sequencers\"": [],\n  \""segments\"": [],\n  \""epoch\"": 5\n}""]

    Reason:
      Post-condition failed:
      false

The committed epoch was 5, then a query sent in epoch 22.  The model
was incorrectly expecting the server to send a badepoch reply.

WIP: add spam to debug another concurrency bug

    (foo@sbb5)567> C8.
    [{[{init,{state,false,""sbb5:8000"",
                    [cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,
                     cmdlet7,cmdlet8,cmdlet9],
                    -1,[],[],0}},
       {set,{var,1},
            {call,layout_eqc,reset,
                  [{cmdlet5,'corfu-8000@sbb5'},""sbb5:8000""]}}],
      [[{set,{var,2},
             {call,layout_eqc,propose,
                   [{cmdlet2,'corfu-8000@sbb5'},
                    ""sbb5:8000"",0,21,
                    {layout,1,[],[],[]}]}},
        {set,{var,3},
             {call,layout_eqc,prepare,
                   [{cmdlet8,'corfu-8000@sbb5'},""sbb5:8000"",0,1]}},
        {set,{var,4},
             {call,layout_eqc,prepare,
                   [{cmdlet7,'corfu-8000@sbb5'},""sbb5:8000"",27,1]}}],
       [{set,{var,5},
             {call,layout_eqc,prepare,
                   [{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",0,1]}},
        {set,{var,6},
             {call,layout_eqc,commit,
                   [{cmdlet3,'corfu-8000@sbb5'},
                    ""sbb5:8000"",0,76,
                    {layout,27,[],[],[]}]}}]]}]

The EQC execution side is below.  There are 3 prepare ops.  According to
the client side, two of them fail with exceptions.  However, according
to the server side (see further below), only *one* prepare fails.

    Sequential prefix:

       layout_eqc:reset({cmdlet5, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]

    Parallel:

    1. layout_eqc:propose({cmdlet2, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 21,
        #layout{ epoch = 1, ls = [], ss = [], segs = []}) ->
      [""ERROR"", ""Exception during propose"",
       ""org.corfudb.runtime.exceptions.OutrankedException: Higher rank 1 encountered, layout = null"",
       ""newRank: 1"",
       ""stack: java.util.concurrent.ExecutionException: org.corfudb.runtime.exceptions.OutrankedException: Higher rank 1 encountered, layout = null\n\tat ...
       layout_eqc:prepare({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 1) ->
         [""ERROR"", ""Exception during prepare"",
          ""org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=27]"",
          ""correctEpoch: 27"",
          ""stack: java.util.concurrent.ExecutionException: org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch.  [expected=27]\n\tat ...
       layout_eqc:prepare({cmdlet7, 'corfu-8000@sbb5'}, ""sbb5:8000"", 27, 1) ->
         [""ERROR"", ""Exception during prepare"",
          ""org.corfudb.runtime.exceptions.OutrankedException: Higher rank 1 encountered, layout = null"",
          ""newRank: 1"", ""layout: ""]
    2. layout_eqc:prepare({cmdlet1, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 1) -> [""OK""]
       layout_eqc:commit({cmdlet3, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 76,
           #layout{ epoch = 27, ls = [], ss = [], segs = []}) ->
         [""OK""]

    Reason: no_possible_interleaving

Server side spam output:

    corfu_layout top: reset
    New phase 1 rank=Rank(rank=1, clientId=e71b0f49-92ef-44c7-8e60-d46f4c6268af)
    Rejected phase 2 B propose of rank=Rank(rank=21, clientId=539507fb-6caa-4873-9554-8c60815b931f), phase1Rank=Rank(rank=1, clientId=e71b0f49-92ef-44c7-8e60-d46f4c6268af)
    New phase 1 rank=Rank(rank=1, clientId=bb75352e-0713-4839-9834-0d726eaeb88e)
    Rejected phase 1 prepare of rank=Rank(rank=1, clientId=d2f78485-99ec-431a-af62-54a086aaf01b), phase1Rank=Rank(rank=1, clientId=bb75352e-0713-4839-9834-0d726eaeb88e)

WIP: add spam

Fix real concurrency bug, yay!

See commit 4770d10c0f9b71e28e5808e5e168ac2170bec9f9 for EQC
counterexample details.

The problem is that NettyServerRouter's single check for an incoming
client's epoch # is outside of LayoutServer's 'synchronized' scheme.
So it's possible for a layout command such as prepare() to succeed
on the client side but send a reply with a new epoch number (due to
concurrent handling of a layout commit()).  When the client receives the
reply, the client side throws a bad epoch exception ... and then the
QuickCheck model believes that the operation failed when in fact the
server believes the op succeeded.

We also change NettyServerRouter's sendResponse() method to always send
a reply with the same epoch as the request.  If the new sanity check
fails, we log a warning level error and then exit the entire server to
express our displeasure.

Strengthen epoch checking in the model

Fix exception reporting problem: badepoch when expected epoch = client epoch

Avoid races in multiple calls to getServerEpoch() when executing
NettyServerRouter's validateEpoch().

Change ?ALWAYS from 25 -> 100 iterations {sigh}

WIP: EQC always is working, Proper is broken

Punt on trying ?ALWAYS behavior for Proper, sorry

Proper & EQC mixing: nearly there!

NOTE: I've introduced a bug into query() to check for proper
      model checking & shrinking!

Oi oi oi, it would be really nice if Proper implemented ?ALWAYS().
So, I'm trying to fake it.

EQC sequential: works
EQC parallel: doesn't work, damn!  EQC bug?
Proper sequential: works
Proper parallel: works

Here's the exception from the EQC bug (?).  The bug does
not always manifest when a counterexample is found ... hm, it
looks like the problem might lie within pretty_commands()??
Note that the sequential prefix is about 23 commands long,
but the exception happens well before pretty-printing has
reached the end of the sequential prefix.

    (foo@sbb5)807> eqc:quickcheck(eqc:testing_time(30*60, layout_eqc:prop_parallel())).
    RFailed! After 1 tests.
    {[{init,{state,false,""sbb5:8000"",
                   [cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,
                    cmdlet7,cmdlet8,cmdlet9],
                   -1,[],[],0}},
      {set,{var,1},
           {call,layout_eqc,reset,[{cmdlet2,'corfu-8000@sbb5'},""sbb5:8000""]}},
      {set,{var,2},
           {call,layout_eqc,prepare,
                 [{cmdlet8,'corfu-8000@sbb5'},""sbb5:8000"",0,3]}},
      {set,{var,3},
           {call,layout_eqc,prepare,
                 [{cmdlet2,'corfu-8000@sbb5'},""sbb5:8000"",0,82]}},
      {set,{var,4},
           {call,layout_eqc,prepare,
                 [{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",0,50]}},
      {set,{var,5},
           {call,layout_eqc,propose,
                 [{cmdlet4,'corfu-8000@sbb5'},
                  ""sbb5:8000"",0,82,
                  {layout,38,[],[],[]}]}},
      {set,{var,6},
           {call,layout_eqc,commit,
                 [{cmdlet5,'corfu-8000@sbb5'},
                  ""sbb5:8000"",0,82,
                  {layout,38,[],[],[]}]}},
      {set,{var,7},
           {call,layout_eqc,query,[{cmdlet6,'corfu-8000@sbb5'},""sbb5:8000"",38]}},
      {set,{var,8},
           {call,layout_eqc,prepare,
                 [{cmdlet4,'corfu-8000@sbb5'},""sbb5:8000"",38,70]}},
      {set,{var,9},
           {call,layout_eqc,propose,
                 [{cmdlet0,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,70,
                  {layout,25,[],[],[]}]}},
      {set,{var,10},
           {call,layout_eqc,commit,
                 [{cmdlet7,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,70,
                  {layout,25,[],[],[]}]}},
      {set,{var,11},
           {call,layout_eqc,propose,
                 [{cmdlet1,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,70,
                  {layout,22,[],[],[]}]}},
      {set,{var,12},
           {call,layout_eqc,query,[{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",38]}},
      {set,{var,13},
           {call,layout_eqc,propose,
                 [{cmdlet7,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,70,
                  {layout,64,[],[],[]}]}},
      {set,{var,14},
           {call,layout_eqc,query,[{cmdlet8,'corfu-8000@sbb5'},""sbb5:8000"",38]}},
      {set,{var,15},
           {call,layout_eqc,query,[{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",38]}},
      {set,{var,16},
           {call,layout_eqc,prepare,
                 [{cmdlet3,'corfu-8000@sbb5'},""sbb5:8000"",38,76]}},
      {set,{var,17},
           {call,layout_eqc,reboot,[{cmdlet5,'corfu-8000@sbb5'},""sbb5:8000""]}},
      {set,{var,18},
           {call,layout_eqc,prepare,
                 [{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",38,7]}},
      {set,{var,19},
           {call,layout_eqc,prepare,
                 [{cmdlet8,'corfu-8000@sbb5'},""sbb5:8000"",38,47]}},
      {set,{var,20},
           {call,layout_eqc,propose,
                 [{cmdlet5,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,76,
                  {layout,77,[],[],[]}]}},
      {set,{var,21},
           {call,layout_eqc,propose,
                 [{cmdlet3,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,76,
                  {layout,5,[],[],[]}]}},
      {set,{var,22},
           {call,layout_eqc,commit,
                 [{cmdlet7,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,76,
                  {layout,5,[],[],[]}]}},
      {set,{var,23},
           {call,layout_eqc,commit,
                 [{cmdlet9,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,76,
                  {layout,5,[],[],[]}]}}],
     [[{set,{var,24},
            {call,layout_eqc,commit,
                  [{cmdlet8,'corfu-8000@sbb5'},
                   ""sbb5:8000"",38,76,
                   {layout,5,[],[],[]}]}},
       {set,{var,25},
            {call,layout_eqc,commit,
                  [{cmdlet6,'corfu-8000@sbb5'},
                   ""sbb5:8000"",38,76,
                   {layout,40,[],[],[]}]}}],
      [{set,{var,26},
            {call,layout_eqc,propose,
                  [{cmdlet7,'corfu-8000@sbb5'},
                   ""sbb5:8000"",38,76,
                   {layout,40,[],[],[]}]}},
       {set,{var,27},
            {call,layout_eqc,query,
                  [{cmdlet3,'corfu-8000@sbb5'},""sbb5:8000"",40]}}]]}

    Sequential prefix:

       layout_eqc:reset({cmdlet2, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
       layout_eqc:prepare({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 3) -> [""OK""]
       layout_eqc:prepare({cmdlet2, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 82) -> [""OK""]
       layout_eqc:prepare({cmdlet1, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 50) ->
         [""ERROR"", ""Exception during prepare"",
          ""org.corfudb.runtime.exceptions.OutrankedException: Higher rank 82 encountered, layout = null"",
          ""newRank: 82"", ""layout: ""]
       layout_eqc:propose({cmdlet4, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 82,
           #layout{ epoch = 38, ls = [], ss = [], segs = []}) ->
         [""OK""]
       layout_eqc:commit({cmdlet5, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 82,
           #layout{ epoch = 38, ls = [], ss = [], segs = []}) ->
         [""OK""]
       layout_eqc:query({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"", 38) ->
         [""OK"",
          ""{\n  \""layoutServers\"": [],\n  \""sequencers\"": [],\n  \""segments\"": [],\n  \""epoch\"": 38\n}""]
    ** exception exit: {function_clause,
                        [{eqc_statem,f32767023_0,
                          [{result,false,true,false,
                            {time,1800000},
                            false,1,true,
                            [{cmds_length,{measurements,1,0,0,0,0.0}}],
                            [{#Fun<eqc.81.114729844>,
                              [{{layout_eqc,commit,5},6},
                               {{layout_eqc,prepare,4},7},
                               {{layout_eqc,propose,5},7},
                               {{layout_eqc,query,3},5},
                               {{layout_eqc,reboot,2},1},
                               {{layout_eqc,reset,...},1}]}],
                            #Fun<eqc.129.114729844>,
                            [{[{init,
                                {state,false,""sbb5:8000"",[cmdlet0|...],-1,...}},
                               {set,{var,1},{call,layout_eqc,reset,...}},
                               {set,{var,2},{call,layout_eqc,...}},
                               {set,{var,3},{call,...}},
                               {set,{var,...},{...}},
                               {set,{...},...},
                               {set,...},
                               {...}|...],
                              [[{set,{var,24},{call,layout_eqc,...}},
                                {set,{var,25},{call,...}}],
                               [{set,{var,26},{call,...}},
                                {set,{var,...},{...}}]]}],
                            [],undefined,undefined},
                           [{set,
                             {var,8},
                             {call,layout_eqc,prepare,
                              [{cmdlet4,'corfu-8000@sbb5'},""sbb5:8000"",38,70]}},
                            {set,
                             {var,9},
                             {call,layout_eqc,propose,
                              [{cmdlet0,'corfu-8000@sbb5'},
                               ""sbb5:8000"",38,70,
                               {layout,25,[],[],[]}]}},
                            {set,
                             {var,10},
                             {call,layout_eqc,commit,
                              [{cmdlet7,'corfu-8000@sbb5'},
                               ""sbb5:8000"",38,70,
                               {layout,25,[],[],[]}]}},
                            {set,
                             {var,11},
                             {call,layout_eqc,propose,
                              [{cmdlet1,'corfu-8000@sbb5'},
                               ""sbb5:8000"",38,70,
                               {layout,22,[],[],[]}]}},
                            {set,
                             {var,12},
                             {call,layout_eqc,query,
                              [{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",38]}},
                            {set,
                             {var,13},
                             {call,layout_eqc,propose,
                              [{cmdlet7,'corfu-8000@sbb5'},
                               ""sbb5:8000"",38,70,
                               {layout,64,[],...}]}},
                            {set,
                             {var,14},
                             {call,layout_eqc,query,
                              [{cmdlet8,'corfu-8000@sbb5'},""sbb5:8000"",38]}},
                            {set,
                             {var,15},
                             {call,layout_eqc,query,
                              [{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",38]}},
                            {set,
                             {var,16},
                             {call,layout_eqc,prepare,
                              [{cmdlet3,'corfu-8000@sbb5'},""sbb5:8000"",38,76]}},
                            {set,
                             {var,17},
                             {call,layout_eqc,reboot,
                              [{cmdlet5,'corfu-8000@sbb5'},""sbb5:8000""]}},
                            {set,
                             {var,18},
                             {call,layout_eqc,prepare,
                              [{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",38|...]}},
                            {set,
                             {var,19},
                             {call,layout_eqc,prepare,[{cmdlet8,...},[...]|...]}},
                            {set,{var,20},{call,layout_eqc,propose,[{...}|...]}},
                            {set,{var,21},{call,layout_eqc,propose,[...]}},
                            {set,{var,22},{call,layout_eqc,commit,...}},
                            {set,{var,23},{call,layout_eqc,...}}],
                           [{7,
                             [""OK"",
                              ""{\n  \""layoutServers\"": [],\n  \""sequencers\"": [],\n  \""segments\"": [],\n  \""epoch\"": 38\n}""]},
                            {6,[""OK""]},
                            {5,[""OK""]},
                            {4,
                             [""ERROR"",""Exception during prepare"",
                              ""org.corfudb.runtime.exceptions.OutrankedException: Higher rank 82 encountered, layout = null"",
                              ""newRank: 82"",""layout: ""]},
                            {3,[""OK""]},
                            {2,[""OK""]},
                            {1,[""OK""]}],
                           [],undefined,no_result,#Fun<eqc_statem.22.102016998>,
                           [{indent,[3]},{width,80},{return_fun,undefined}]],
                          [{file,""../../eqc-project/src/eqc_statem.erl""},
                           {line,2122}]}]}
         in function  eqc:quickcheck/1 (../../eqc-project/src/eqc.erl, line 1392)

WIP: trying to find pretty_commands() bug

Derp, remove intentional query postcondition() model bug

WIP: fix junit test case failures",2016-07-22 20:33:53,Scott Lystig Fritchie,"['src/test/java/org/corfudb/infrastructure/LayoutServerTest.java', 'src/test/java/org/corfudb/runtime/clients/LayoutClientTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,d568df5c6a79d7ce3cb47846414f5f9f7466f294,e4b114f21c2465c0b82ea36807f4c5ba4081fc87,https://github.com/CorfuDB/CorfuDB/commit/d568df5c6a79d7ce3cb47846414f5f9f7466f294,"Squash of slfritchie/eqc-layout-hack6c branch (prep for final PR) at 9a51bd10

Commit summary messages:

Fix query + wrong client epoch bug (server side & model side)

Fix buf in commit: epoch must be strictly increasing

Fix model problem with commit & client epoch to conform to Medhavi's implementation

Fix bug: commit checks epoch of msg's layout

Fix model bug: Medhavi's code uses wrongEpochException instead of NACK

Remove spammy debugging messages

Fix double reply for LAYOUT_REQUEST. handleMessageLayoutRequest() still has TODO item

Fix remaining junit test problems

Restructure Erlang code, add README.md and Build.sh

QC code refactoring: big overhaul for PropEr & EQC support

WIP: smrmap_qc.erl refactoring

Fix zero-arity bug in corfu_smrobject

WIP: working on reset()-surviving data

OUCH, this causes a put/reset/put timeout!

WIP: yakshaving for reset() of layout server & SMRMap test: reset doesn't hang put, but no visible reset either

WIP: yakshaving for reset() of layout server & SMRMap test: reset doesn't hang put yay!

WIP: yakshaving for reset(): damn, broken using *much* more reliable put/reset/get/put -> timeout

WIP: yakshaving for reset(): WHOA! sequencer reset() causes timeout of put/reset/get/put!

WIP: yakshaving for reset(): fix space leak caused by not unmap'ing files

WIP: yakshaving for reset(): where is this timeout, drat drat

Bugfix/TODO: if backpointer doesn't actually point backward, then {bogus response} and {return early}

DAMNDAMN important reboot() state fix

DAMNDAMN important reboot() state fix, part 2

Remove debugging spam

Fix Null pointer error in LogUnitServer constructor in junit testing

Work around inability to terminate Netty client worker thread pool

Workaround for intermittent 'Disconnected endpoint' NetworkException (doesn't work)

Try to fix a data race bug ... but I don't understand why it works.

Exercise by:

    proper:quickcheck(proper:numtests(10*1000,smrmap_qc:prop()), [noshrink]).

Update via git rebase: HAHAHA, no, the bug is still present in this
commit.

Old comment:

With the prior commit, this would almost certainly end up with a
failure.  With this commit, the bug is either fixed, *or* I've merely
reduced the race window size somewhat?

Try to fix a data race bug, part II.  Seems better.  Window closed?  Not sure...

Stop clobbering my tracing level

Fix think-o's in prop_parallel()

Add NOTE to start of prop_parallel() execution about ?ALWAYS()

Rename smrmap_qc.erl -> map_qc.erl; add FGMap support

Add workarounds for bugs #211 and #212

Add ?ELSE() macro to match PropEr's strict expectation of postcondtion() -> boolean() return value

Clean up cmdlet return String[] conventions

Move QuickCheck code to new QuickCheckMode.java

Final comment cruft cleanup",2016-08-18 00:36:59,Scott Lystig Fritchie,['src/test/java/org/corfudb/infrastructure/LayoutServerTest.java']
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,e4b114f21c2465c0b82ea36807f4c5ba4081fc87,49ea375d80c97a00bf3191ead77848e2cf20917f,https://github.com/CorfuDB/CorfuDB/commit/e4b114f21c2465c0b82ea36807f4c5ba4081fc87,"Squash of slf/eqc-layout-hack4 as of commit e942fac4

* Summary:

Squash of slf/eqc-layout-hack as of commit b83b97c1

Hrm, parallel test case where Proper doesn't find a good interleaving?

The code changes here are minor spammy things, to show exactly what's
happening with the command sequence filtering for the parallel test case.
The output confirms that the reset is being done only once, at the
beginning of the sequently cmd sequence.

This case has an interleaving that's pretty easy to spot by eye, but it's
causing Proper to find a failure.  The case fails, expecting ""Hello-world!""
and instead getting [].

This counterexample fails 100% consistently.  Hmmmmmmmmmmmmmmmmmm.

    (foo2@sfritchie-m01)43> proper:check(smrmap_eqc:prop_parallel(), C1).

     **** Keep original reset
    ****

    Cmds {[{init,{state,false,42,[],
                        [{cmdlet0,'corfu@sfritchie-m01'},
                         {cmdlet1,'corfu@sfritchie-m01'},
                         {cmdlet2,'corfu@sfritchie-m01'},
                         {cmdlet3,'corfu@sfritchie-m01'},
                         {cmdlet4,'corfu@sfritchie-m01'},
                         {cmdlet5,'corfu@sfritchie-m01'},
                         {cmdlet6,'corfu@sfritchie-m01'},
                         {cmdlet7,'corfu@sfritchie-m01'},
                         {cmdlet8,'corfu@sfritchie-m01'},
                         {cmdlet9,'corfu@sfritchie-m01'},
                         {cmdlet10,'corfu@sfritchie-m01'},
                         {cmdlet11,'corfu@sfritchie-m01'},
                         {cmdlet12,'corfu@sfritchie-m01'},
                         {cmdlet13,...},
                         {...}|...]}},
           {set,{var,1},
                {call,smrmap_eqc,reset,[{cmdlet4,'corfu@sfritchie-m01'},42]}},
           {set,{var,7},
                {call,smrmap_eqc,put,
                      [{cmdlet15,'corfu@sfritchie-m01'},42,""a"",[]]}}],
          [[{set,{var,3},
                 {call,smrmap_eqc,put,
                       [{cmdlet2,'corfu@sfritchie-m01'},42,""m"",""Another-value""]}},
            {set,{var,4},
                 {call,smrmap_eqc,put,
                       [{cmdlet9,'corfu@sfritchie-m01'},42,""a"",""Hello-world!""]}}],
           [{set,{var,3},
                 {call,smrmap_eqc,get,
                       [{cmdlet5,'corfu@sfritchie-m01'},42,""a""]}}]]}
    3,[2,1]Failed: The input fails the test.
    An exception was raised: error:{case_clause,{key,[97],expected,[72,101,108,108,111,45,119,111,114,108,100,33],got,[]}}.
    Stacktrace: [{proper_statem,check,6,
                                [{file,""src/proper_statem.erl""},{line,683}]},
                 {proper_statem,check,6,
                                [{file,""src/proper_statem.erl""},{line,688}]},
                 {proper_statem,run_parallel_commands,3,
                                [{file,""src/proper_statem.erl""},{line,619}]},
                 {timer,tc,1,[{file,""timer.erl""},{line,166}]},
                 {smrmap_eqc,'-prop_parallel/2-fun-6-',2,
                             [{file,""smrmap_eqc.erl""},{line,304}]},
                 {proper,apply_args,3,[{file,""src/proper.erl""},{line,1353}]},
                 {proper,retry,3,[{file,""src/proper.erl""},{line,1040}]},
                 {erl_eval,do_apply,6,[{file,""erl_eval.erl""},{line,674}]}].
    false

Put limits on parallel_commands() use {sigh}. Avoid using reset().

parallel_commands() length limit to 6, remove some spammy msgs

WIP: start layout_eqc.erl

WIP: reset/shutdown refactoring

WIP: stop/start/reset getting closer

WIP: stop/start/reset getting closer

Layout server reset() yakshaving done, I think

Add unit test for LayoutServer.reset()

Split reset() and reboot()

EQC: reboot, reset, query, prepare.  First bug found but NOT a bug, yay!

So, the description that appears below describes a bug found when the
server is running in memory mode.  Silly me, this test assumes that the
server is running in persistent mode.

* On reboot() when in persistent mode, all layout + phase 1 + phase 2
  info should be remembered.

* On reboot when in memory mode, all that stuff should be forgotten.

Heh.

--- snip --- snip --- snip ---

So, state is getting lost in layout server reboot, oops.

    (foo@sbb5)16> eqc:current_counterexample().
    [[{init,{state,false,""sbb5:8000"",
                   [cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,
                    cmdlet7,cmdlet8,cmdlet9],
                   0}},
      {set,{var,1},
           {call,layout_eqc,reset,
                 [{cmdlet4,'corfu-8000@sbb5'},""sbb5:8000""]}},
      {set,{var,2},
           {call,layout_eqc,prepare,
                 [{cmdlet9,'corfu-8000@sbb5'},""sbb5:8000"",1]}},
      {set,{var,3},
           {call,layout_eqc,reboot,
                 [{cmdlet0,'corfu-8000@sbb5'},""sbb5:8000""]}},
      {set,{var,4},
           {call,layout_eqc,prepare,
                 [{cmdlet3,'corfu-8000@sbb5'},""sbb5:8000"",1]}}]]

... has the last step:

            .... history truncated ....
	    {set,{var,4},
		 {call,layout_eqc,prepare,
		       [{cmdlet3,'corfu-8000@sbb5'},
			""sbb5:8000"",1]}},
	    [],
	    {normal,[""OK""]}}]
    S: {state,true,[115,98,98,53,58,56,48,48,48],[cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,cmdlet7,cmdlet8,cmdlet9],1}
    R: {postcondition,false}

Add bogus command 'resetAMNESIA' to demonstrate that the model is working

resetAMNESIA() just calls reset(), which throws away server state and
causes amnesia and which this model is currently NOT modeling.
Therefore, we ought to discover an amnesia failing test case quickly,
and we do.

    (foo@sbb5)54> eqc:current_counterexample().
    [[{init,{state,false,""sbb5:8000"",
                   [cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,
                    cmdlet7,cmdlet8,cmdlet9],
                   0}},
      {set,{var,1},
           {call,layout_eqc,reset,
                 [{cmdlet4,'corfu-8000@sbb5'},""sbb5:8000""]}},
      {set,{var,2},
           {call,layout_eqc,prepare,
                 [{cmdlet4,'corfu-8000@sbb5'},""sbb5:8000"",1]}},
      {set,{var,3},
           {call,layout_eqc,resetFOO,
                 [{cmdlet6,'corfu-8000@sbb5'},""sbb5:8000""]}},
      {set,{var,4},
           {call,layout_eqc,prepare,
                 [{cmdlet5,'corfu-8000@sbb5'},""sbb5:8000"",1]}}]]

... and ...

        {eqc_statem_history,{state,true,""sbb5:8000"",
                                   [cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,
                                    cmdlet5,cmdlet6,cmdlet7,cmdlet8,cmdlet9],
                                   1},
                            {set,{var,4},
                                 {call,layout_eqc,prepare,
                                       [{cmdlet5,'corfu-8000@sbb5'},
                                        ""sbb5:8000"",1]}},
                            [],
                            {normal,[""OK""]}}]
    S:
{state,true,[115,98,98,53,58,56,48,48,48],[cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,cmdlet7,cmdlet8,cmdlet9],1}
    R: {postcondition,false}

Remove resetAMNESIA command, hooray no failures.

    eqc:quickcheck(eqc:numtests(1000, layout_eqc:prop())).
    [....]
    OK, passed 1000 tests

    42.43% {layout_eqc,query,2}
    41.74% {layout_eqc,prepare,3}
    10.12% {layout_eqc,reboot,2}
     5.70% {layout_eqc,reset,2}

    41.9% 0
    26.7% 1
    14.3% 2
     6.8% 3
     4.0% 4
     2.7% 5
     1.7% 6
     0.9% 7
     0.4% 8
     0.2% 10
     0.1% 18
     0.1% 17
     0.1% 12
     0.1% 9
    true

Add parallel_commands(), though not compatible with PropEr, sorry

With parallel_commands(), we see a concurrency race/bug with reboot vs.  prepare

Excellent, this exposes a bug in the reboot code, where a prepare
op running concurrently exposes a NoBootstrapException, which should
not be visible.

Approximately 4 times out of 100, this case below fails on my MacBook.
Its nondeterminism has confused QC's shrinking, so the test case is
larger than it really needs to be.  After some sequential commands, the
parallel stuff is:

    Parallel:

    1. layout_eqc:prepare({cmdlet7, 'corfu-8000@sbb5'}, ""sbb5:8000"", 10) ->
      [""ERROR"", ""Exception during prepare {}\n"",
       ""org.corfudb.runtime.exceptions.NoBootstrapException: Layout server not bootstrapped!""]
    2. layout_eqc:reboot({cmdlet0, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
       layout_eqc:query({cmdlet3, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK"", ""{... JSON stuff omitted...}""]
       layout_eqc:reboot({cmdlet3, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]

    Reason: no_possible_interleaving

Steps:

    C1 = [1,{[{init,{state,false,[115,98,98,53,58,56,48,48,48],[cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,cmdlet7,cmdlet8,cmdlet9],0}},{set,{var,1},{call,layout_eqc,reset,[{cmdlet4,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}},{set,{var,2},{call,layout_eqc,prepare,[{cmdlet1,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],7]}},{set,{var,3},{call,layout_eqc,reboot,[{cmdlet9,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}},{set,{var,4},{call,layout_eqc,prepare,[{cmdlet0,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],2]}},{set,{var,5},{call,layout_eqc,query,[{cmdlet4,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}},{set,{var,6},{call,layout_eqc,query,[{cmdlet0,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}},{set,{var,7},{call,layout_eqc,reboot,[{cmdlet0,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}},{set,{var,8},{call,layout_eqc,query,[{cmdlet2,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}}],[[{set,{var,9},{call,layout_eqc,prepare,[{cmdlet7,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],10]}}],[{set,{var,10},{call,layout_eqc,reboot,[{cmdlet0,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}},{set,{var,11},{call,layout_eqc,query,[{cmdlet3,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}},{set,{var,12},{call,layout_eqc,reboot,[{cmdlet3,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}}]]}].
    [eqc:check(eqc:numtests(100, layout_eqc:prop_parallel()), C1) || _ <- lists:seq(1,100)].

Excellent: rearrange synchronized use to reduce failure rate: 4% -> 0%

Add naive propose to EQC, finds basic bug (I think)

If we use:

    eqc:quickcheck(eqc:numtests(100, layout_eqc:prop())).

... we very quickly find something that shrinks down to:

     {set,{var,1},
          {call,layout_eqc,reset,[{cmdlet8,'corfu-8000@sbb5'},""sbb5:8000""]}},
     {set,{var,2},
          {call,layout_eqc,propose,
                [{cmdlet9,'corfu-8000@sbb5'},
                 ""sbb5:8000"",1,
                 ""... JSON omitted....

The return value from command #2 is [""OK""].  There was no prepare with
any rank.  This seems to me to be a bug, but it's been a while since
I've read Medhavi's and Dahlia's correspondence on how Things Ought To
Work(tm).

WIP: temp work-around propose bug/weirdness

WIP: LayoutServer.java transplant, part I

WIP: compiles w/o error. Now to redo reset() and reboot() for LayoutServer

Fix layout server reset(). Unit tests pass. layout_eqc is broken.

Fix model error for 2x propose @ same rank

Bugfix for propose w/o prepare (null pointer exception)

Ooops, cmdlet usage problem: server wants layout in commit msg, but cmdlet permits rank only

Fix cmdlet usage for 'corfu_layout committed'

WIP: commit check not correct yet....

Compensate for epoch # missing inside of commit message

WIP: fighting epoch changes, on the client side this time {sigh}

Fix bug with CorfuMsg epoch # in cmdlet use

Model fix. Bug fix for returning NACK from layout commit

Change back to pretty_commands() for now

Change gen_layout() from JSON -> more terse Erlang record

Scrape the rank value out of OutrankedException. Bug found?

Also, change the namges of internal vars for rank tracking.
Old names were daft.

Bug?  Using the same rank twice is bad?

    layout_eqc:reset({cmdlet9, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
    layout_eqc:commit({cmdlet2, 'corfu-8000@sbb5'}, ""sbb5:8000"", 64,
        #layout{ epoch = 1, ls = [], ss = [], segs = []}) ->
      [""OK""]
    layout_eqc:prepare({cmdlet3, 'corfu-8000@sbb5'}, ""sbb5:8000"", 1) -> [""OK""]
    layout_eqc:reboot({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
    layout_eqc:prepare({cmdlet9, 'corfu-8000@sbb5'}, ""sbb5:8000"", 1) -> [""OK""]

    Reason:
      Post-condition failed:
      false

Fix model bug: don't reset prepared rank to -1, derp.

    layout_eqc:reset({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
    layout_eqc:prepare({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"", 94) -> [""OK""]
    layout_eqc:propose({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"", 94,
        #layout{ epoch = 1, ls = [], ss = [], segs = []}) -> [""OK""]
    layout_eqc:commit({cmdlet0, 'corfu-8000@sbb5'}, ""sbb5:8000"", 94,
        #layout{ epoch = 1, ls = [], ss = [], segs = []}) -> [""OK""]
    layout_eqc:reboot({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
    layout_eqc:propose({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"", -1,
        #layout{ epoch = 1, ls = [], ss = [], segs = []}) ->
      [""ERROR"", ""Exception during propose {}\n"",
       ""org.corfudb.runtime.exceptions.OutrankedException: Higher rank
94 encountered"",

%% After chatting with Dahlia, the model should separate
%% rank checking from epoch checking.  In theory, the
%% implementation could reset rank state after a new
%% layout with bigger epoch has been committed.  The
%% current implementation does not reset the rank state;
%% that may change, pending more changes in PR #210 and
%% perhaps elsewhere.

Also, ...

        // SLF TODO: add a first-class command to the EQC model to tell the
        // client to update the client router's epoch?  Dahlia think that that'll
        // be necessary sometime soon.  Hm.

Bugfix for #169: include new layout in OutrankedException

Model fix: don't allow multiple propose @ same rank

WIP: Fix more model problems

Bugfix: reset rank & proposed layout on commit

Model fix: check epoch upon commit & ignore rank

Add PropEr/QuickCheck compat func check_result()

Fix persistence bug in reboot()

WIP: less spam

Bugfix: do not allow 2x commit at same epoch

Counterexample (fixed by this patch):

    layout_eqc:reset({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
    layout_eqc:commit({cmdlet5, 'corfu-8000@sbb5'}, ""sbb5:8000"", 37,
        #layout{ epoch = 1, ls = [], ss = [], segs = []}) ->
      [""OK""]
    layout_eqc:commit({cmdlet3, 'corfu-8000@sbb5'}, ""sbb5:8000"", 37,
        #layout{ epoch = 1, ls = [], ss = [], segs = []}) ->
      [""OK""]

    Reason:
      Post-condition failed:
      false

WIP: less spam

Validate query() result.  'OK, passed 500 tests', hooray!

PropEr:

    OK: Passed 500 test(s).

    25% {layout_eqc,propose,4}
    24% {layout_eqc,prepare,3}
    24% {layout_eqc,query,2}
    10% {layout_eqc,commit,4}
    8% {layout_eqc,reset,2}
    5% {layout_eqc,reboot,2}

    54% 0
    25% 1
    14% 2
    5% 3
    0% 4
    true

QuickCheck:

    (foo@sbb5)249> eqc:quickcheck(eqc:numtests(500, layout_eqc:prop())).
    OK, passed 500 tests

    25.74% {layout_eqc,query,2}
    25.12% {layout_eqc,prepare,3}
    24.08% {layout_eqc,propose,4}
    11.65% {layout_eqc,commit,4}
     6.70% {layout_eqc,reset,2}
     6.70% {layout_eqc,reboot,2}

Clean up prop_parallel() handling

Move gen_epoch() back to something more sane

Add ?ALWAYS() to prop_parallel() to help shrinking during non-deterministic races

For example, here's a race that needs fixing.

    Sequential prefix:

       layout_eqc:reset({cmdlet0, 'corfu-8000@sbb5'}, ""sbb5:8000"") ->
[""OK""]

    Parallel:

    1. layout_eqc:commit({cmdlet2, 'corfu-8000@sbb5'}, ""sbb5:8000"", -1,
        #layout{ epoch = 22, ls = [], ss = [], segs = []}) ->
      [""OK""]
    2. layout_eqc:propose({cmdlet5, 'corfu-8000@sbb5'}, ""sbb5:8000"", -1,
        #layout{ epoch = 5, ls = [], ss = [], segs = []}) ->
      [""ERROR"", ""Exception during propose"",
       ""org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch.
       [expected=22]"",..........

WIP: prop_parallel() model fixing

Fix model bug: if wrongEpochException, check it against model's committed_epoch

Fix model handling of WrongEpochException during commit

Fix model handling of WrongEpochException during prepare

WIP: sanity try/catch wrapper around postcondition()

Fix model bug: race where epoch changes quickly enough to interfere with propose

WIP: fix model problem with wrong epochs by making client epoch # explicit in all commands

WIP: Fix more model problems

Fix typo in exception reporting.  Concurrency bug remaining is *icky*.

I'm stopping for the night.  This one seems pretty strange: The
*same* counter-example fails in *two* different ways, which is pretty
cool in a heartless kind of way..

    C2 = [{[{init,{state,false,[115,98,98,53,58,56,48,48,48],[cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,cmdlet7,cmdlet8,cmdlet9],-1,[],[],0}},{set,{var,1},{call,layout_eqc,reset,[{cmdlet5,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}}],[[{set,{var,2},{call,layout_eqc,prepare,[{cmdlet6,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],25,1]}},{set,{var,3},{call,layout_eqc,prepare,[{cmdlet8,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],25,1]}}],[{set,{var,4},{call,layout_eqc,commit,[{cmdlet0,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],0,35,{layout,25,[],[],[]}]}},{set,{var,5},{call,layout_eqc,prepare,[{cmdlet7,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],25,2]}}]]}].

Failure mode number 1: all parallel commands succeed.  However, the second
prepare, {var,3}'s command, should fail (same rank = 1).

    Sequential prefix:

       layout_eqc:reset({cmdlet5, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]

    Parallel:

    1. layout_eqc:prepare({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"", 25, 1) -> [""OK""]
       layout_eqc:prepare({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"", 25, 1) -> [""OK""]
    2. layout_eqc:commit({cmdlet0, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 35,
        #layout{ epoch = 25, ls = [], ss = [], segs = []}) ->
      [""OK""]
       layout_eqc:prepare({cmdlet7, 'corfu-8000@sbb5'}, ""sbb5:8000"", 25, 2) -> [""OK""]

    Reason: no_possible_interleaving
    false

Here's the second failure mode: all parallel commands fail.  All of
the exceptions report that the server's epoch is still 0 (the default).
If the server's epoch is 0, then (at least) the commit at command {var,4}
should succeed.

    Sequential prefix:

       layout_eqc:reset({cmdlet5, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]

    Parallel:

    1. layout_eqc:prepare({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"", 25, 1) ->
      [""ERROR"", ""Exception during prepare"",
       ""org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]"",
       ""correctEpoch: 0"",
       ""stack: java.util.concurrent.ExecutionException: org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]\n\tat java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357).............
       layout_eqc:prepare({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"", 25, 1) ->
         [""ERROR"", ""Exception during prepare"",
          ""org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]"",
          ""correctEpoch: 0"",
          ""stack: java.util.concurrent.ExecutionException: org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]\n\tat java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)..................
    2. layout_eqc:commit({cmdlet0, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 35,
        #layout{ epoch = 25, ls = [], ss = [], segs = []}) ->
      [""ERROR"", ""Exception during commit"",
       ""org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]"",
       ""correctEpoch: 0"",
       ""stack: java.util.concurrent.ExecutionException: org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]\n\tat java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)............
       layout_eqc:prepare({cmdlet7, 'corfu-8000@sbb5'}, ""sbb5:8000"", 25, 2) ->
         [""ERROR"", ""Exception during prepare"",
          ""org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]"",
          ""correctEpoch: 0"",
          ""stack: java.util.concurrent.ExecutionException: org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=0]\n\tat java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)\n\t............

    Reason: no_possible_interleaving
    false

public -> private, add synchronised.  Still buggy, see previous commit. Can I have Erlang back now?

Implementation fix: CorfuMsg's epoch=0 is OK, but negative is bad

WIP: chasing a concurrency bug

    (foo@sbb5)186> io:format(""C6 = ~w.\n"", [eqc:current_counterexample()]).
    C6 = [{[{init,{state,false,[115,98,98,53,58,56,48,48,48],[cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,cmdlet7,cmdlet8,cmdlet9],-1,[],[],0}},{set,{var,1},{call,layout_eqc,reset,[{cmdlet0,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48]]}}],[[{set,{var,2},{call,layout_eqc,prepare,[{cmdlet2,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],22,1]}},{set,{var,3},{call,layout_eqc,prepare,[{cmdlet6,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],22,1]}}],[{set,{var,4},{call,layout_eqc,commit,[{cmdlet8,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],0,1,{layout,22,[],[],[]}]}},{set,{var,5},{call,layout_eqc,query,[{cmdlet3,'corfu-8000@sbb5'},[115,98,98,53,58,56,48,48,48],22]}}]]}].
    eqc:check(eqc:numtests(5*10, layout_eqc:prop_parallel()), C6).

This fails in two different ways.  The one I'm chasing right now is the
one below; the 2nd prepare() should be failing (both prepare() calls use
rank=1 inside of epoch 22).

    Sequential prefix:

       layout_eqc:reset({cmdlet0, 'corfu-8000@sbb5'}, ""sbb5:8000"") ->
[""OK""]

    Parallel:

    1. layout_eqc:prepare({cmdlet2, 'corfu-8000@sbb5'}, ""sbb5:8000"", 22, 1) -> [""OK""]
       layout_eqc:prepare({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"", 22, 1) -> [""OK""]
    2. layout_eqc:commit({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 1,
        #layout{ epoch = 22, ls = [], ss = [], segs = []}) ->
      [""OK""]
       layout_eqc:query({cmdlet3, 'corfu-8000@sbb5'}, ""sbb5:8000"", 22) ->
         [""OK"",
          ""{\n  \""layoutServers\"": [],\n  \""sequencers\"": [],\n \""segments\"": [],\n  \""epoch\"": 22\n}""]

    Reason: no_possible_interleaving
    false

All of the System.out.print* goop that I've added suggests that the
first prepare is writing using epoch 0:

    DS: write /tmp/corfu-test-dir/PHASE_1_0RANK

... but the second prepare is using epoch 22:

    DS: write /tmp/corfu-test-dir/PHASE_1_22RANK

Full console output:

    Layout server reset

    DS: write /tmp/corfu-test-dir/LAYOUT_CURRENT
    DS: cache put LAYOUT_CURRENT
    DS: write /tmp/corfu-test-dir/LAYOUTS_0
    DS: cache put LAYOUTS_0
    DS: read /tmp/corfu-test-dir/LAYOUT_CURRENT
    DS: cache get LAYOUT_CURRENT
    DS: cache get LAYOUT_CURRENT
    DS: write /tmp/corfu-test-dir/SERVER_EPOCH_CURRENT
    DS: cache put SERVER_EPOCH_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get LAYOUT_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: notExists read /tmp/corfu-test-dir/PHASE_1_0RANK
    DS: cache get PHASE_1_0RANK
    DS: cache get SERVER_EPOCH_CURRENT
    DS: notExists read /tmp/corfu-test-dir/PHASE_2_0DATA
    DS: cache get PHASE_2_0DATA
    New phase 1 rank=Rank(rank=1, clientId=0f04f13d-ae16-4e50-97cd-215461bf06df) A
    DS: cache get SERVER_EPOCH_CURRENT
    DS: write /tmp/corfu-test-dir/PHASE_1_0RANK
    DS: cache put PHASE_1_0RANK
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get PHASE_1_0RANK
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get PHASE_1_0RANK
    New phase 1 rank=Rank(rank=1, clientId=0f04f13d-ae16-4e50-97cd-215461bf06df) B
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get LAYOUT_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: delete /tmp/corfu-test-dir/PHASE_1_0RANK
    DS: cache delete PHASE_1_0RANK
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache delete PHASE_2_0DATA
    DS: write /tmp/corfu-test-dir/LAYOUT_CURRENT
    DS: cache put LAYOUT_CURRENT
    DS: write /tmp/corfu-test-dir/LAYOUTS_22
    DS: cache put LAYOUTS_22
    DS: write /tmp/corfu-test-dir/SERVER_EPOCH_CURRENT
    DS: cache put SERVER_EPOCH_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get LAYOUT_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT
    DS: notExists read /tmp/corfu-test-dir/PHASE_1_22RANK
    DS: cache get PHASE_1_22RANK
    DS: cache get SERVER_EPOCH_CURRENT
    DS: notExists read /tmp/corfu-test-dir/PHASE_2_22DATA
    DS: cache get PHASE_2_22DATA
    New phase 1 rank=Rank(rank=1, clientId=0f04f13d-ae16-4e50-97cd-215461bf06df) A
    DS: cache get SERVER_EPOCH_CURRENT
    DS: write /tmp/corfu-test-dir/PHASE_1_22RANK
    DS: cache put PHASE_1_22RANK
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get PHASE_1_22RANK
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get PHASE_1_22RANK
    New phase 1 rank=Rank(rank=1, clientId=0f04f13d-ae16-4e50-97cd-215461bf06df) B
    DS: cache get SERVER_EPOCH_CURRENT
    DS: cache get LAYOUT_CURRENT
    DS: cache get LAYOUT_CURRENT
    DS: cache get SERVER_EPOCH_CURRENT

WIP: chasing a concurrency bug (cont)

Very interesting, the client epoch value isn't being propagated from
client side to server side correctly?

    % egrep -i 'reset|write|delete|incom|validate|--epoch' ~/foo
    Layout server reset
    DS: write /tmp/corfu-test-dir/LAYOUT_CURRENT
    DS: write /tmp/corfu-test-dir/LAYOUTS_0
    DS: write /tmp/corfu-test-dir/SERVER_EPOCH_CURRENT
    corfu_layout: --epoch 22 opts {--log-level=INFO, prepare=true, committed=false, --rank=1, query=false, bootstrap=false, <address>:<port>=sbb5:8000, --single=false, propose=false, --layout-file=null, --epoch=22}
    corfu_layout: --epoch 0 opts {--log-level=INFO, prepare=false, committed=true, --rank=1, query=false, bootstrap=false, <address>:<port>=sbb5:8000, --single=false, propose=false, --layout-file=/tmp/layout.{1471,288155,852181}, --epoch=0}
    validateEpoch: msgtype LAYOUT_PREPARE ignoreEpoch false msgEpoch 0 serverEpoch 0
    [...]

On the client side, the ""--epoch 22"" option is there.  But on the server
side in NettyServerRouter's validateEpoch(), the epoch is 0.  Grr.

Fix model client-side concurrency bugs

* Use ConcurrentHashMap for routers
* Use routers.putIfAbsent, then re-get
* Add new flag ""-p/--quickcheck-ap-prefix"" to avoid false sharing of
  client-side router.

Remove debug spam

Fix model bug: don't check client epoch # for query

The counter-example found by EQC prior to this patch:

    Sequential prefix:

       layout_eqc:reset({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
       layout_eqc:commit({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 100,
           #layout{ epoch = 5, ls = [], ss = [], segs = []}) ->
         [""OK""]
       layout_eqc:query({cmdlet3, 'corfu-8000@sbb5'}, ""sbb5:8000"", 22) ->
         [""OK"",
          ""{\n  \""layoutServers\"": [],\n  \""sequencers\"": [],\n  \""segments\"": [],\n  \""epoch\"": 5\n}""]

    Reason:
      Post-condition failed:
      false

The committed epoch was 5, then a query sent in epoch 22.  The model
was incorrectly expecting the server to send a badepoch reply.

WIP: add spam to debug another concurrency bug

    (foo@sbb5)567> C8.
    [{[{init,{state,false,""sbb5:8000"",
                    [cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,
                     cmdlet7,cmdlet8,cmdlet9],
                    -1,[],[],0}},
       {set,{var,1},
            {call,layout_eqc,reset,
                  [{cmdlet5,'corfu-8000@sbb5'},""sbb5:8000""]}}],
      [[{set,{var,2},
             {call,layout_eqc,propose,
                   [{cmdlet2,'corfu-8000@sbb5'},
                    ""sbb5:8000"",0,21,
                    {layout,1,[],[],[]}]}},
        {set,{var,3},
             {call,layout_eqc,prepare,
                   [{cmdlet8,'corfu-8000@sbb5'},""sbb5:8000"",0,1]}},
        {set,{var,4},
             {call,layout_eqc,prepare,
                   [{cmdlet7,'corfu-8000@sbb5'},""sbb5:8000"",27,1]}}],
       [{set,{var,5},
             {call,layout_eqc,prepare,
                   [{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",0,1]}},
        {set,{var,6},
             {call,layout_eqc,commit,
                   [{cmdlet3,'corfu-8000@sbb5'},
                    ""sbb5:8000"",0,76,
                    {layout,27,[],[],[]}]}}]]}]

The EQC execution side is below.  There are 3 prepare ops.  According to
the client side, two of them fail with exceptions.  However, according
to the server side (see further below), only *one* prepare fails.

    Sequential prefix:

       layout_eqc:reset({cmdlet5, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]

    Parallel:

    1. layout_eqc:propose({cmdlet2, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 21,
        #layout{ epoch = 1, ls = [], ss = [], segs = []}) ->
      [""ERROR"", ""Exception during propose"",
       ""org.corfudb.runtime.exceptions.OutrankedException: Higher rank 1 encountered, layout = null"",
       ""newRank: 1"",
       ""stack: java.util.concurrent.ExecutionException: org.corfudb.runtime.exceptions.OutrankedException: Higher rank 1 encountered, layout = null\n\tat ...
       layout_eqc:prepare({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 1) ->
         [""ERROR"", ""Exception during prepare"",
          ""org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch. [expected=27]"",
          ""correctEpoch: 27"",
          ""stack: java.util.concurrent.ExecutionException: org.corfudb.runtime.exceptions.WrongEpochException: Wrong epoch.  [expected=27]\n\tat ...
       layout_eqc:prepare({cmdlet7, 'corfu-8000@sbb5'}, ""sbb5:8000"", 27, 1) ->
         [""ERROR"", ""Exception during prepare"",
          ""org.corfudb.runtime.exceptions.OutrankedException: Higher rank 1 encountered, layout = null"",
          ""newRank: 1"", ""layout: ""]
    2. layout_eqc:prepare({cmdlet1, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 1) -> [""OK""]
       layout_eqc:commit({cmdlet3, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 76,
           #layout{ epoch = 27, ls = [], ss = [], segs = []}) ->
         [""OK""]

    Reason: no_possible_interleaving

Server side spam output:

    corfu_layout top: reset
    New phase 1 rank=Rank(rank=1, clientId=e71b0f49-92ef-44c7-8e60-d46f4c6268af)
    Rejected phase 2 B propose of rank=Rank(rank=21, clientId=539507fb-6caa-4873-9554-8c60815b931f), phase1Rank=Rank(rank=1, clientId=e71b0f49-92ef-44c7-8e60-d46f4c6268af)
    New phase 1 rank=Rank(rank=1, clientId=bb75352e-0713-4839-9834-0d726eaeb88e)
    Rejected phase 1 prepare of rank=Rank(rank=1, clientId=d2f78485-99ec-431a-af62-54a086aaf01b), phase1Rank=Rank(rank=1, clientId=bb75352e-0713-4839-9834-0d726eaeb88e)

WIP: add spam

Fix real concurrency bug, yay!

See commit 4770d10c0f9b71e28e5808e5e168ac2170bec9f9 for EQC
counterexample details.

The problem is that NettyServerRouter's single check for an incoming
client's epoch # is outside of LayoutServer's 'synchronized' scheme.
So it's possible for a layout command such as prepare() to succeed
on the client side but send a reply with a new epoch number (due to
concurrent handling of a layout commit()).  When the client receives the
reply, the client side throws a bad epoch exception ... and then the
QuickCheck model believes that the operation failed when in fact the
server believes the op succeeded.

We also change NettyServerRouter's sendResponse() method to always send
a reply with the same epoch as the request.  If the new sanity check
fails, we log a warning level error and then exit the entire server to
express our displeasure.

Strengthen epoch checking in the model

Fix exception reporting problem: badepoch when expected epoch = client epoch

Avoid races in multiple calls to getServerEpoch() when executing
NettyServerRouter's validateEpoch().

Change ?ALWAYS from 25 -> 100 iterations {sigh}

WIP: EQC always is working, Proper is broken

Punt on trying ?ALWAYS behavior for Proper, sorry

Proper & EQC mixing: nearly there!

NOTE: I've introduced a bug into query() to check for proper
      model checking & shrinking!

Oi oi oi, it would be really nice if Proper implemented ?ALWAYS().
So, I'm trying to fake it.

EQC sequential: works
EQC parallel: doesn't work, damn!  EQC bug?
Proper sequential: works
Proper parallel: works

Here's the exception from the EQC bug (?).  The bug does
not always manifest when a counterexample is found ... hm, it
looks like the problem might lie within pretty_commands()??
Note that the sequential prefix is about 23 commands long,
but the exception happens well before pretty-printing has
reached the end of the sequential prefix.

    (foo@sbb5)807> eqc:quickcheck(eqc:testing_time(30*60, layout_eqc:prop_parallel())).
    RFailed! After 1 tests.
    {[{init,{state,false,""sbb5:8000"",
                   [cmdlet0,cmdlet1,cmdlet2,cmdlet3,cmdlet4,cmdlet5,cmdlet6,
                    cmdlet7,cmdlet8,cmdlet9],
                   -1,[],[],0}},
      {set,{var,1},
           {call,layout_eqc,reset,[{cmdlet2,'corfu-8000@sbb5'},""sbb5:8000""]}},
      {set,{var,2},
           {call,layout_eqc,prepare,
                 [{cmdlet8,'corfu-8000@sbb5'},""sbb5:8000"",0,3]}},
      {set,{var,3},
           {call,layout_eqc,prepare,
                 [{cmdlet2,'corfu-8000@sbb5'},""sbb5:8000"",0,82]}},
      {set,{var,4},
           {call,layout_eqc,prepare,
                 [{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",0,50]}},
      {set,{var,5},
           {call,layout_eqc,propose,
                 [{cmdlet4,'corfu-8000@sbb5'},
                  ""sbb5:8000"",0,82,
                  {layout,38,[],[],[]}]}},
      {set,{var,6},
           {call,layout_eqc,commit,
                 [{cmdlet5,'corfu-8000@sbb5'},
                  ""sbb5:8000"",0,82,
                  {layout,38,[],[],[]}]}},
      {set,{var,7},
           {call,layout_eqc,query,[{cmdlet6,'corfu-8000@sbb5'},""sbb5:8000"",38]}},
      {set,{var,8},
           {call,layout_eqc,prepare,
                 [{cmdlet4,'corfu-8000@sbb5'},""sbb5:8000"",38,70]}},
      {set,{var,9},
           {call,layout_eqc,propose,
                 [{cmdlet0,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,70,
                  {layout,25,[],[],[]}]}},
      {set,{var,10},
           {call,layout_eqc,commit,
                 [{cmdlet7,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,70,
                  {layout,25,[],[],[]}]}},
      {set,{var,11},
           {call,layout_eqc,propose,
                 [{cmdlet1,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,70,
                  {layout,22,[],[],[]}]}},
      {set,{var,12},
           {call,layout_eqc,query,[{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",38]}},
      {set,{var,13},
           {call,layout_eqc,propose,
                 [{cmdlet7,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,70,
                  {layout,64,[],[],[]}]}},
      {set,{var,14},
           {call,layout_eqc,query,[{cmdlet8,'corfu-8000@sbb5'},""sbb5:8000"",38]}},
      {set,{var,15},
           {call,layout_eqc,query,[{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",38]}},
      {set,{var,16},
           {call,layout_eqc,prepare,
                 [{cmdlet3,'corfu-8000@sbb5'},""sbb5:8000"",38,76]}},
      {set,{var,17},
           {call,layout_eqc,reboot,[{cmdlet5,'corfu-8000@sbb5'},""sbb5:8000""]}},
      {set,{var,18},
           {call,layout_eqc,prepare,
                 [{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",38,7]}},
      {set,{var,19},
           {call,layout_eqc,prepare,
                 [{cmdlet8,'corfu-8000@sbb5'},""sbb5:8000"",38,47]}},
      {set,{var,20},
           {call,layout_eqc,propose,
                 [{cmdlet5,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,76,
                  {layout,77,[],[],[]}]}},
      {set,{var,21},
           {call,layout_eqc,propose,
                 [{cmdlet3,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,76,
                  {layout,5,[],[],[]}]}},
      {set,{var,22},
           {call,layout_eqc,commit,
                 [{cmdlet7,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,76,
                  {layout,5,[],[],[]}]}},
      {set,{var,23},
           {call,layout_eqc,commit,
                 [{cmdlet9,'corfu-8000@sbb5'},
                  ""sbb5:8000"",38,76,
                  {layout,5,[],[],[]}]}}],
     [[{set,{var,24},
            {call,layout_eqc,commit,
                  [{cmdlet8,'corfu-8000@sbb5'},
                   ""sbb5:8000"",38,76,
                   {layout,5,[],[],[]}]}},
       {set,{var,25},
            {call,layout_eqc,commit,
                  [{cmdlet6,'corfu-8000@sbb5'},
                   ""sbb5:8000"",38,76,
                   {layout,40,[],[],[]}]}}],
      [{set,{var,26},
            {call,layout_eqc,propose,
                  [{cmdlet7,'corfu-8000@sbb5'},
                   ""sbb5:8000"",38,76,
                   {layout,40,[],[],[]}]}},
       {set,{var,27},
            {call,layout_eqc,query,
                  [{cmdlet3,'corfu-8000@sbb5'},""sbb5:8000"",40]}}]]}

    Sequential prefix:

       layout_eqc:reset({cmdlet2, 'corfu-8000@sbb5'}, ""sbb5:8000"") -> [""OK""]
       layout_eqc:prepare({cmdlet8, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 3) -> [""OK""]
       layout_eqc:prepare({cmdlet2, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 82) -> [""OK""]
       layout_eqc:prepare({cmdlet1, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 50) ->
         [""ERROR"", ""Exception during prepare"",
          ""org.corfudb.runtime.exceptions.OutrankedException: Higher rank 82 encountered, layout = null"",
          ""newRank: 82"", ""layout: ""]
       layout_eqc:propose({cmdlet4, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 82,
           #layout{ epoch = 38, ls = [], ss = [], segs = []}) ->
         [""OK""]
       layout_eqc:commit({cmdlet5, 'corfu-8000@sbb5'}, ""sbb5:8000"", 0, 82,
           #layout{ epoch = 38, ls = [], ss = [], segs = []}) ->
         [""OK""]
       layout_eqc:query({cmdlet6, 'corfu-8000@sbb5'}, ""sbb5:8000"", 38) ->
         [""OK"",
          ""{\n  \""layoutServers\"": [],\n  \""sequencers\"": [],\n  \""segments\"": [],\n  \""epoch\"": 38\n}""]
    ** exception exit: {function_clause,
                        [{eqc_statem,f32767023_0,
                          [{result,false,true,false,
                            {time,1800000},
                            false,1,true,
                            [{cmds_length,{measurements,1,0,0,0,0.0}}],
                            [{#Fun<eqc.81.114729844>,
                              [{{layout_eqc,commit,5},6},
                               {{layout_eqc,prepare,4},7},
                               {{layout_eqc,propose,5},7},
                               {{layout_eqc,query,3},5},
                               {{layout_eqc,reboot,2},1},
                               {{layout_eqc,reset,...},1}]}],
                            #Fun<eqc.129.114729844>,
                            [{[{init,
                                {state,false,""sbb5:8000"",[cmdlet0|...],-1,...}},
                               {set,{var,1},{call,layout_eqc,reset,...}},
                               {set,{var,2},{call,layout_eqc,...}},
                               {set,{var,3},{call,...}},
                               {set,{var,...},{...}},
                               {set,{...},...},
                               {set,...},
                               {...}|...],
                              [[{set,{var,24},{call,layout_eqc,...}},
                                {set,{var,25},{call,...}}],
                               [{set,{var,26},{call,...}},
                                {set,{var,...},{...}}]]}],
                            [],undefined,undefined},
                           [{set,
                             {var,8},
                             {call,layout_eqc,prepare,
                              [{cmdlet4,'corfu-8000@sbb5'},""sbb5:8000"",38,70]}},
                            {set,
                             {var,9},
                             {call,layout_eqc,propose,
                              [{cmdlet0,'corfu-8000@sbb5'},
                               ""sbb5:8000"",38,70,
                               {layout,25,[],[],[]}]}},
                            {set,
                             {var,10},
                             {call,layout_eqc,commit,
                              [{cmdlet7,'corfu-8000@sbb5'},
                               ""sbb5:8000"",38,70,
                               {layout,25,[],[],[]}]}},
                            {set,
                             {var,11},
                             {call,layout_eqc,propose,
                              [{cmdlet1,'corfu-8000@sbb5'},
                               ""sbb5:8000"",38,70,
                               {layout,22,[],[],[]}]}},
                            {set,
                             {var,12},
                             {call,layout_eqc,query,
                              [{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",38]}},
                            {set,
                             {var,13},
                             {call,layout_eqc,propose,
                              [{cmdlet7,'corfu-8000@sbb5'},
                               ""sbb5:8000"",38,70,
                               {layout,64,[],...}]}},
                            {set,
                             {var,14},
                             {call,layout_eqc,query,
                              [{cmdlet8,'corfu-8000@sbb5'},""sbb5:8000"",38]}},
                            {set,
                             {var,15},
                             {call,layout_eqc,query,
                              [{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",38]}},
                            {set,
                             {var,16},
                             {call,layout_eqc,prepare,
                              [{cmdlet3,'corfu-8000@sbb5'},""sbb5:8000"",38,76]}},
                            {set,
                             {var,17},
                             {call,layout_eqc,reboot,
                              [{cmdlet5,'corfu-8000@sbb5'},""sbb5:8000""]}},
                            {set,
                             {var,18},
                             {call,layout_eqc,prepare,
                              [{cmdlet1,'corfu-8000@sbb5'},""sbb5:8000"",38|...]}},
                            {set,
                             {var,19},
                             {call,layout_eqc,prepare,[{cmdlet8,...},[...]|...]}},
                            {set,{var,20},{call,layout_eqc,propose,[{...}|...]}},
                            {set,{var,21},{call,layout_eqc,propose,[...]}},
                            {set,{var,22},{call,layout_eqc,commit,...}},
                            {set,{var,23},{call,layout_eqc,...}}],
                           [{7,
                             [""OK"",
                              ""{\n  \""layoutServers\"": [],\n  \""sequencers\"": [],\n  \""segments\"": [],\n  \""epoch\"": 38\n}""]},
                            {6,[""OK""]},
                            {5,[""OK""]},
                            {4,
                             [""ERROR"",""Exception during prepare"",
                              ""org.corfudb.runtime.exceptions.OutrankedException: Higher rank 82 encountered, layout = null"",
                              ""newRank: 82"",""layout: ""]},
                            {3,[""OK""]},
                            {2,[""OK""]},
                            {1,[""OK""]}],
                           [],undefined,no_result,#Fun<eqc_statem.22.102016998>,
                           [{indent,[3]},{width,80},{return_fun,undefined}]],
                          [{file,""../../eqc-project/src/eqc_statem.erl""},
                           {line,2122}]}]}
         in function  eqc:quickcheck/1 (../../eqc-project/src/eqc.erl, line 1392)

WIP: trying to find pretty_commands() bug

Derp, remove intentional query postcondition() model bug

WIP: fix junit test case failures",2016-07-22 20:33:53,Scott Lystig Fritchie,"['src/test/java/org/corfudb/infrastructure/LayoutServerTest.java', 'src/test/java/org/corfudb/runtime/clients/LayoutClientTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,a47599ab6582ac15d1ef05fd3601eacdfd51fb24,4a5033130ce0d1cebc634c333a85197c74dc5fa5,https://github.com/CorfuDB/CorfuDB/commit/a47599ab6582ac15d1ef05fd3601eacdfd51fb24,refactoring passing tests,2016-08-18 21:49:02,Michael Wei,"['src/test/java/org/corfudb/infrastructure/LogUnitServerTest.java', 'src/test/java/org/corfudb/runtime/clients/LogUnitClientTest.java', 'src/test/java/org/corfudb/runtime/view/AddressSpaceViewTest.java', 'src/test/java/org/corfudb/runtime/view/ChainReplicationViewTest.java', 'src/test/java/org/corfudb/runtime/view/ObjectsViewTest.java', 'src/test/java/org/corfudb/runtime/view/StreamViewTest.java', 'src/test/java/org/corfudb/runtime/view/StreamsViewTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,cac7411eebea4c460c7744e33c18ab8b6baedd82,8a0d8e8ffc70bda419be82820fbcd8ca91c1b796,https://github.com/CorfuDB/CorfuDB/commit/cac7411eebea4c460c7744e33c18ab8b6baedd82,"Improvements to reconfig protocol implementation

- Implemented node level datastore to persist Layouts and data related to Paxos phases.
- Refactored Layout server code
- Implemented committed phase of the paxos protocol
- Added persistence so that Server Epoch does not reset on node restart
- Added basic tests for datastore implementation
- Fixed existing tests to work with reconfiguration changes",2016-08-02 14:55:32,Medhavi Dhawan,"['src/test/java/org/corfudb/infrastructure/DataStoreTest.java', 'src/test/java/org/corfudb/infrastructure/LayoutServerTest.java', 'src/test/java/org/corfudb/runtime/clients/LayoutClientTest.java', 'src/test/java/org/corfudb/runtime/clients/NettyCommTest.java', 'src/test/java/org/corfudb/runtime/view/LayoutViewTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,ae19bddeb8842da65a38c0f3951b2742f617036b,21fa3a1eaf738b3a053e76f67505a1c88505cdc8,https://github.com/CorfuDB/CorfuDB/commit/ae19bddeb8842da65a38c0f3951b2742f617036b,"refactor clienttestrouternew into clienttestrouter, remove old code",2016-07-19 00:49:18,Michael Wei,"['src/test/java/org/corfudb/infrastructure/AbstractServerTest.java', 'src/test/java/org/corfudb/infrastructure/LayoutServerTest.java', 'src/test/java/org/corfudb/infrastructure/LogUnitServerTest.java', 'src/test/java/org/corfudb/infrastructure/SequencerServerTest.java', 'src/test/java/org/corfudb/runtime/clients/AbstractClientTest.java', 'src/test/java/org/corfudb/runtime/clients/LayoutClientTest.java', 'src/test/java/org/corfudb/runtime/clients/TestClientRouterTest.java', 'src/test/java/org/corfudb/runtime/view/AbstractViewTest.java', 'src/test/java/org/corfudb/runtime/view/AddressSpaceViewTest.java', 'src/test/java/org/corfudb/runtime/view/ChainReplicationViewTest.java', 'src/test/java/org/corfudb/runtime/view/LayoutViewTest.java', 'src/test/java/org/corfudb/runtime/view/SequencerViewTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,57262a85aca7f16f2f2940d4522632f2ca7a6f39,4870aba4b0dba7bdf20e47bf6b0e01e8374306cc,https://github.com/CorfuDB/CorfuDB/commit/57262a85aca7f16f2f2940d4522632f2ca7a6f39,"refactor clienttestrouternew into clienttestrouter, remove old code",2016-07-19 00:49:18,Michael Wei,"['src/test/java/org/corfudb/infrastructure/AbstractServerTest.java', 'src/test/java/org/corfudb/infrastructure/LayoutServerTest.java', 'src/test/java/org/corfudb/infrastructure/LogUnitServerTest.java', 'src/test/java/org/corfudb/infrastructure/SequencerServerTest.java', 'src/test/java/org/corfudb/runtime/clients/AbstractClientTest.java', 'src/test/java/org/corfudb/runtime/clients/LayoutClientTest.java', 'src/test/java/org/corfudb/runtime/clients/TestClientRouterTest.java', 'src/test/java/org/corfudb/runtime/view/AbstractViewTest.java', 'src/test/java/org/corfudb/runtime/view/AddressSpaceViewTest.java', 'src/test/java/org/corfudb/runtime/view/ChainReplicationViewTest.java', 'src/test/java/org/corfudb/runtime/view/LayoutViewTest.java', 'src/test/java/org/corfudb/runtime/view/SequencerViewTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,0a43cc205a0fe7166407f33a1c88685ae474fcad,3001e85ff3775f280847b2147547e63eccdda440,https://github.com/CorfuDB/CorfuDB/commit/0a43cc205a0fe7166407f33a1c88685ae474fcad,"refactor clienttestrouternew into clienttestrouter, remove old code",2016-07-19 00:49:18,Michael Wei,"['src/test/java/org/corfudb/infrastructure/AbstractServerTest.java', 'src/test/java/org/corfudb/infrastructure/LayoutServerTest.java', 'src/test/java/org/corfudb/infrastructure/LogUnitServerTest.java', 'src/test/java/org/corfudb/infrastructure/SequencerServerTest.java', 'src/test/java/org/corfudb/runtime/clients/AbstractClientTest.java', 'src/test/java/org/corfudb/runtime/clients/LayoutClientTest.java', 'src/test/java/org/corfudb/runtime/clients/TestClientRouterTest.java', 'src/test/java/org/corfudb/runtime/view/AbstractViewTest.java', 'src/test/java/org/corfudb/runtime/view/AddressSpaceViewTest.java', 'src/test/java/org/corfudb/runtime/view/ChainReplicationViewTest.java', 'src/test/java/org/corfudb/runtime/view/LayoutViewTest.java', 'src/test/java/org/corfudb/runtime/view/SequencerViewTest.java']"
CorfuDB/CorfuDB,https://github.com/CorfuDB/CorfuDB,a82882256c3dd4571821bf6b49b77272a6cd40c5,6624a4913fddacd881f082352818ae475e308ec1,https://github.com/CorfuDB/CorfuDB/commit/a82882256c3dd4571821bf6b49b77272a6cd40c5,"deferredTXs fully operational. some issues remain with other SMR engines, might want to refactor code, lots of ops for code reuse. many tests turned off since low-level apis are in flux",2015-09-29 17:58:50,Michael Wei,"['src/test/java/org/corfudb/runtime/collections/CDBSimpleMapLLTest.java', 'src/test/java/org/corfudb/runtime/collections/CDBSimpleMapTest.java', 'src/test/java/org/corfudb/runtime/smr/HoleFillingPolicy/TimeoutHoleFillingPolicyTest.java', 'src/test/java/org/corfudb/runtime/smr/SimpleSMREngineTest.java', 'src/test/java/org/corfudb/runtime/stream/NewStreamTest.java']"
swaechter/angularj-universal,https://github.com/swaechter/angularj-universal,3907fea8ee632065682a2f2df0ac6dceb13b1c3a,2045e5b080bb7fd29dda6dabb6add1d63d260987,https://github.com/swaechter/angularj-universal/commit/3907fea8ee632065682a2f2df0ac6dceb13b1c3a,"Update the interface, refactor the render entity and add an unit test to test the V8 render engine",2017-04-24 07:47:58,Simon Wächter,['v8renderer/src/test/java/ch/swaechter/springular/v8renderer/V8RenderEngineTest.java']
r2dbc/r2dbc-client,https://github.com/r2dbc/r2dbc-client,245f52d97da7032b04ef3177cd49f12ee4034ba1,92d7781f7e6b183954dcdc6d8965716ee0848f1f,https://github.com/r2dbc/r2dbc-client/commit/245f52d97da7032b04ef3177cd49f12ee4034ba1,"Refactor Framing

This change refactors what was previously called ""framing"".  It starts by
moving the message flow, of which there are only a small number into the core
package.  This co-locates then with the types that are going to use them.  It
also breaks out the authentication handlers (the types that know how to
respond to an authentication challenge) into an interface and a package that
will contain all implementations of them eventually.  Finally all of those
refactored parts are tested completely.  The TcpClient, the kernel of the
server interaction still isn't tested, but it should be next on the list.",2018-01-05 23:47:55,Ben Hale,"['postgresql-r2dbc/src/test/java/com/nebhale/r2dbc/postgresql/SimpleQueryMessageFlowTest.java', 'postgresql-r2dbc/src/test/java/com/nebhale/r2dbc/postgresql/StartupMessageFlowTest.java', 'postgresql-r2dbc/src/test/java/com/nebhale/r2dbc/postgresql/authentication/MD5PasswordAuthenticationHandlerTest.java', 'postgresql-r2dbc/src/test/java/com/nebhale/r2dbc/postgresql/authentication/TrustAuthenticationHandlerTest.java']"
termd/termd,https://github.com/termd/termd,1d4b554cf3d66c49ead67fb5d4eca05bf1919c57,3751b7f5d44a0e4263c4d8b714f520c87ca92268,https://github.com/termd/termd/commit/1d4b554cf3d66c49ead67fb5d4eca05bf1919c57,Refactor readline test to be implentable for SSH,2015-09-18 09:54:22,Julien Viet,"['src/test/java/io/termd/core/tty/NettyAsciiReadlineTelnetTtyTest.java', 'src/test/java/io/termd/core/tty/NettyBinaryReadlineTelnetTtyTest.java', 'src/test/java/io/termd/core/tty/VertxAsciiReadlineTelnetTtyTest.java', 'src/test/java/io/termd/core/tty/VertxBinaryReadlineTelnetTtyTest.java']"
termd/termd,https://github.com/termd/termd,c8635b23a1abcd1fc05cb4546e11da0861b796a9,2a33557cef1e6545fccd9504bf58d53bae4e9750,https://github.com/termd/termd/commit/c8635b23a1abcd1fc05cb4546e11da0861b796a9,Minor test refactor,2015-01-25 15:41:55,Julien Viet,['src/test/java/io/termd/core/telnet/TelnetHandlerTest.java']
termd/termd,https://github.com/termd/termd,d81a1199f698bd42f7b7ab3aa692b7ca2c5bf2ab,3c93991de331f629b1c242a19b2209a5af270d68,https://github.com/termd/termd/commit/d81a1199f698bd42f7b7ab3aa692b7ca2c5bf2ab,Refactor a bit ReadlineTermTest,2015-01-24 16:44:42,Julien Viet,['src/test/java/io/termd/core/term/ReadlineTermTest.java']
castorini/anserini,https://github.com/castorini/anserini,fad12be2e37a075100707c3a674eb67bc0aa57ef,9b696a025bcefc10c79eb4d109848f7ee214b332,https://github.com/castorini/anserini/commit/fad12be2e37a075100707c3a674eb67bc0aa57ef,"Iso19115 indexer, major refactoring and new test cases added (#1317)",2020-07-13 11:00:48,shaneding,['src/test/java/io/anserini/collection/Iso19115CollectionTest.java']
castorini/anserini,https://github.com/castorini/anserini,1b07219980412159f2425393a1edd5c9ed515b39,4c45d0ac4a8adbcad410d75f5c59ff5b47691bc4,https://github.com/castorini/anserini/commit/1b07219980412159f2425393a1edd5c9ed515b39,Refactored SearchCollection + added tests (#1038),2020-03-18 18:34:38,Jimmy Lin,"['src/test/java/io/anserini/integration/EndToEndTest.java', 'src/test/java/io/anserini/integration/MultiThreadingSearchTest.java', 'src/test/java/io/anserini/integration/TrecEndToEndTest.java', 'src/test/java/io/anserini/integration/TrecEndToEndWhitelistTest.java', 'src/test/java/io/anserini/integration/TweetEndToEndTest.java', 'src/test/java/io/anserini/search/SearchCollectionTest.java']"
castorini/anserini,https://github.com/castorini/anserini,9a10da98c72042de79f3e96132806f958207352d,3453a3e12e632874a562fec3dea2eba23b672c3c,https://github.com/castorini/anserini/commit/9a10da98c72042de79f3e96132806f958207352d,Last major batch of collections test refactoring (#1024),2020-03-07 15:24:23,Jimmy Lin,"['src/test/java/io/anserini/collection/AclAnthologyTest.java', 'src/test/java/io/anserini/collection/BibtexCollectionTest.java', 'src/test/java/io/anserini/collection/ClueWeb09CollectionTest.java', 'src/test/java/io/anserini/collection/ClueWeb12CollectionTest.java', 'src/test/java/io/anserini/collection/CoreCollectionTest.java', 'src/test/java/io/anserini/collection/DocumentTest.java', 'src/test/java/io/anserini/collection/JsonCollectionErrorCheckingTest.java', 'src/test/java/io/anserini/collection/NewYorkTimesCollectionTest.java', 'src/test/java/io/anserini/collection/TrecCollectionTest.java', 'src/test/java/io/anserini/collection/TrecwebCollectionTest.java', 'src/test/java/io/anserini/collection/TweetCollectionTest.java', 'src/test/java/io/anserini/collection/TweetDocumentTest.java', 'src/test/java/io/anserini/collection/WashingtonPostCollectionTest.java', 'src/test/java/io/anserini/collection/WashingtonPostDocumentTest.java', 'src/test/java/io/anserini/collection/WikipediaArticleTest.java', 'src/test/java/io/anserini/collection/WikipediaCollectionTest.java', 'src/test/java/io/anserini/integration/TweetEndToEndTest.java']"
castorini/anserini,https://github.com/castorini/anserini,f79c1d2becdce673ba5a06eaadd347bdc1387cc9,b64ba2d00be86e1860b82acc71cd3392bb2fb75f,https://github.com/castorini/anserini/commit/f79c1d2becdce673ba5a06eaadd347bdc1387cc9,Another round of collection test refactoring (#1003),2020-02-28 16:42:51,Jimmy Lin,"['src/test/java/io/anserini/collection/ClueWeb09DocumentTest.java', 'src/test/java/io/anserini/collection/ClueWeb12DocumentTest.java', 'src/test/java/io/anserini/collection/DocumentCollectionTest.java', 'src/test/java/io/anserini/collection/JsonCollectionDocumentArrayTest.java', 'src/test/java/io/anserini/collection/JsonCollectionDocumentObjectTest.java', 'src/test/java/io/anserini/collection/JsonCollectionLineObjectTest.java', 'src/test/java/io/anserini/collection/NewYorkTimesDocumentTest.java', 'src/test/java/io/anserini/collection/TrecDocumentTest.java', 'src/test/java/io/anserini/collection/TrecwebDocumentTest.java']"
castorini/anserini,https://github.com/castorini/anserini,b64ba2d00be86e1860b82acc71cd3392bb2fb75f,2ee503b77a8dcf2c14b6f4f3ed446c62c7e6f5e1,https://github.com/castorini/anserini/commit/b64ba2d00be86e1860b82acc71cd3392bb2fb75f,More refactoring of collection test cases (#1002),2020-02-27 01:29:17,Jimmy Lin,"['src/test/java/io/anserini/collection/DocumentCollectionTest.java', 'src/test/java/io/anserini/collection/JsonCollectionTest.java', 'src/test/java/io/anserini/collection/NewYorkTimesDocumentTest.java', 'src/test/java/io/anserini/collection/TrecDocumentTest.java', 'src/test/java/io/anserini/collection/TrecwebDocumentTest.java']"
castorini/anserini,https://github.com/castorini/anserini,2ee503b77a8dcf2c14b6f4f3ed446c62c7e6f5e1,93db44a6fb9ba20b42574aea91b950db30afe1dc,https://github.com/castorini/anserini/commit/2ee503b77a8dcf2c14b6f4f3ed446c62c7e6f5e1,Refactored JsonCollection tests (#1000),2020-02-26 21:43:58,Jimmy Lin,"['src/test/java/io/anserini/collection/CollectionTest.java', 'src/test/java/io/anserini/collection/JsonCollectionTest.java', 'src/test/java/io/anserini/collection/JsonDocumentArrayTest.java', 'src/test/java/io/anserini/collection/JsonDocumentObjectTest.java', 'src/test/java/io/anserini/collection/JsonLineObjectTest.java']"
castorini/anserini,https://github.com/castorini/anserini,dd47b91641b1f66dd335efa5605e3d484f4a2a05,4116188e327b92469da8c53e35f9c88fd28b88b6,https://github.com/castorini/anserini/commit/dd47b91641b1f66dd335efa5605e3d484f4a2a05,"Cleanup of IndexReaderUtils and AnalyzerUtils (#900)

Lots of refactoring, highlights include:
+ IndexCollection actually uses EnglishStemmingAnalyzer, but we've been using 
   EnglishAnalyzer in places for tests, etc. - made consistent
+ Refactoring of IndexReaderUtils and added docs
+ Added more convenience methods to SimpleSearcher",2019-11-27 15:27:15,Jimmy Lin,"['src/test/java/io/anserini/analysis/EnglishStemmingAnalyzerTest.java', 'src/test/java/io/anserini/analysis/vectors/fw/FakeWordsEncoderAnalyzerTest.java', 'src/test/java/io/anserini/analysis/vectors/lexlsh/LexicalLshAnalyzerTest.java', 'src/test/java/io/anserini/index/IndexReaderUtilsTest.java', 'src/test/java/io/anserini/ltr/BaseFeatureExtractorTest.java', 'src/test/java/io/anserini/search/SimpleSearcherTest.java', 'src/test/java/io/anserini/search/topicreader/CarTopicReaderTest.java', 'src/test/java/io/anserini/util/ExtractDocumentLengthsTest.java', 'src/test/java/io/anserini/util/ExtractNormsTest.java']"
castorini/anserini,https://github.com/castorini/anserini,fb9ecf44add18128fc8495016702c178d42e88d3,a91f18459b23d673b22a223729c925a0ee8c5554,https://github.com/castorini/anserini/commit/fb9ecf44add18128fc8495016702c178d42e88d3,Refactored extract doclength/norm util and test cases (#899),2019-11-26 20:35:34,Jimmy Lin,"['src/test/java/io/anserini/util/ExtractDocumentLengthsTest.java', 'src/test/java/io/anserini/util/ExtractNormsTest.java']"
castorini/anserini,https://github.com/castorini/anserini,6d97b36f76e98cfddfa0a5c3c5677805d7d02ec8,8524aee31ad64d25f08808722e413e7904ed475d,https://github.com/castorini/anserini/commit/6d97b36f76e98cfddfa0a5c3c5677805d7d02ec8,Refactored IndexUtil and related test cases (#884),2019-11-23 15:11:00,Jimmy Lin,"['src/test/java/io/anserini/index/BasicIndexOperationsTest.java', 'src/test/java/io/anserini/index/CloneIndexTest.java', 'src/test/java/io/anserini/index/IndexReaderUtilsTest.java', 'src/test/java/io/anserini/search/SimpleSearcherTest.java']"
castorini/anserini,https://github.com/castorini/anserini,2bd21ebdf5aa4290475b7159ced7eddc5983f15f,d0be1682e31896e3d32b2d4d13f7737acfb6be02,https://github.com/castorini/anserini/commit/2bd21ebdf5aa4290475b7159ced7eddc5983f15f,"Refactoring of collections API (#728) - closes #667

* Refactored classes within the collection API, having `DocumentCollection` and `FileSegment` implement the Iterable interface
*Updated/added collections unit tests, per issue #371
*Updated python collections wrapper for compatibility with the refactor
*Modified`IndexCollection` and `MapCollections` for compatibility with the refactor",2019-06-24 15:11:00,Emily Wang,"['src/test/java/io/anserini/collection/ClueWeb09DocumentTest.java', 'src/test/java/io/anserini/collection/ClueWeb12DocumentTest.java', 'src/test/java/io/anserini/collection/JsonDocumentArrayTest.java', 'src/test/java/io/anserini/collection/JsonDocumentObjectTest.java', 'src/test/java/io/anserini/collection/JsonLineObjectTest.java', 'src/test/java/io/anserini/collection/NewYorkTimesDocumentTest.java', 'src/test/java/io/anserini/collection/TrecDocumentTest.java', 'src/test/java/io/anserini/collection/TrecwebDocumentTest.java', 'src/test/java/io/anserini/collection/TweetDocumentTest.java', 'src/test/java/io/anserini/collection/WashingtonPostDocumentTest.java', 'src/test/java/io/anserini/collection/WikipediaArticleTest.java']"
castorini/anserini,https://github.com/castorini/anserini,b2408a61c1b4ca4402221d72f5300b20a71e9a3c,373274fdde9dd36c25351d24cdef26b9651c5033,https://github.com/castorini/anserini/commit/b2408a61c1b4ca4402221d72f5300b20a71e9a3c,"Indexing and searching Freebase in Anserini (#453)

* Revert ""Remove all classes related to Freebase (#329)""

This reverts commit cb48543c0963158c13105c0334aabfe411d2a283.

* Needed for a test case, removed as part of commit 7a871bd731fd0e13fbe046c86d12047d217b52c2.

* wip, refactored IndexTopics and IndexNodes into IndexFreebase.

* Getting reading for CR.",2018-10-15 14:40:42,Jimmy Lin,"['src/test/java/io/anserini/kg/freebase/FreebaseNodeTest.java', 'src/test/java/io/anserini/kg/freebase/FreebaseTest.java']"
castorini/anserini,https://github.com/castorini/anserini,5f8c26d328dd67e6cc538d5f9b4af44acdbc74e5,e5e2df474573c07759a1e547f90b6c2cc113ee22,https://github.com/castorini/anserini/commit/5f8c26d328dd67e6cc538d5f9b4af44acdbc74e5,"Regression test refactor (#355)

This is a complete refactor of the regression test framework.

# All the to-be-validated numbers are in src/main/resources/regression/*.yaml. One file per collection.
# Now all experiments-*.md are automatically generated by `mvn test` or `mvn clean package appassembler:assemble`. Any manual changes will be erased. The only way to change them is to directly change `src/main/resources/regression/*.yaml`.
# Please note that for CW12 there is no result of BM25+AX and QL+AX since it takes too long to run the test.",2018-07-21 15:59:52,Peilin Yang,['src/test/java/io/anserini/doc/GenerateRegressionDocsTest.java']
castorini/anserini,https://github.com/castorini/anserini,5bd1d614f6793ddac1164ab6d6b09dcc9ad6d567,c949669984ffdce5075c669af1b788b1ad7f9185,https://github.com/castorini/anserini/commit/5bd1d614f6793ddac1164ab6d6b09dcc9ad6d567,Tweets indexing/searching/tests refactor (#215),2018-06-03 20:51:40,Peilin Yang,"['src/test/java/io/anserini/document/ClueWeb09WarcRecordTest.java', 'src/test/java/io/anserini/document/ClueWeb12WarcRecordTest.java', 'src/test/java/io/anserini/document/DocumentTest.java', 'src/test/java/io/anserini/document/TweetDocumentTest.java', 'src/test/java/io/anserini/document/twitter/JsonTweetsBlockTest.java', 'src/test/java/io/anserini/end2end/EndToEndTest.java', 'src/test/java/io/anserini/end2end/TrecE2ETest.java', 'src/test/java/io/anserini/end2end/TweetE2ETest.java', 'src/test/java/io/anserini/eval/MetricsTest.java', 'src/test/java/io/anserini/eval/RankingResultsTest.java']"
castorini/anserini,https://github.com/castorini/anserini,18447208250f9b33e5ee6c1e00556df769434c26,a0fde07e7d87ff67648b02918d1e57e99ac990c0,https://github.com/castorini/anserini/commit/18447208250f9b33e5ee6c1e00556df769434c26,"Refactor Collection class a bit; Add Document tests (#212)

* add most document tests

* revert IndexCollection to include indexable()

* nit: remove empty line",2018-03-30 17:10:48,Peilin Yang,"['src/test/java/io/anserini/document/ClueWeb09WarcRecordTest.java', 'src/test/java/io/anserini/document/ClueWeb12WarcRecordTest.java', 'src/test/java/io/anserini/document/DocumentTest.java', 'src/test/java/io/anserini/document/TrecDocumentTest.java', 'src/test/java/io/anserini/document/TrecwebDocumentTest.java', 'src/test/java/io/anserini/document/TwitterDocumentTest.java', 'src/test/java/io/anserini/document/WikipediaArticleTest.java', 'src/test/java/io/anserini/eval/MetricsTest.java']"
castorini/anserini,https://github.com/castorini/anserini,32ad25e90f1d889da3e708549e3436d0879efc3c,f1e0432991c865c4e39d7a71490afe4b878c62e4,https://github.com/castorini/anserini/commit/32ad25e90f1d889da3e708549e3436d0879efc3c,"Freebase test case, FreebaseNode refactoring (#198)

+ Added Freebase test case for reading N-Triples format. Refreshed code comments.
+ Refactored FreebaseNode - note that the nodes are identified by URIs. URIs are not necessarily MIDs, as the previous API (falsely) suggested.",2017-06-18 19:50:17,Jimmy Lin,"['src/test/java/io/anserini/kg/freebase/FreebaseTest.java', 'src/test/java/io/anserini/ltr/LoadFeatureExtractorFromFileTest.java']"
spotify-web-api-java/spotify-web-api-java,https://github.com/spotify-web-api-java/spotify-web-api-java,0e4e271c076564b8afc6a0ac8c7725bc4b052df5,f1a9f81268a9c276ddaf186ff5fe59d3cd23d2bc,https://github.com/spotify-web-api-java/spotify-web-api-java/commit/0e4e271c076564b8afc6a0ac8c7725bc4b052df5,"Remove usage of MockitoJUnitRunner

None of the tests in the project use Mockito's annotations, and
therefore they do not need to use MockitoJUnitRunner.

Removing it makes the code easier to maintain and refactor, and could
potentially make the tests run a bit faster (even though on my machine
the runtime improvement seems anecdotal at best).",2022-09-13 17:51:35,Allon Mureinik,"['src/test/java/se/michaelthelin/spotify/requests/data/albums/GetAlbumRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/albums/GetAlbumsTracksRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/albums/GetSeveralAlbumsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/artists/GetArtistRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/artists/GetArtistsAlbumsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/artists/GetArtistsRelatedArtistsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/artists/GetArtistsTopTracksRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/artists/GetSeveralArtistsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/browse/GetCategoryRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/browse/GetCategorysPlaylistRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/browse/GetListOfCategoriesRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/browse/GetListOfFeaturedPlaylistsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/browse/GetListOfNewReleasesRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/browse/GetRecommendationsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/browse/miscellaneous/GetAvailableGenreSeedsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/episodes/GetEpisodeRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/episodes/GetSeveralEpisodesRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/follow/CheckCurrentUserFollowsArtistsOrUsersRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/follow/CheckUsersFollowPlaylistRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/follow/FollowArtistsOrUsersRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/follow/FollowPlaylistRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/follow/GetUsersFollowedArtistsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/follow/UnfollowArtistsOrUsersRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/follow/UnfollowPlaylistRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/follow/legacy/FollowPlaylistRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/follow/legacy/UnfollowPlaylistRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/library/CheckUsersSavedAlbumsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/library/CheckUsersSavedShowsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/library/CheckUsersSavedTracksRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/library/GetCurrentUsersSavedAlbumsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/library/GetUsersSavedShowsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/library/GetUsersSavedTracksRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/library/RemoveAlbumsForCurrentUserRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/library/RemoveUsersSavedShowsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/library/RemoveUsersSavedTracksRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/library/SaveAlbumsForCurrentUserRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/library/SaveShowsForCurrentUserRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/library/SaveTracksForUserRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/personalization/simplified/GetUsersTopArtistsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/personalization/simplified/GetUsersTopTracksRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/player/AddItemToUsersPlaybackQueueRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/player/GetCurrentUsersRecentlyPlayedTracksRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/player/GetInformationAboutUsersCurrentPlaybackRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/player/GetUsersAvailableDevicesTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/player/GetUsersCurrentlyPlayingTrackRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/player/PauseUsersPlaybackRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/player/SeekToPositionInCurrentlyPlayingTrackRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/player/SetRepeatModeOnUsersPlaybackRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/player/SetVolumeForUsersPlaybackRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/player/SkipUsersPlaybackToNextTrackRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/player/SkipUsersPlaybackToPreviousTrackRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/player/StartResumeUsersPlaybackRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/player/ToggleShuffleForUsersPlaybackRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/player/TransferUsersPlaybackRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/playlists/AddItemsToPlaylistRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/playlists/ChangePlaylistsDetailsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/playlists/CreatePlaylistRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/playlists/GetListOfCurrentUsersPlaylistsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/playlists/GetListOfUsersPlaylistsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/playlists/GetPlaylistCoverImageRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/playlists/GetPlaylistRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/playlists/GetPlaylistsItemsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/playlists/RemoveItemsFromPlaylistRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/playlists/ReorderPlaylistsItemsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/playlists/ReplacePlaylistsItemsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/playlists/UploadCustomPlaylistCoverImageRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/search/SearchItemRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/search/simplified/SearchAlbumsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/search/simplified/SearchArtistsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/search/simplified/SearchEpisodesRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/search/simplified/SearchPlaylistsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/search/simplified/SearchShowsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/search/simplified/SearchTracksRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/search/simplified/special/SearchAlbumsSpecialRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/shows/GetSeveralShowsRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/shows/GetShowRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/shows/GetShowsEpisodesRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/tracks/GetAudioAnalysisForTrackRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/tracks/GetAudioFeaturesForSeveralTracksRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/tracks/GetAudioFeaturesForTrackRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/tracks/GetSeveralTracksRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/tracks/GetTrackRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/users_profile/GetCurrentUsersProfileRequestTest.java', 'src/test/java/se/michaelthelin/spotify/requests/data/users_profile/GetUsersProfileRequestTest.java']"
spotify-web-api-java/spotify-web-api-java,https://github.com/spotify-web-api-java/spotify-web-api-java,fedbd747dd33b075c46b2f820d71ed0f171b0b1d,7f49985b8fd4907afc5ab0311b11352bf69b3b7e,https://github.com/spotify-web-api-java/spotify-web-api-java/commit/fedbd747dd33b075c46b2f820d71ed0f171b0b1d,"Request Test Class Names II

~ Refactor moved files from previous commit",2017-12-26 00:45:33,Jonas Thelemann,"['src/test/java/com/wrapper/spotify/requests/data/albums/GetAlbumRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/albums/GetAlbumsTracksRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/albums/GetSeveralAlbumsRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/artists/GetArtistRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/artists/GetArtistsAlbumsRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/artists/GetArtistsRelatedArtistsRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/artists/GetArtistsTopTracksRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/artists/GetSeveralArtistsRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/browse/GetListOfFeaturedPlaylistsRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/browse/GetListOfNewReleasesRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/browse/GetRecommendationsRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/library/CheckUsersSavedTracksRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/library/GetUsersSavedTracksRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/library/RemoveUsersSavedTracksRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/library/SaveTracksForUserRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/playlists/AddTracksToPlaylistRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/playlists/ChangePlaylistsDetailsRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/playlists/CreatePlaylistRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/playlists/GetListOfUsersPlaylistsRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/playlists/GetPlaylistRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/playlists/GetPlaylistsTracksRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/playlists/RemoveTracksFromPlaylistRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/playlists/ReorderPlaylistsTracksRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/playlists/ReplacePlaylistsTracksRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/tracks/GetSeveralTracksRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/tracks/GetTrackRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/users_profile/GetCurrentUsersProfileRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/data/users_profile/GetUsersProfileRequestTest.java']"
spotify-web-api-java/spotify-web-api-java,https://github.com/spotify-web-api-java/spotify-web-api-java,f8ffed8cfb3d11037bf9888ae85f4f83708e52e0,69d6fea41af1030c9ef687efd9e1aa4d9236348c,https://github.com/spotify-web-api-java/spotify-web-api-java/commit/f8ffed8cfb3d11037bf9888ae85f4f83708e52e0,"Merge Fixes III

~ Fix API
~ Refactor package names
~ Fix tests
~ Adapt requests to new layout",2017-12-24 18:24:38,Jonas Thelemann,"['src/test/java/com/wrapper/spotify/ApiTest.java', 'src/test/java/com/wrapper/spotify/requests/RemoveTrackFromPlaylistRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/ReorderTracksInPlaylistRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/ReplaceTracksInPlaylistRequestTest.java']"
spotify-web-api-java/spotify-web-api-java,https://github.com/spotify-web-api-java/spotify-web-api-java,006b4b795605e1e258fb295c3b8c2389a7097169,13c555abc5b9df327d97b3d8f28a6d3c0330a1da,https://github.com/spotify-web-api-java/spotify-web-api-java/commit/006b4b795605e1e258fb295c3b8c2389a7097169,"Refactor Tests

~ Correct package name after move",2017-12-24 17:15:53,Jonas Thelemann,"['src/test/java/com/wrapper/spotify/requests/RecommendationsRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/ReplacePlaylistTracksRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/TracksForAlbumRequestTest.java', 'src/test/java/com/wrapper/spotify/requests/UnfollowPlaylistRequestTest.java']"
spotify-web-api-java/spotify-web-api-java,https://github.com/spotify-web-api-java/spotify-web-api-java,43c0e8acbe894697e882b24d9a575b137d9c9bd4,6e62b978997b2e2bfa6e18cb6fbda17b3519135e,https://github.com/spotify-web-api-java/spotify-web-api-java/commit/43c0e8acbe894697e882b24d9a575b137d9c9bd4,Refactor test for related artists and several artists endpoints,2014-11-16 14:42:37,Michael Thelin,['src/test/java/com/wrapper/spotify/methods/RelatedArtistsRequestTest.java']
spotify-web-api-java/spotify-web-api-java,https://github.com/spotify-web-api-java/spotify-web-api-java,712fc506e61320a37e600386edd081e6531f1c43,495d860f534c30266d05d80b900864ab471e1c90,https://github.com/spotify-web-api-java/spotify-web-api-java/commit/712fc506e61320a37e600386edd081e6531f1c43,Refactor album and albums tests,2014-04-27 10:24:42,Michael Thelin,"['src/test/java/se/michaelthelin/spotify/methods/AlbumRequestTest.java', 'src/test/java/se/michaelthelin/spotify/methods/AlbumsRequestTest.java']"
spotify-web-api-java/spotify-web-api-java,https://github.com/spotify-web-api-java/spotify-web-api-java,df30983fe7c911eee04e22e50c148147a88ce6ad,35c46365f2e06cd0bdd0973f25e95e40be493ba8,https://github.com/spotify-web-api-java/spotify-web-api-java/commit/df30983fe7c911eee04e22e50c148147a88ce6ad,Test for bad field in Album request. Refactored several albums request test,2014-04-25 23:11:51,Michael Thelin,"['src/test/java/se/michaelthelin/spotify/methods/AlbumRequestTest.java', 'src/test/java/se/michaelthelin/spotify/methods/AlbumsRequestTest.java']"
spotify-web-api-java/spotify-web-api-java,https://github.com/spotify-web-api-java/spotify-web-api-java,35c46365f2e06cd0bdd0973f25e95e40be493ba8,c791cf2c66ad4456548c94817ea262da313e1d3a,https://github.com/spotify-web-api-java/spotify-web-api-java/commit/35c46365f2e06cd0bdd0973f25e95e40be493ba8,Refactored tests for asynchronous methods,2014-04-25 22:27:08,Michael Thelin,['src/test/java/se/michaelthelin/spotify/methods/AlbumRequestTest.java']
spotify-web-api-java/spotify-web-api-java,https://github.com/spotify-web-api-java/spotify-web-api-java,38d21f327de73e236388e120abf2199cdedeb142,5f69c73df12ce7dc951baba0f393801d72715622,https://github.com/spotify-web-api-java/spotify-web-api-java/commit/38d21f327de73e236388e120abf2199cdedeb142,Refactoring of JsonUtil tests and implementation to make it easier to read,2014-04-20 16:52:45,Michael Thelin,['src/test/java/se/michaelthelin/spotify/JsonUtilTest.java']
apache/mina,https://github.com/apache/mina,a79cb81bbc7fee4c1724a5a1a0d3ba338853cf6f,fc584a7570d5c027eefb680cc0505acc68157f78,https://github.com/apache/mina/commit/a79cb81bbc7fee4c1724a5a1a0d3ba338853cf6f,Refactor benchmark tests in single multi module to be more DRY oriented,2014-05-16 09:08:28,Jeff MAURY,"['benchmarks/common/src/test/java/org/apache/mina/core/BenchmarkBinaryTest.java', 'benchmarks/common/src/test/java/org/apache/mina/core/BioClientVsBioServerUdpBenchmarkBinaryTest.java', 'benchmarks/common/src/test/java/org/apache/mina/core/BioClientVsMina3ServerUdpBenchmarkBinaryTest.java', 'benchmarks/common/src/test/java/org/apache/mina/core/Mina3ClientVsMina3ServerTcpBenchmarkBinaryTest.java', 'benchmarks/common/src/test/java/org/apache/mina/core/Mina3ClientVsMina3ServerUdpBenchmarkBinaryTest.java', 'benchmarks/netty3/src/test/java/org/apache/mina/core/Mina3ClientVsNetty3ServerTcpBenchmarkBinaryTest.java', 'benchmarks/netty3/src/test/java/org/apache/mina/core/Netty3ClientVsMina3ServerTcpBenchmarkBinaryTest.java', 'benchmarks/netty3/src/test/java/org/apache/mina/core/Netty3ClientVsMina3ServerUdpBenchmarkBinaryTest.java', 'benchmarks/netty3/src/test/java/org/apache/mina/core/Netty3ClientVsNetty3ServerTcpBenchmarkBinaryTest.java', 'benchmarks/netty3/src/test/java/org/apache/mina/core/Netty3ClientVsNetty3ServerUdpBenchmarkBinaryTest.java', 'benchmarks/netty4/src/test/java/org/apache/mina/core/Netty4ClientVsMina3ServerTcpBenchmarkBinaryTest.java', 'benchmarks/netty4/src/test/java/org/apache/mina/core/Netty4ClientVsMina3ServerUdpBenchmarkBinaryTest.java', 'benchmarks/netty4/src/test/java/org/apache/mina/core/Netty4ClientVsNetty4ServerTcpBenchmarkBinaryTest.java', 'benchmarks/netty4/src/test/java/org/apache/mina/core/Netty4ClientVsNetty4ServerUdpBenchmarkBinaryTest.java', 'benchmarks2/src/test/java/org/apache/mina/core/BenchmarkBinaryTest.java']"
apache/mina,https://github.com/apache/mina,fc584a7570d5c027eefb680cc0505acc68157f78,1e5519491baf62f82eaa395f499176b08a5deb3a,https://github.com/apache/mina/commit/fc584a7570d5c027eefb680cc0505acc68157f78,Prepare for tests refactoring + fix Netty4 UDP implementation,2014-05-15 20:16:09,Jeff MAURY,"['benchmarks/src/test/java/org/apache/mina/core/BenchmarkBinaryTest.java', 'benchmarks/src/test/java/org/apache/mina/core/BioClientVsBioServerUdpBenchmarkBinaryTest.java', 'benchmarks/src/test/java/org/apache/mina/core/BioClientVsMina3ServerUdpBenchmarkBinaryTest.java', 'benchmarks/src/test/java/org/apache/mina/core/Mina3ClientVsMina3ServerTcpBenchmarkBinaryTest.java', 'benchmarks/src/test/java/org/apache/mina/core/Mina3ClientVsMina3ServerUdpBenchmarkBinaryTest.java', 'benchmarks/src/test/java/org/apache/mina/core/Mina3ClientVsNetty3ServerTcpBenchmarkBinaryTest.java', 'benchmarks/src/test/java/org/apache/mina/core/Netty3ClientVsMina3ServerTcpBenchmarkBinaryTest.java', 'benchmarks/src/test/java/org/apache/mina/core/Netty3ClientVsMina3ServerUdpBenchmarkBinaryTest.java', 'benchmarks/src/test/java/org/apache/mina/core/Netty3ClientVsNetty3ServerTcpBenchmarkBinaryTest.java', 'benchmarks/src/test/java/org/apache/mina/core/Netty3ClientVsNetty3ServerUdpBenchmarkBinaryTest.java', 'benchmarks2/src/test/java/org/apache/mina/core/BenchmarkBinaryTest.java', 'benchmarks2/src/test/java/org/apache/mina/core/Netty4ClientVsMina3ServerTcpBenchmarkBinaryTest.java', 'benchmarks2/src/test/java/org/apache/mina/core/Netty4ClientVsMina3ServerUdpBenchmarkBinaryTest.java', 'benchmarks2/src/test/java/org/apache/mina/core/Netty4ClientVsNetty4ServerTcpBenchmarkBinaryTest.java', 'benchmarks2/src/test/java/org/apache/mina/core/Netty4ClientVsNetty4ServerUdpBenchmarkBinaryTest.java']"
apache/mina,https://github.com/apache/mina,6a38c456f85ba4b86b2a904c778b3c434a8ab3fa,2c184822fcff8c8a7c773b6fde0eaaa2ab19fa6b,https://github.com/apache/mina/commit/6a38c456f85ba4b86b2a904c778b3c434a8ab3fa,"o Added a NoopFilter to be used in the chain's tests
o Modified the tests to use this newly created NoopFilter
o Minor refactoring in IoFilterAdapter (spaces removal)
o Removed commented code in VmPipe test

git-svn-id: https://svn.apache.org/repos/asf/mina/trunk@692090 13f79535-47bb-0310-9956-ffa450edef68",2008-09-04 15:13:09,Emmanuel Lecharny,"['core/src/test/java/org/apache/mina/core/DefaultIoFilterChainBuilderTest.java', 'core/src/test/java/org/apache/mina/core/IoFilterChainTest.java', 'core/src/test/java/org/apache/mina/transport/vmpipe/VmPipeEventOrderTest.java']"
uber/uReplicator,https://github.com/uber/uReplicator,387cdc39da42e342207e929ffc7075a9d09a0677,4bdbc25c955db826e7f868387379284206a3c0ea,https://github.com/uber/uReplicator/commit/387cdc39da42e342207e929ffc7075a9d09a0677,"Refactor and bug fix for uReplicator Worker (#251)

* parallel commit offset

* fix worker failed to commit offset problem on route re-assign

* refactor on worker route re-assign

Summary:
1. throw exception on unexpected behaviour
2. add more check to avoid potential race condition
3. add unittest for error scenairo

* don't shutdown fetcher thread when assignment is empty",2019-09-03 04:38:38,yang,"['uReplicator-Worker-3.0/src/test/java/com/uber/stream/ureplicator/worker/FetcherManagerTest.java', 'uReplicator-Worker-3.0/src/test/java/com/uber/stream/ureplicator/worker/HelixHandlerTest.java', 'uReplicator-Worker-3.0/src/test/java/com/uber/stream/ureplicator/worker/WorkerInstanceTest.java', 'uReplicator-Worker-3.0/src/test/java/com/uber/stream/ureplicator/worker/ZookeeperCheckpointManagerTest.java']"
chrisvest/stormpot,https://github.com/chrisvest/stormpot,0c4eba713f7d29c56841feafa73925097039e913,6cf07c40e63eab5a9127c19dbfe6a411af5a5d22,https://github.com/chrisvest/stormpot/commit/0c4eba713f7d29c56841feafa73925097039e913,Refactor PoolTest and fix warnings.,2019-09-19 13:12:33,Chris Vest,['src/test/java/blackbox/PoolTest.java']
chrisvest/stormpot,https://github.com/chrisvest/stormpot,e4fd8b4ddf2229741f8bbce606318f2d873187e7,eed70b6b5926186bd41592fe1b779d645af7acea,https://github.com/chrisvest/stormpot/commit/e4fd8b4ddf2229741f8bbce606318f2d873187e7,"Refactoring and test cleanup

This removes the tests that relied on implementation details for verifying behaviour.
The BleazePool allocation thread now owns its dead-queue, in preperation for future changes.
Also introduces the non-public UnsafeUtil class, so that sort of thing is collected in one place.",2014-12-15 08:18:35,Chris Vest,"['src/test/java/stormpot/BAllocThread_NullPollFromLiveWhileShrinking_Test.java', 'src/test/java/stormpot/BAllocThread_ShutdownNullsPoll_Test.java', 'src/test/java/stormpot/PoolTest.java', 'src/test/java/stormpot/QAllocThread_NullPollFromLiveWhileShrinking_Test.java', 'src/test/java/stormpot/QAllocThread_ShutdownNullsPoll_Test.java']"
rest-driver/rest-driver,https://github.com/rest-driver/rest-driver,59439114587fa419aa7a93d6e1c422ec3791c735,e91c38230584ebf4ef0a457285e72a1290dc2076,https://github.com/rest-driver/rest-driver/commit/59439114587fa419aa7a93d6e1c422ec3791c735,refactor response tests,2011-09-08 10:07:04,Matthew Gilliard,['rest-server-driver/src/test/java/com/github/restdriver/serverdriver/http/DefaultResponseTest.java']
rest-driver/rest-driver,https://github.com/rest-driver/rest-driver,c468aa0cbc886af340059be6a65f47328afd5dfb,ab9f0b142a48250425e54177c3a38a19c0caaa23,https://github.com/rest-driver/rest-driver/commit/c468aa0cbc886af340059be6a65f47328afd5dfb,More refactoring - added tests for FileHelper,2011-04-21 11:45:52,Matthew Gilliard,"['rest-client-driver/src/test/java/com/googlecode/rd/clientdriver/integration/BenchSuccessTest.java', 'rest-server-driver/src/test/java/com/googlecode/rd/serverdriver/file/FileHelperTest.java', 'rest-server-driver/src/test/java/com/googlecode/rd/serverdriver/http/GetAcceptanceTest.java']"
neo4j-labs/neosemantics,https://github.com/neo4j-labs/neosemantics,132a58ad2f157f743bbf7e635f58cf9d06af5020,84557a46b08f3530faf58d98dce2185b0d22d47a,https://github.com/neo4j-labs/neosemantics/commit/132a58ad2f157f743bbf7e635f58cf9d06af5020,"WIP: refactor test db creation
- Some tests that depend on internal id still fails",2022-10-31 12:46:07,Håkan Löfqvist,"['src/test/java/n10s/RDFExportTest.java', 'src/test/java/n10s/RDFProceduresTest.java', 'src/test/java/n10s/endpoint/RDFEndpointTest.java', 'src/test/java/n10s/graphconfig/GraphConfigProceduresTest.java', 'src/test/java/n10s/inference/MicroReasonersTest.java', 'src/test/java/n10s/load/AddProceduresTest.java', 'src/test/java/n10s/mapping/MappingUtilsTest.java', 'src/test/java/n10s/nsprefixes/NsPrefixDefProceduresTest.java', 'src/test/java/n10s/onto/OntoProceduresTest.java', 'src/test/java/n10s/validation/SHACLValidationProceduresTest.java']"
neo4j-labs/neosemantics,https://github.com/neo4j-labs/neosemantics,84557a46b08f3530faf58d98dce2185b0d22d47a,7bdd3016557208e3d066ffcbca5269efadf0a56a,https://github.com/neo4j-labs/neosemantics/commit/84557a46b08f3530faf58d98dce2185b0d22d47a,Start refactor test db creation,2022-10-31 12:41:55,Håkan Löfqvist,"['src/test/java/n10s/aggregate/CollectTriplesTest.java', 'src/test/java/n10s/aux/AuxProceduresTest.java', 'src/test/java/n10s/endpoint/RDFEndpointTest.java', 'src/test/java/n10s/graphconfig/GraphConfigProceduresTest.java']"
neo4j-labs/neosemantics,https://github.com/neo4j-labs/neosemantics,4582de350798c6576385ef3fac2007257d187e3c,b41785d7b27fba7f274d5d1636eebed624f6733c,https://github.com/neo4j-labs/neosemantics/commit/4582de350798c6576385ef3fac2007257d187e3c,additional tests for heterogeneous datatypes and code refactoring,2020-06-08 18:18:26,Jesus Barrasa,['src/test/java/n10s/RDFProceduresTest.java']
neo4j-labs/neosemantics,https://github.com/neo4j-labs/neosemantics,99632b46ce00519db9628bc764112998115c5815,3055578ea1d07ff661b5c3bdcf1b55ee46513baf,https://github.com/neo4j-labs/neosemantics/commit/99632b46ce00519db9628bc764112998115c5815,refactor and clean RDFImportTest,2019-07-02 19:49:33,Emre Arkan,['src/test/java/semantics/RDFImportTest.java']
neo4j-labs/neosemantics,https://github.com/neo4j-labs/neosemantics,b6910c6cfcbe9a60d95ec14166202a5fa709c063,4215ff364a55782714881eae7324c8edd9b9aa6c,https://github.com/neo4j-labs/neosemantics/commit/b6910c6cfcbe9a60d95ec14166202a5fa709c063,refactor and clean RDFEndpointTest,2019-07-02 19:48:30,Emre Arkan,['src/test/java/semantics/extension/RDFEndpointTest.java']
restfb/restfb,https://github.com/restfb/restfb,feb04b18a9d98afdb1001ac05afb2f09346332d8,10a9bc444c8495e525649713bc9ba8b1e017cbf5,https://github.com/restfb/restfb/commit/feb04b18a9d98afdb1001ac05afb2f09346332d8,"Issue #260 - ProfilePictureSource type added, page picture changed, user picture refactoring, unittests added",2015-07-16 21:35:16,Norbert Bartels,"['source/test/java/com/restfb/types/PageTest.java', 'source/test/java/com/restfb/types/UserTest.java', 'source/test/java/com/restfb/types/api/ApiCheckTest.java', 'source/test/java/com/restfb/types/setter/PageTest.java']"
restfb/restfb,https://github.com/restfb/restfb,777af49bdfbfcb7bb1d6a38c714c9145bd644f23,fd79674041d997d9c46a5ea18915aac260603a21,https://github.com/restfb/restfb/commit/777af49bdfbfcb7bb1d6a38c714c9145bd644f23,Issue #270 - video type fields checked and api 2.4 fields added. Unittest added. minor Refactoring,2015-07-11 00:42:54,Norbert Bartels,['source/test/java/com/restfb/types/VideoTest.java']
restfb/restfb,https://github.com/restfb/restfb,d2fc6c2c18834f70652a01740f5c6a36b8bb5101,cdff98667f99525095b6cc3ebbac66e3808da8ee,https://github.com/restfb/restfb/commit/d2fc6c2c18834f70652a01740f5c6a36b8bb5101,"Issue #261 - targeting field added to post, minor refactoring of FeedTargeting object, unittest added",2015-07-07 22:47:16,Norbert Bartels,['source/test/java/com/restfb/types/PostTest.java']
jenkinsci/build-monitor-plugin,https://github.com/jenkinsci/build-monitor-plugin,fe8e0c0bc2cf5a8a1a6fc1575825650c45c89098,b4fffdd135b703bc368155909b4f1fbd8e3fd69e,https://github.com/jenkinsci/build-monitor-plugin/commit/fe8e0c0bc2cf5a8a1a6fc1575825650c45c89098,Refactored the tests and organised them by the type of headline so that they're easier to navigate.,2016-08-01 22:12:51,jan-molak,"['build-monitor-plugin/src/test/java/com/smartcodeltd/jenkinsci/plugins/buildmonitor/viewmodel/features/HasHeadlineShowingFailedBuildDetailsTest.java', 'build-monitor-plugin/src/test/java/com/smartcodeltd/jenkinsci/plugins/buildmonitor/viewmodel/features/HasHeadlineShowingFixedBuildDetailsTest.java', 'build-monitor-plugin/src/test/java/com/smartcodeltd/jenkinsci/plugins/buildmonitor/viewmodel/features/HasHeadlineShowingRunningBuildDetailsTest.java', 'build-monitor-plugin/src/test/java/com/smartcodeltd/jenkinsci/plugins/buildmonitor/viewmodel/features/HasHeadlineWhichShowsCommittersTest.java', 'build-monitor-plugin/src/test/java/com/smartcodeltd/jenkinsci/plugins/buildmonitor/viewmodel/features/HasHeadlineWhichShowsNothingTest.java']"
gary-rowe/multibit-merchant,https://github.com/gary-rowe/multibit-merchant,a101bf88c5bb08a4f4c4904de41942e18385da3c,61ffa0e3c4f6aff03627ad089fedd4f08231e172,https://github.com/gary-rowe/multibit-merchant/commit/a101bf88c5bb08a4f4c4904de41942e18385da3c,"Interim commit (broken tests)
Refactored to support HalBuilder 2.0.1 - massive changes throughout all layers
Introduced Pagination support
Introduced DDD Entity support for persistence",2013-06-09 09:24:43,Gary Rowe,"['common/mbm-client/src/test/java/org/multibit/mbm/client/handlers/cart/ClientCartHandlerTest.java', 'common/mbm-client/src/test/java/org/multibit/mbm/client/handlers/item/ClientItemCollectionHandlerTest.java', 'common/mbm-client/src/test/java/org/multibit/mbm/client/handlers/item/ClientItemHandlerTest.java', 'common/mbm-client/src/test/java/org/multibit/mbm/client/handlers/user/PublicUserHandlerTest.java', 'common/mbm-client/src/test/java/org/multibit/mbm/interfaces/rest/auth/InMemorySessionTokenCacheTest.java', 'common/mbm-client/src/test/java/org/multibit/mbm/interfaces/rest/auth/hmac/HmacUtilsTest.java', 'mbm/src/test/java/org/multibit/mbm/infrastructure/persistence/hibernate/HibernateCartReadServiceIntegrationTest.java', 'mbm/src/test/java/org/multibit/mbm/infrastructure/persistence/hibernate/HibernateCustomerReadServiceIntegrationTest.java', 'mbm/src/test/java/org/multibit/mbm/infrastructure/persistence/hibernate/HibernateDeliveryReadServiceIntegrationTest.java', 'mbm/src/test/java/org/multibit/mbm/infrastructure/persistence/hibernate/HibernateItemReadServiceIntegrationTest.java', 'mbm/src/test/java/org/multibit/mbm/infrastructure/persistence/hibernate/HibernatePurchaseOrderReadServiceIntegrationTest.java', 'mbm/src/test/java/org/multibit/mbm/infrastructure/persistence/hibernate/HibernateRoleReadServiceIntegrationTest.java', 'mbm/src/test/java/org/multibit/mbm/infrastructure/persistence/hibernate/HibernateSupplierReadServiceIntegrationTest.java', 'mbm/src/test/java/org/multibit/mbm/infrastructure/persistence/hibernate/HibernateUserReadServiceIntegrationTest.java', 'mbm/src/test/java/org/multibit/mbm/interfaces/rest/resources/cart/AdminCartResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/interfaces/rest/resources/cart/PublicCartResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/interfaces/rest/resources/delivery/AdminDeliveryResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/interfaces/rest/resources/delivery/SupplierDeliveryResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/interfaces/rest/resources/item/AdminItemResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/interfaces/rest/resources/item/PublicItemResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/interfaces/rest/resources/purchaseorder/AdminPurchaseOrderResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/interfaces/rest/resources/purchaseorder/SupplierPurchaseOrderResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/interfaces/rest/resources/role/AdminRoleResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/interfaces/rest/resources/user/AdminUserResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/interfaces/rest/resources/user/ClientUserResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/testing/BaseJerseyHmacResourceTest.java']"
gary-rowe/multibit-merchant,https://github.com/gary-rowe/multibit-merchant,ea52ca4500c9c60e2456902370187dee9d23bf06,061805505f14786e1cb028ea8388b8664049a59d,https://github.com/gary-rowe/multibit-merchant/commit/ea52ca4500c9c60e2456902370187dee9d23bf06,"MBM-78 Refactored resource tests to avoid explicit paths where possible
Added initialize() to the DAOs to avoid Hibernate issues",2012-11-11 21:01:48,Gary Rowe,"['mbm/src/test/java/org/multibit/mbm/db/dao/hibernate/HibernateUserDaoIntegrationTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/cart/AdminCartResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/cart/PublicCartResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/delivery/AdminDeliveryResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/delivery/SupplierDeliveryResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/item/AdminItemResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/role/AdminRoleResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/user/AdminUserResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/user/CustomerUserResourceTest.java']"
gary-rowe/multibit-merchant,https://github.com/gary-rowe/multibit-merchant,0f883f86fece63ca682c5e9bc4f5576a0b73108f,0e3955abbf77c1b9d75c975b8826fec554bb226d,https://github.com/gary-rowe/multibit-merchant/commit/0f883f86fece63ca682c5e9bc4f5576a0b73108f,"Introduced mbm-hal module to support common HAL requirements
Introduced mbm-testing to support common test fixtures to make API testing more efficient
Refactored test references to be more portable across JARs",2012-10-16 19:48:26,Gary Rowe,"['common/mbm-client/src/test/java/org/multibit/mbm/client/PublicMerchantClientTest.java', 'mbm/src/test/java/org/multibit/mbm/auth/hmac/HmacUtilsTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/CustomerCartResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/CustomerResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/CustomerUserResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/PublicItemResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/admin/AdminCartResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/admin/AdminItemResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/admin/AdminRoleResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/admin/AdminUserResourceTest.java']"
gary-rowe/multibit-merchant,https://github.com/gary-rowe/multibit-merchant,20eb4bd67a74187ea6473cad61335852baa12c30,64e799307d8c841fb8438144aac97430217cfaf4,https://github.com/gary-rowe/multibit-merchant/commit/20eb4bd67a74187ea6473cad61335852baa12c30,Refactored to introduce a base class for tests,2012-10-16 14:55:13,Gary Rowe,"['common/mbm-client/src/test/java/org/multibit/mbm/client/BaseClientTest.java', 'common/mbm-client/src/test/java/org/multibit/mbm/client/PublicMerchantClientTest.java']"
gary-rowe/multibit-merchant,https://github.com/gary-rowe/multibit-merchant,54ec290efc04da337e856bd5a835b2978012183c,3747b1170865880252e6d864d2c58351fb649c4e,https://github.com/gary-rowe/multibit-merchant/commit/54ec290efc04da337e856bd5a835b2978012183c,"MultiBitMerchant-4
Fixing tests
Refactored BaseResource methods to avoid unnecessary restriction in generic type",2012-10-02 09:27:27,Gary Rowe,"['mbm/src/test/java/org/multibit/mbm/api/request/CustomerCreateCartRequestTest.java', 'mbm/src/test/java/org/multibit/mbm/api/request/admin/AdminCreateUserRequestTest.java', 'mbm/src/test/java/org/multibit/mbm/api/response/hal/AdminUserBridgeTest.java', 'mbm/src/test/java/org/multibit/mbm/api/response/hal/CustomerCartBridgeTest.java', 'mbm/src/test/java/org/multibit/mbm/api/response/hal/CustomerUserBridgeTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/CustomerUserResourceTest.java', 'mbm/src/test/java/org/multibit/mbm/resources/admin/AdminUserResourceTest.java']"
astamuse/asta4d,https://github.com/astamuse/asta4d,555dbf3e9c486250d9c352965338c420ae55d618,ecb083e8fa288e16b3eddbc4467ed455f48d7749,https://github.com/astamuse/asta4d/commit/555dbf3e9c486250d9c352965338c420ae55d618,refactor RenderTesterTest,2015-12-16 11:27:52,e-ryu,['asta4d-core/src/test/java/com/astamuse/asta4d/test/unit/RenderTesterTest.java']
astamuse/asta4d,https://github.com/astamuse/asta4d,16b6d132baae1427ad2bc8c861fc7579c15f4a5f,5277619144d7a5e7776ba2ac3e3d679e336350ba,https://github.com/astamuse/asta4d/commit/16b6d132baae1427ad2bc8c861fc7579c15f4a5f,fix failed test by refactoring,2014-10-28 10:07:20,e-ryu,"['asta4d-web/src/test/java/com/astamuse/asta4d/web/test/form/MultiStepFormTest.java', 'asta4d-web/src/test/java/com/astamuse/asta4d/web/test/form/OneStepFormTest.java']"
astamuse/asta4d,https://github.com/astamuse/asta4d,93763a1821a8d448f477468fcd8ca920e79f12b8,a153ab156fba27f1a6c87cab7a78307c06659e4d,https://github.com/astamuse/asta4d/commit/93763a1821a8d448f477468fcd8ca920e79f12b8,and a test for emebed not found and did some test source refactoring,2014-10-03 05:44:04,e-ryu,"['asta4d-core/src/test/java/com/astamuse/asta4d/test/render/AdvancedRenderingTest.java', 'asta4d-core/src/test/java/com/astamuse/asta4d/test/render/AdvancedSnippetTest.java', 'asta4d-core/src/test/java/com/astamuse/asta4d/test/render/ComponentRenderingTest.java', 'asta4d-core/src/test/java/com/astamuse/asta4d/test/render/ContextBindDataTest.java', 'asta4d-core/src/test/java/com/astamuse/asta4d/test/render/ExternalizeMessageTest.java', 'asta4d-core/src/test/java/com/astamuse/asta4d/test/render/InjectTest.java', 'asta4d-core/src/test/java/com/astamuse/asta4d/test/render/ParallelTest.java', 'asta4d-core/src/test/java/com/astamuse/asta4d/test/render/RenderingTest.java', 'asta4d-core/src/test/java/com/astamuse/asta4d/test/render/ResolveTemplateByLocaleTest.java', 'asta4d-core/src/test/java/com/astamuse/asta4d/test/render/SimpleSnippetRenderingTest.java', 'asta4d-core/src/test/java/com/astamuse/asta4d/test/render/TemplateExtractionTest.java', 'asta4d-web/src/test/java/com/astamuse/asta4d/web/test/form/MultiStepFormTest.java', 'asta4d-web/src/test/java/com/astamuse/asta4d/web/test/form/OneStepFormTest.java', 'asta4d-web/src/test/java/com/astamuse/asta4d/web/test/form/field/CheckboxTest.java', 'asta4d-web/src/test/java/com/astamuse/asta4d/web/test/form/field/HiddenTest.java', 'asta4d-web/src/test/java/com/astamuse/asta4d/web/test/form/field/InputDefaultTest.java', 'asta4d-web/src/test/java/com/astamuse/asta4d/web/test/form/field/PasswordTest.java', 'asta4d-web/src/test/java/com/astamuse/asta4d/web/test/form/field/RadioTest.java', 'asta4d-web/src/test/java/com/astamuse/asta4d/web/test/form/field/SelectMultipleTest.java', 'asta4d-web/src/test/java/com/astamuse/asta4d/web/test/form/field/SelectSingleTest.java', 'asta4d-web/src/test/java/com/astamuse/asta4d/web/test/form/field/TextareaTest.java', 'asta4d-web/src/test/java/com/astamuse/asta4d/web/test/render/message/DefaultMessageRendererOverrideTest.java', 'asta4d-web/src/test/java/com/astamuse/asta4d/web/test/render/message/DefaultMessageRendererTest.java']"
astamuse/asta4d,https://github.com/astamuse/asta4d,80ad720e12abba9431954551827d196c90190fa8,f9790b4d8a0116efa860433eb8e17cc1677fd4fc,https://github.com/astamuse/asta4d/commit/80ad720e12abba9431954551827d196c90190fa8,add more tests and source refactoring,2014-10-01 10:22:21,e-ryu,['asta4d-web/src/test/java/com/astamuse/asta4d/web/test/form/field/CheckBoxTest.java']
astamuse/asta4d,https://github.com/astamuse/asta4d,aeb14b15e14a603f3dcdcd1ffd883994d1cbe20d,d80b14299eb48884d75363c840aea08d6637b62e,https://github.com/astamuse/asta4d/commit/aeb14b15e14a603f3dcdcd1ffd883994d1cbe20d,refactor rendering test mechanism for better test support,2014-01-02 07:30:05,e-ryu,['asta4d-core/src/test/java/com/astamuse/asta4d/test/unit/RenderTesterTest.java']
ragnor/simple-spring-memcached,https://github.com/ragnor/simple-spring-memcached,527b7b1de4f378788b527f5edc60b0d7686f080f,81a8406532b62a67c307575654a4e8df6f17d7de,https://github.com/ragnor/simple-spring-memcached/commit/527b7b1de4f378788b527f5edc60b0d7686f080f,"Update Java to 1.8, update mockito and easymock, refactor test code to
avoid using deprecated methods",2017-12-12 19:47:23,ragnor,"['simple-spring-memcached/src/test/java/com/google/code/ssm/CacheFactoryDisabledTest.java', 'simple-spring-memcached/src/test/java/com/google/code/ssm/CacheFactoryTest.java', 'simple-spring-memcached/src/test/java/com/google/code/ssm/SettingsTest.java', 'simple-spring-memcached/src/test/java/com/google/code/ssm/aop/ReadThroughMultiCacheAdviceCoordTest.java', 'spring-cache-integration-test/src/test/java/com/google/code/ssm/spring/test/CacheProviderErrorsTest.java']"
ragnor/simple-spring-memcached,https://github.com/ragnor/simple-spring-memcached,cb890d95ec66dcd1676cafb036d15772908b3e1f,39a38f4a93dcb82163f968f8c18b4cd05f92eae9,https://github.com/ragnor/simple-spring-memcached/commit/cb890d95ec66dcd1676cafb036d15772908b3e1f,"More junit tests, small refactoring",2012-07-22 21:22:44,ragnor,"['simple-spring-memcached/src/test/java/com/google/code/ssm/aop/CacheBaseTest.java', 'simple-spring-memcached/src/test/java/com/google/code/ssm/json/ClassAliasIdResolverTest.java', 'simple-spring-memcached/src/test/java/com/google/code/ssm/json/ClassAliasTypeResolverBuilderTest.java']"
ragnor/simple-spring-memcached,https://github.com/ragnor/simple-spring-memcached,880a8f90e4f768da41282fe0a5ee0206989efe64,1582399b888f7f53f18d7671fb6afa8f8e1e0098,https://github.com/ragnor/simple-spring-memcached/commit/880a8f90e4f768da41282fe0a5ee0206989efe64,"More tesing done.  But, not gonna unit-test the main method. (It is too difficult to test, and hard to refactory at this point. Integration tests will cover it appropriately.)",2008-11-16 03:56:27,nelz9999,['simple-spring-memcached/src/test/java/net/nelz/simplesm/aop/ReadThroughMultiCacheTest.java']
ragnor/simple-spring-memcached,https://github.com/ragnor/simple-spring-memcached,4f7384f46299aab21531e05f2ee1ff7b1394f339,dac0e951d937bf8c1d0a6408d0141346dcc6debe,https://github.com/ragnor/simple-spring-memcached/commit/4f7384f46299aab21531e05f2ee1ff7b1394f339,A little bit more refactoring and testing.,2008-10-27 06:32:31,nelz9999,"['src/test/java/net/nelz/simplesm/aop/IndividualCacheObjectIdTest.java', 'src/test/java/net/nelz/simplesm/aop/IndividualCacheTest.java']"
ragnor/simple-spring-memcached,https://github.com/ragnor/simple-spring-memcached,dac0e951d937bf8c1d0a6408d0141346dcc6debe,62ccb5371ed6d9c7387ae89468b52a0f74a53e90,https://github.com/ragnor/simple-spring-memcached/commit/dac0e951d937bf8c1d0a6408d0141346dcc6debe,Refactoring and testing the bejeezus outta the key generation.,2008-10-27 01:34:09,nelz9999,"['src/test/java/net/nelz/simplesm/aop/IndividualCacheKeyObjectTest.java', 'src/test/java/net/nelz/simplesm/aop/IndividualCacheTest.java']"
mscharhag/oleaster,https://github.com/mscharhag/oleaster,97b16cf61d83298e7ddd42d959b899d138ec77b6,7d8bb5e463f5c25d587bee72f44024a936a650bb,https://github.com/mscharhag/oleaster/commit/97b16cf61d83298e7ddd42d959b899d138ec77b6,Refactored test to use static functions and removed unneeded blocks again.,2017-03-27 10:46:02,Peter Klijn,['oleaster-runner/src/test/java/com/mscharhag/oleaster/runner/SuiteDefinitionEvaluatorTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,4948cae75e55daeb86c820a881a40b5305d29591,bf6280987976031ef05e9dde161ff39b51cdade8,https://github.com/xwiki-attic/xwiki-enterprise/commit/4948cae75e55daeb86c820a881a40b5305d29591,"XWIKI-12388: Use the refactoring API for the top menu actions (copy, rename, delete)
- Fixed test that was expecting the target space to be an unescaped name in the copy UI but which should now be an escaped space reference instead",2015-08-07 12:46:22,Eduard Moraru,['xwiki-enterprise-test/xwiki-enterprise-test-wysiwyg/src/test/it/org/xwiki/test/wysiwyg/ImageTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,4c77667c04fe8c3c5649818734a1ff7308af78cf,ef7f9de481c19910218330a87f37ed3ef58dddbc,https://github.com/xwiki-attic/xwiki-enterprise/commit/4c77667c04fe8c3c5649818734a1ff7308af78cf,"[Misc] Continue moving Admin App tests to platform by moving UserProfileTest
* Needed to refactor 3 other tests that were using user profile PO and not really needing them
* Had to move AttachmentSelector.xml from enterprise to platform too in a new module
* Moved user profile PO which were wrongly located in platform-administration
* Added missing dependencies
* Moved ChangePasswordPage PO which was wrongly in platform-test
* Added new createUser API in TestUtils to easily create users with passed xobject properties",2013-03-10 09:28:34,Vincent Massol,"['xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/EditInlineTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/EditWYSIWYGTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/administration/UserProfileTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/appwithinminutes/UserClassFieldTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,f4bf28e713a35f17970c75d493246c0e35a79206,81c487ab90cb9ef5b48769a0df9c6fdc05a6883c,https://github.com/xwiki-attic/xwiki-enterprise/commit/f4bf28e713a35f17970c75d493246c0e35a79206,"XWIKI-8418: Refactor the group sheet to use the new user and group picker
* Update the Selenium tests.",2012-11-09 01:07:05,Marius Dumitru Florea,['xwiki-enterprise-test/xwiki-enterprise-test-selenium/src/test/it/org/xwiki/test/selenium/UsersGroupsRightsManagementTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,d8e6537c246bffe1279a3bd14f172f340e12265d,271b66914fa771c1229ac1d077f73ab0afbd77b3,https://github.com/xwiki-attic/xwiki-enterprise/commit/d8e6537c246bffe1279a3bd14f172f340e12265d,"[Misc] Reverting commit, the test actually moves the Quick Links panel from the right to the left and the test failure is caused by the refactoring of the Panels done recently when moving them to a UI Extension",2012-10-22 13:14:19,Vincent Massol,['xwiki-enterprise-test/xwiki-enterprise-test-selenium/src/test/it/org/xwiki/test/selenium/AdministrationTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,ab9f080e72c9295e888d1d32d45639a64e92b35d,4f5a55187898078f64c1dff7885da92aa2b94de9,https://github.com/xwiki-attic/xwiki-enterprise/commit/ab9f080e72c9295e888d1d32d45639a64e92b35d,"XE-1196: Add repository test helpers
More refactoring",2012-06-26 08:56:11,tmortagne,"['xwiki-enterprise-test/xwiki-enterprise-test-extension/src/test/it/org/xwiki/test/ui/AbstractExtensionAdminAuthenticatedTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-extension/src/test/it/org/xwiki/test/ui/repository/RepositoryTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,ffee86aacfa148b68ddb7c9ae27cbb2f7d45af5e,b724383b5d131504fc371c1f0104c07aaa428c4d,https://github.com/xwiki-attic/xwiki-enterprise/commit/ffee86aacfa148b68ddb7c9ae27cbb2f7d45af5e,XWIKI-7943: Impossible to save very large pages in jetty -- refactored test and fixed return code which should be 302,2012-06-19 19:52:09,Caleb James DeLisle,"['xwiki-enterprise-test/xwiki-enterprise-test-storage/src/test/it/org/xwiki/test/storage/DocumentTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-storage/src/test/it/org/xwiki/test/storage/framework/AbstractTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,0b8ba580230fbac8412ae23f10d40dc90aa53e43,d83741113c7802f5b7dabcc3027c1b3f94227fa9,https://github.com/xwiki-attic/xwiki-enterprise/commit/0b8ba580230fbac8412ae23f10d40dc90aa53e43,[misc] Refactored storage test to be more CSRF protection - friendly,2011-07-05 02:24:16,Alex Busenius,"['xwiki-enterprise-test/xwiki-enterprise-test-storage/src/test/it/org/xwiki/test/storage/AttachmentTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-storage/src/test/it/org/xwiki/test/storage/DocumentTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-storage/src/test/it/org/xwiki/test/storage/framework/AbstractTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,bcff5eac4a798ced64dd31fa8cbfe8d354cfbfcd,bb55d55c63a91285f7c331770d68a80130f0f3bc,https://github.com/xwiki-attic/xwiki-enterprise/commit/bcff5eac4a798ced64dd31fa8cbfe8d354cfbfcd,Fixing flickering test. It seems the test fails only with Main.WebHome. I've tried other pages and 20 repeats and I got no failures. With Main.WebHome I constantly get ~6 failures in 20 runs. The way the explorer tree is updated is not clean and is prone to race conditions. Refactoring it is dangerous so I'm doing this easy fix for now.,2011-06-09 17:10:47,Marius Dumitru Florea,['xwiki-enterprise-test/xwiki-enterprise-test-wysiwyg/src/test/it/org/xwiki/test/wysiwyg/LinkTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,34db2de8e14f74316198f5b0e462c8a3c5c9e5df,643a938df046f7d1b59dea47b12f55d1cd686781,https://github.com/xwiki-attic/xwiki-enterprise/commit/34db2de8e14f74316198f5b0e462c8a3c5c9e5df,"XE-941: BreadcrumbsTest#testBreadcrumbs() flickers.

* First step in trying to remove the flicker
* Also refactored BaseElement waitFor* methods",2011-06-06 16:58:44,Vincent Massol,"['xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/BreadcrumbsTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/annotations/AnnotationsTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,785b4a1972fab8a2bf9838e7ec81d3a7e107b945,962837af7589652d93b38815949ce42b7dfc03bb,https://github.com/xwiki-attic/xwiki-enterprise/commit/785b4a1972fab8a2bf9838e7ec81d3a7e107b945,Refactoring to share the test name for all tests,2011-05-31 18:08:00,Vincent Massol,"['xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/AttachmentTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/CreatePageTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/EditClassTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/EditWYSIWYGTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/framework/AbstractTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/panels/NewPagePanelTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/tag/AddRemoveTagsTest.java', 'xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/xe/SpacesTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,c7613a0a3e7558923747459818a71a71253f2fb1,40b14a3e40784da6c32d72e5491d15de8d3f286c,https://github.com/xwiki-attic/xwiki-enterprise/commit/c7613a0a3e7558923747459818a71a71253f2fb1,Refactorin to allow testing with more syntaxes in the future,2011-05-25 09:37:51,Vincent Massol,['xwiki-enterprise-test/xwiki-enterprise-test-ui/src/test/it/org/xwiki/test/ui/SectionTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,7d25437a13fcd56082e3571eff0e2675c8b4da41,0532002a397865ee96d50ae501fca9735a3639d8,https://github.com/xwiki-attic/xwiki-enterprise/commit/7d25437a13fcd56082e3571eff0e2675c8b4da41,"Refactoring: aligned method naming for UI actions + improve commit done in rev 34457 for AllDocsTest (we test that the action columns is avail for all users - logged and not logged. The test should be further improved to check the available actions).

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@34486 f329d543-caf0-0310-9063-dda96c69346f",2011-02-08 14:15:20,vmassol,"['distribution-test/ui-tests/src/test/it/org/xwiki/test/ui/CreatePageTest.java', 'distribution-test/ui-tests/src/test/it/org/xwiki/test/ui/EditInlineTest.java', 'distribution-test/ui-tests/src/test/it/org/xwiki/test/ui/EditObjectsTest.java', 'distribution-test/ui-tests/src/test/it/org/xwiki/test/ui/EditWikiTest.java', 'distribution-test/ui-tests/src/test/it/org/xwiki/test/ui/LoginTest.java', 'distribution-test/ui-tests/src/test/it/org/xwiki/test/ui/SectionTest.java', 'distribution-test/ui-tests/src/test/it/org/xwiki/test/ui/scheduler/SchedulerTest.java', 'distribution-test/ui-tests/src/test/it/org/xwiki/test/ui/xe/AllDocsTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,468f4b1703f2790e117702ebaaaf32e1e3be46b7,788421b2023d142cf169a5f6eebd29bfd582d7e5,https://github.com/xwiki-attic/xwiki-enterprise/commit/468f4b1703f2790e117702ebaaaf32e1e3be46b7,"XE-742: First batch of ui-tests for annotations
Done.
Patch from Sorin Burjan applied with some refactoring.

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@32556 f329d543-caf0-0310-9063-dda96c69346f",2010-11-05 17:42:49,sdumitriu,['distribution-test/ui-tests/src/test/it/org/xwiki/test/ui/annotations/AnnotationsTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,9f6fbe47dd9c65ecaf2c7468a910457dabb72ec9,4faaa45ee4ff6ce59a88f1980f7b7f86903084b6,https://github.com/xwiki-attic/xwiki-enterprise/commit/9f6fbe47dd9c65ecaf2c7468a910457dabb72ec9,"Fixed build after removal of rquo.gif and lquo.gif from Main.RecentChanges (see XE-514: Refactor Dashboard to use the Activity Stream). Missed one test.

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@32320 f329d543-caf0-0310-9063-dda96c69346f",2010-11-02 14:33:51,vmassol,['distribution-test/rest-tests/src/test/it/org/xwiki/test/rest/WikisResourceTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,4faaa45ee4ff6ce59a88f1980f7b7f86903084b6,8872ae51d0a60f5840f66a94d1318cb85f6adf56,https://github.com/xwiki-attic/xwiki-enterprise/commit/4faaa45ee4ff6ce59a88f1980f7b7f86903084b6,"Refactor the test a bit by introducing a clickWantedLink API in ViewPage

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@32319 f329d543-caf0-0310-9063-dda96c69346f",2010-11-02 14:21:51,vmassol,['distribution-test/ui-tests/src/test/it/org/xwiki/test/ui/CreatePageTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,4cf7622a434a3620a5461c7003654d5392ab6207,dba555e053077f8a08cbd65e16a272b1d71e854e,https://github.com/xwiki-attic/xwiki-enterprise/commit/4cf7622a434a3620a5461c7003654d5392ab6207,"Refactoring: improved test

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@30039 f329d543-caf0-0310-9063-dda96c69346f",2010-07-07 11:59:07,vmassol,['distribution-test/ui-tests/src/test/it/org/xwiki/it/ui/CreatePageTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,3a1c200cf9200273605eb27a38d2f1460c99197c,f397806aa6455f5af0aaf46c73c44382494a6707,https://github.com/xwiki-attic/xwiki-enterprise/commit/3a1c200cf9200273605eb27a38d2f1460c99197c,"[misc] Refactored test

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@30002 f329d543-caf0-0310-9063-dda96c69346f",2010-07-05 23:16:04,sdumitriu,['distribution-test/ui-tests/src/test/it/org/xwiki/it/ui/EditObjectsTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,db84fe0abae19dc2e72362c454692766d95e7230,3688e5ab6bbc3de27052b192b837ca45c9e44ad9,https://github.com/xwiki-attic/xwiki-enterprise/commit/db84fe0abae19dc2e72362c454692766d95e7230,"Tests: Refactored test framework.

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@29262 f329d543-caf0-0310-9063-dda96c69346f",2010-06-03 08:15:31,cjdelisle,['distribution-test/ui-tests/src/test/it/org/xwiki/it/ui/RegisterTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,c1a0fbcda54ecd2e1fcbec80b041c7597b60e700,a6624aecede9726f02024b72365a26fab1adee31,https://github.com/xwiki-attic/xwiki-enterprise/commit/c1a0fbcda54ecd2e1fcbec80b041c7597b60e700,"XWIKI-4753: Refactor old model to use the new Entity Reference classes

* Fix XMLRPC test that I had changed and that I'm reverting back since apparently I fixed some behavior... (removed comment leftover)

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@26270 f329d543-caf0-0310-9063-dda96c69346f",2010-01-21 08:20:26,vmassol,['distribution-test/xmlrpc-tests/src/test/it/org/xwiki/xmlrpc/PagesTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,a6624aecede9726f02024b72365a26fab1adee31,8e1c5ef63c0eaf247bfa84c08b22e899d9bed81f,https://github.com/xwiki-attic/xwiki-enterprise/commit/a6624aecede9726f02024b72365a26fab1adee31,"XWIKI-4753: Refactor old model to use the new Entity Reference classes

* Fix REST test that I had changed and that I'm reverting back since apparently I fixed some behavior...

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@26269 f329d543-caf0-0310-9063-dda96c69346f",2010-01-21 08:12:54,vmassol,['distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/PageResourceTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,8e1c5ef63c0eaf247bfa84c08b22e899d9bed81f,e7bd3eb601650552b373ad438751eaa597b5894b,https://github.com/xwiki-attic/xwiki-enterprise/commit/8e1c5ef63c0eaf247bfa84c08b22e899d9bed81f,"XWIKI-4753: Refactor old model to use the new Entity Reference classes

* Fix XMLRPC test that I had changed and that I'm reverting back since apparently I fixed some behavior...

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@26268 f329d543-caf0-0310-9063-dda96c69346f",2010-01-21 08:04:12,vmassol,['distribution-test/xmlrpc-tests/src/test/it/org/xwiki/xmlrpc/PagesTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,0fe2f15f872d8a4edb1d6a77292d196488085611,67924e85ef598aa39cabead14a881cb3d8839f6b,https://github.com/xwiki-attic/xwiki-enterprise/commit/0fe2f15f872d8a4edb1d6a77292d196488085611,"XE-562 :  Add web content accessibility validation to the functional tests

Refactoring.

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@25397 f329d543-caf0-0310-9063-dda96c69346f",2009-12-02 13:33:04,jvdrean,"['distribution-test/webstandards-tests/src/test/it/com/xpn/xwiki/it/DutchWebGuidelinesValidationTest.java', 'distribution-test/webstandards-tests/src/test/it/com/xpn/xwiki/it/XHTMLValidationTest.java', 'distribution-test/webstandards-tests/src/test/it/com/xpn/xwiki/it/framework/AbstractValidationTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,b799351f9ec08257afd5475acb04bc518ffd5ef6,aae87cd6ea5a0cf34f791e20ba321ade579f982b,https://github.com/xwiki-attic/xwiki-enterprise/commit/b799351f9ec08257afd5475acb04bc518ffd5ef6,"[Refactoring] Removed the usage of org.xwiki.rest.it.framework.TestUtils to print a banner on System.out because this class no longer exists after the refactoring of the REST API integration tests.


git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@25354 f329d543-caf0-0310-9063-dda96c69346f",2009-11-28 17:13:37,fmancinelli,['distribution-test/cluster-tests/src/test/it/com/xpn/xwiki/it/DocumentCacheTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,6f5e2d00bbcc90c21ef7c1d20c4d798f18567095,89c4cb3822e09685aca1d75eec087625cd60eddb,https://github.com/xwiki-attic/xwiki-enterprise/commit/6f5e2d00bbcc90c21ef7c1d20c4d798f18567095,"Refactored a WYSIWYG selenium test and improved another.

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@24389 f329d543-caf0-0310-9063-dda96c69346f",2009-10-13 11:32:12,mflorea,"['distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/ImportTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/StandardFeaturesTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,b9e685ea8ad8da2aced9228de61cc04f5ce22502,fc75c149ff408c89779a168b06d3224a283904ab,https://github.com/xwiki-attic/xwiki-enterprise/commit/b9e685ea8ad8da2aced9228de61cc04f5ce22502,"XE-541: Refactor the WYSIWYG selenium tests to allow global setUp for all tests
* Changed tests adding strategy to create a single suite for all wysiwyg tests, in AllTests, and have the skin executor set for this entire suite
* Added WysiwygTestSetup to be able to do global wysiwyg tests setup


git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@24290 f329d543-caf0-0310-9063-dda96c69346f",2009-10-07 09:16:15,lucaa,"['distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/AlignmentTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/CacheTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/ColorTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/FontTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/ImageTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/LineTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/LinkTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/ListTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/MacroTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/NativeJavaScriptApiTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/RegularUserTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/RemoveFormattingTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/StandardFeaturesTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/SubmitTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/TableTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/TabsTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,fc75c149ff408c89779a168b06d3224a283904ab,775adaf78fd3969d0f1adcef5f40035fac13667c,https://github.com/xwiki-attic/xwiki-enterprise/commit/fc75c149ff408c89779a168b06d3224a283904ab,"XWIKI-4412: Documents in blacklisted spaces shouldn't be displayed in the wikilink dialog search results
* Added functional tests
Added support for tests using a regular user instead of an admin as all the edit tests do for the moment.
Refactored some of the login functions.
Fixed formatting.


git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@24274 f329d543-caf0-0310-9063-dda96c69346f",2009-10-06 15:00:53,lucaa,"['distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/RegisterTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/RegularUserTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,fa7f99d5ccb0304ae64e7e14f351f7976b6feefb,c7e266fce4d13011aa03bf433f9d7932a99230f0,https://github.com/xwiki-attic/xwiki-enterprise/commit/fa7f99d5ccb0304ae64e7e14f351f7976b6feefb,"XE-519: Refactor XHTML validity test based on real full page instead of rendered using XMLRPC
* improve log

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@24103 f329d543-caf0-0310-9063-dda96c69346f",2009-09-28 15:28:09,tmortagne,['distribution-test/misc-tests/src/test/it/com/xpn/xwiki/it/XhtmlValidityTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,c7e266fce4d13011aa03bf433f9d7932a99230f0,ce452c32681786d5176d592e0d219f6ec8977913,https://github.com/xwiki-attic/xwiki-enterprise/commit/c7e266fce4d13011aa03bf433f9d7932a99230f0,"XE-519: Refactor XHTML validity test based on real full page instead of rendered using XMLRPC

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@24098 f329d543-caf0-0310-9063-dda96c69346f",2009-09-28 14:41:13,tmortagne,"['distribution-test/misc-tests/src/test/it/com/xpn/xwiki/it/XhtmlValidityTest.java', 'distribution-test/xmlrpc-tests/src/test/it/com/xpn/xwiki/it/xmlrpc/OrphanedPageTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,6a691b867cd75a873afeea6734e601fe26780f09,558e7b9c3fca92053be228426d0e3570a530de71,https://github.com/xwiki-attic/xwiki-enterprise/commit/6a691b867cd75a873afeea6734e601fe26780f09,"Try to fix the test's stability by not typing the letter 'y'. See http://jira.openqa.org/browse/SEL-710

* Refactored to use new API * I don't see how CacheTest can fail. Apparently createPage() failed when it clicked on Save & View and waited for the page to load. The page never loaded and stayed in edit mode. It's as if the click failed for some reason...  Note: I think this test shouldn't be a functional test. Actually I don't even understand why it's a functional test.  

Merged from 2.0 branch (revs 24085, 24086)


git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@24087 f329d543-caf0-0310-9063-dda96c69346f",2009-09-27 14:01:49,vmassol,"['distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/AllDocsTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/CacheTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,6a601c83fc3d3128782bcc07e171caf77ebbc1fd,0954cf0953216874eae567d45a1acf3109e9eb53,https://github.com/xwiki-attic/xwiki-enterprise/commit/6a601c83fc3d3128782bcc07e171caf77ebbc1fd,"* Fixed login in Colibri skin executor so that it works from anywhere
* Refactored LDAP auth test to use the new apis

Note that the LDAP test still fail because the XWikiAdminGroup page fails to load properly. The livetable has the loading message displayed and hangs.

Merged from 2.0 branch

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@23858 f329d543-caf0-0310-9063-dda96c69346f",2009-09-23 13:57:35,vmassol,['distribution-test/ldap-tests/src/test/it/com/xpn/xwiki/it/LDAPAuthTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,7cf22b32110090eaa7cbfb50e973f714b654449a,a77bac8e9ec476957797fa58d99ecd4a45928c29,https://github.com/xwiki-attic/xwiki-enterprise/commit/7cf22b32110090eaa7cbfb50e973f714b654449a,"XWIKI-3766: Faster navigation for image and link insertion
* Added functional tests
Updated tests to match the refactored error classnames.
Improved validation tests to also test the error markers on appropriate fields in addition to the error messages.


git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@23454 f329d543-caf0-0310-9063-dda96c69346f",2009-09-11 08:41:33,lucaa,"['distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/ImageTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/LinkTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/MacroTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/TableTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,75b7915667acc1b8aad29333ff77b467b6fec6e9,8e17c32704904e2a0367b9c55e1a17967c782ce5,https://github.com/xwiki-attic/xwiki-enterprise/commit/75b7915667acc1b8aad29333ff77b467b6fec6e9,"Fixed failing selenium tests due to r23255 refactoring.

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@23310 f329d543-caf0-0310-9063-dda96c69346f",2009-09-07 12:27:49,mflorea,['distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/TabsTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,850d09896b802f11f7d1c12bb1fc4a17ac20458e,0e78b225bc561ee89e7ffe011a605c0e151ee6ce,https://github.com/xwiki-attic/xwiki-enterprise/commit/850d09896b802f11f7d1c12bb1fc4a17ac20458e,"[build] Fixed test after watchlist plugin refactoring

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@22944 f329d543-caf0-0310-9063-dda96c69346f",2009-08-26 14:38:13,jvdrean,['distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/WatchListTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,eb73bb4c9fdc7a93acb54be0c7dc7c26fefd21d2,abff1fed082dc1eb87b83bd90dec11a56e05a0a6,https://github.com/xwiki-attic/xwiki-enterprise/commit/eb73bb4c9fdc7a93acb54be0c7dc7c26fefd21d2,"[build] Refactored to make each test independent from the others.

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@22624 f329d543-caf0-0310-9063-dda96c69346f",2009-08-12 16:23:53,jvdrean,['distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/SectionTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,63693365c65de5784193106e84f80e8c5189f14a,2ece2a5734f6e179c966e4c4597ff71933b63ccc,https://github.com/xwiki-attic/xwiki-enterprise/commit/63693365c65de5784193106e84f80e8c5189f14a,"XWIKI-4068: Allow the page to link to to be searched for or selected from the most recently edited pages
* Added functional tests.
Refactored image and link tests for improved readability.


git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@21935 f329d543-caf0-0310-9063-dda96c69346f",2009-07-14 13:45:12,lucaa,"['distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/ImageSupportTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/LinkSupportTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,68527299c1cf336736c071a1ebe99b2230734c26,1b46c2d6beae6d1dde3040591b2e0732ab652022,https://github.com/xwiki-attic/xwiki-enterprise/commit/68527299c1cf336736c071a1ebe99b2230734c26,"XWIKI-3511 : New space inserted in the suggest input is not returned correctly
XWIKI-3512 : Clicking on a space in the tree prints only the space name in the suggest input, while typing the same in the input does not yield the same result

Refactored xwikiexplorer: the tree is now only a helper, the input value is the reference.
Refactored XWiki.getResource, added functional tests.

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@20076 f329d543-caf0-0310-9063-dda96c69346f",2009-05-18 11:20:55,jvdrean,"['distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/XWikiJavaScriptComponentsTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/LinkSupportTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,46218f7a8467152a6d157c659990917531947b20,14e93dd8a0d750c4ef1613d31585b2c392b473eb,https://github.com/xwiki-attic/xwiki-enterprise/commit/46218f7a8467152a6d157c659990917531947b20,"Refactor the tests in order to be able to run them in the background.

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@19243 f329d543-caf0-0310-9063-dda96c69346f",2009-04-30 21:37:32,mflorea,"['distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/LinkSupportTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/MacroSupportTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/RemoveFormattingSupportTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,14e93dd8a0d750c4ef1613d31585b2c392b473eb,70bb6b56ce2e8462cc423177f7890930a6342116,https://github.com/xwiki-attic/xwiki-enterprise/commit/14e93dd8a0d750c4ef1613d31585b2c392b473eb,"XWIKI-3712: Create an improved Image & Attachment Insertion UI
* Refactored old tests to handle new interface
* Added new tests for some components (without file upload, and current page attachments selection)
XWIKI-3676: Edit link does not set the edited page correctly when the reference is relative
* Added tests


git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@19233 f329d543-caf0-0310-9063-dda96c69346f",2009-04-30 18:48:51,lucaa,['distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/LinkSupportTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,a9ec4854d19121f5715f0cc3cd6c69934bbe5615,7d47ea270dd385710fe83aba7ebceef64403d264,https://github.com/xwiki-attic/xwiki-enterprise/commit/a9ec4854d19121f5715f0cc3cd6c69934bbe5615,"XWIKI-3542: Allow attachment upload in REST API using multipart form data

Added integration tests.

[Minor] Fixed a test that was failing because of default XAR refactoring (WikisResourceTest.testPages)

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@18355 f329d543-caf0-0310-9063-dda96c69346f",2009-04-08 22:00:31,fmancinelli,"['distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/AttachmentsResourceTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/WikisResourceTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,b00e338e9bd7f09c45d4d41ef4cd140c3aa3378b,8bfd4cd30aa3346c3e8e1d096633d18b27065fc2,https://github.com/xwiki-attic/xwiki-enterprise/commit/b00e338e9bd7f09c45d4d41ef4cd140c3aa3378b,"* Fixed StandardFeaturesTest.testDialogContentIsPreservedAfterBeingMoved() to close the dialog after using it, otherwise it can interfere with other tests running after it.
* Added functions in the framework for manipulating dialogs and refactored test classes to use these functions.


git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@18263 f329d543-caf0-0310-9063-dda96c69346f",2009-04-06 20:21:32,lucaa,"['distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/LinkSupportTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/MacroSupportTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/StandardFeaturesTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,e9cbe88de07779f9408199b429332b91c43e5934,9225329448473ac90616b58164bfcc56e5628764,https://github.com/xwiki-attic/xwiki-enterprise/commit/e9cbe88de07779f9408199b429332b91c43e5934,"[Minor] Modified pom.xml and test code after the shared tests refactoring.

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@18009 f329d543-caf0-0310-9063-dda96c69346f",2009-03-25 15:47:43,fmancinelli,['distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/AbstractHttpTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,24c860ff3b69b120376c91f94e09de67edafe3a7,a0943e3d33df4d5f451cc1d404e52ea108fa70ae,https://github.com/xwiki-attic/xwiki-enterprise/commit/24c860ff3b69b120376c91f94e09de67edafe3a7,"Refactored tests code:
* Renamed LinkPluginTest to LinkSupportTest for naming consistency accross tests
* Moved generic methods from LinkSupportTest to AbstractWysiwygTestCase
* Added API for testing generated wiki content and setting wiki content and replaced all use cases with calls to this new API


git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@17118 f329d543-caf0-0310-9063-dda96c69346f",2009-03-02 14:00:34,lucaa,"['distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/LinkSupportTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/ListSupportTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/MacroSupportTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/StandardFeaturesTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,a0943e3d33df4d5f451cc1d404e52ea108fa70ae,505fdf5b80b5a80f962204aa2c000b06c637563d,https://github.com/xwiki-attic/xwiki-enterprise/commit/a0943e3d33df4d5f451cc1d404e52ea108fa70ae,"Fixed selenium tests after dialog box refactoring


git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@17116 f329d543-caf0-0310-9063-dda96c69346f",2009-03-02 10:21:02,mflorea,"['distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/LinkPluginTest.java', 'distribution-test/wysiwyg-tests/src/test/it/com/xpn/xwiki/it/selenium/StandardFeaturesTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,03b3cbc0cd96a7aa74e79a8c4369acaf86a998d7,6b9520602b148705da7117179ac2fae7201aa10f,https://github.com/xwiki-attic/xwiki-enterprise/commit/03b3cbc0cd96a7aa74e79a8c4369acaf86a998d7,"[Refactoring] Tests refactoring for taking into account the new infrastructure based on Restlet + JAX-RS + JAXB

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@16929 f329d543-caf0-0310-9063-dda96c69346f",2009-02-18 21:02:22,fmancinelli,"['distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/AbstractHttpTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/AttachmentsResourceTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/ClassesResourceTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/CommentsResourceTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/ObjectsResourceTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/PageResourceTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/PagesResourceTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/RootResourceTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/SpacesResourceTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/WikisResourceTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,c59e85a6e6dff40ced743bf3fec295ba8ddae94d,7f252bf23e5463a80a888e19a5d14ae8b844714d,https://github.com/xwiki-attic/xwiki-enterprise/commit/c59e85a6e6dff40ced743bf3fec295ba8ddae94d,"XWIKI-3102: Develop the initial feature set of the REST API

Code reorganization and refactoring.
Added tests for comments resource.

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@15713 f329d543-caf0-0310-9063-dda96c69346f",2009-01-25 17:46:46,fmancinelli,"['distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/AbstractHttpTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/CommentsResourceTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/PageResourceTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/PagesResourceTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/RootResourceTest.java', 'distribution-test/rest-tests/src/test/it/org/xwiki/rest/it/SpacesResourceTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,f2a9aa003f8721d4e3ea5585d0dbfe06f978a714,dc2b8a8074ee042568564c89b5ee6d52ca095303,https://github.com/xwiki-attic/xwiki-enterprise/commit/f2a9aa003f8721d4e3ea5585d0dbfe06f978a714,"XWIKI-3028: XMLRPC Subsystem refactoring/improvement

- Minor changes to test method signature in order to take into account refactoring made in the XML RPC API
- Added some more tests.

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/enterprise/trunk@14897 f329d543-caf0-0310-9063-dda96c69346f",2008-12-20 21:15:27,fmancinelli,"['distribution-test/xmlrpc-tests/src/test/it/org/xwiki/xmlrpc/AbstractXWikiXmlRpcTest.java', 'distribution-test/xmlrpc-tests/src/test/it/org/xwiki/xmlrpc/AttachmentsTest.java', 'distribution-test/xmlrpc-tests/src/test/it/org/xwiki/xmlrpc/AuthenticationTest.java', 'distribution-test/xmlrpc-tests/src/test/it/org/xwiki/xmlrpc/CommentsTest.java', 'distribution-test/xmlrpc-tests/src/test/it/org/xwiki/xmlrpc/PagesTest.java', 'distribution-test/xmlrpc-tests/src/test/it/org/xwiki/xmlrpc/SearchTest.java', 'distribution-test/xmlrpc-tests/src/test/it/org/xwiki/xmlrpc/SpacesTest.java', 'distribution-test/xmlrpc-tests/src/test/it/org/xwiki/xmlrpc/XWikiClassesTest.java', 'distribution-test/xmlrpc-tests/src/test/it/org/xwiki/xmlrpc/XWikiObjectsTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,d00147ca8fab952c824fc99ec2f5f811533cb039,e5df194aae12a0b3936dc4b69ca4537e7c1d9da4,https://github.com/xwiki-attic/xwiki-enterprise/commit/d00147ca8fab952c824fc99ec2f5f811533cb039,"XE-254: Reduce execution time of Selenium tests

* Starts the Browser only once for the whole test suite. This means tests must be cleanly written since otherwise there'll side effects on the following tests
* Only re-login as admin if not already logged in as admin
* Fixed lots of tests so that they can be executed several times in a row
* Introduced new APIs in AbstractXWikiTestCase and SkinExecutor and started refactoring existing tests to use thel
* Fixed RMUI tests and removed the bad setSpeed() + fixed the TODOs


git-svn-id: https://svn.xwiki.org/svnroot/xwiki/xwiki-products/xwiki-enterprise/trunk@10461 f329d543-caf0-0310-9063-dda96c69346f",2008-06-19 14:36:24,vmassol,"['distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/AccordionsTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/AllDocsTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/BacklinksTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/CacheTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/DeletePageTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/InlineEditorTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/LanguageTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/RegisterTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/UserProfileTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/UsersGroupsRightsManagementTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/ValidationTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/VersionTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/WatchListTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/WikiEditorTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/WysiwygEditorFromWikiTest.java', 'distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/XObjectsTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,cf94624967ae6c58742a64c5c57e3e762ec69d7f,655ff79a73c4586c612c138173db572ac4479f39,https://github.com/xwiki-attic/xwiki-enterprise/commit/cf94624967ae6c58742a64c5c57e3e762ec69d7f,"XE-224 : Write selenium test to verify the behaviour of the AllDocs ajax table

Refactored tests according to http://markmail.org/message/4aokvsst35eency6

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/xwiki-products/xwiki-enterprise/trunk@9242 f329d543-caf0-0310-9063-dda96c69346f",2008-04-18 18:56:13,jvdrean,['distribution-test/selenium-tests/src/test/it/com/xpn/xwiki/it/selenium/AllDocsTest.java']
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,868f8605ea90c231325dcc1d1cd46fa0ef412bc5,e9d52a7e97b3e8cd6e4aa331a47c5c718617a21e,https://github.com/xwiki-attic/xwiki-enterprise/commit/868f8605ea90c231325dcc1d1cd46fa0ef412bc5,"XWIKI-1617: Refactored the implementation of the XMLRPC Confluence API - We are now using the swizzle-confluence data objects on the server too. This simplifies the XML-RPC implementation considerably.
XWIKI-1618: Proper exception handling for XML-RPC code - Further improved.
XWIKI-1663: Improved support for attachments via XML-RPC - Implemented and tested (XWIKI-1528)
XWIKI-1664: Extended the XML-RPC Confluence API - A first skeleton not-yet-working implementation of xwiki objects and classes.

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/xwiki-products/xwiki-enterprise/trunk@4503 f329d543-caf0-0310-9063-dda96c69346f",2007-08-26 17:28:57,hritcu,"['distribution-test/xmlrpc-tests/src/test/it/com/xpn/xwiki/it/xmlrpc/AnonymousAccessTest.java', 'distribution-test/xmlrpc-tests/src/test/it/com/xpn/xwiki/it/xmlrpc/AttachmentsTest.java', 'distribution-test/xmlrpc-tests/src/test/it/com/xpn/xwiki/it/xmlrpc/CommentsTest.java', 'distribution-test/xmlrpc-tests/src/test/it/com/xpn/xwiki/it/xmlrpc/PagesTest.java', 'distribution-test/xmlrpc-tests/src/test/it/com/xpn/xwiki/it/xmlrpc/SpacesTest.java']"
xwiki-attic/xwiki-enterprise,https://github.com/xwiki-attic/xwiki-enterprise,5684651ca58df8a90a95d2066eccbe37bc3c6048,f6eee90435c86b2cfb06ea673581c2542b5743cf,https://github.com/xwiki-attic/xwiki-enterprise/commit/5684651ca58df8a90a95d2066eccbe37bc3c6048,"Created a new incipient functional test for adding spaces and pages (checks the absence of bugs like XWIKI-1521). Minor refactoring of XMLRPC tests.

git-svn-id: https://svn.xwiki.org/svnroot/xwiki/xwiki-products/xwiki-enterprise/trunk@4094 f329d543-caf0-0310-9063-dda96c69346f",2007-08-03 22:28:23,hritcu,"['distribution-test/xmlrpc-tests/src/test/it/com/xpn/xwiki/it/xmlrpc/SpacesTest.java', 'distribution-test/xmlrpc-tests/src/test/it/com/xpn/xwiki/it/xmlrpc/XhtmlValidityTest.java']"
exoplatform/platform,https://github.com/exoplatform/platform,85d035f7637b4a8af913cc44cdd55fd4285eb46d,6afe671f1082788d894171511f953ea25a6fb743,https://github.com/exoplatform/platform/commit/85d035f7637b4a8af913cc44cdd55fd4285eb46d,"PLF-8185 : fix critical Sonar issues (#343)

All of critical Sonar issues found in the Platform project are of type ""Synchronize this lazy initialization of ..."".
A lot of static field are used in the trial/account setup/register setup, which are initialized lazily (not at the declaration time).

This fix refactors this process to remove most of these static fields and methods, and use services instead.
It also adds some unit tests.",2018-10-31 07:23:18,Thomas Delhoménie,['component/common/src/test/java/org/exoplatform/platform/common/account/setup/web/AccountSetupServiceTest.java']
s7/scale7-pelops,https://github.com/s7/scale7-pelops,138b6ef5f2e4087df53d4c846cd48a0395318ebf,4840cd0a725dff9f28bfcf3f1ab9877101d554e0,https://github.com/s7/scale7-pelops/commit/138b6ef5f2e4087df53d4c846cd48a0395318ebf,"Update the CompositeType utility class to throw unchecked exceptions instead Exception
Minor refactoring of the method parseCompositeType
Update unit tests",2011-12-14 19:27:47,me,"['src/test/java/org/scale7/cassandra/pelops/CompositeTypeIntegrationTest.java', 'src/test/java/org/scale7/cassandra/pelops/types/CompositeTypeTest.java']"
apache/wicket,https://github.com/apache/wicket,3928c386259c2df4d0837838c87b57974051ff44,096966363ea3fbbc8bf779971921121a7a60a389,https://github.com/apache/wicket/commit/3928c386259c2df4d0837838c87b57974051ff44,"[WICKET-7069] Refactor `assertTrue(equals())` using `assertEquals` (#601)

* Refactor assertTrue(equals()) using assertEquals

* Refactor throws Exception using assertThrows

* Revert ""Refactor throws Exception using assertThrows""

This reverts commit d667bafbb8081b87fc6dc764f7fc895b066b96d7.

* Fix assertEquals parameters as (expected, actual)

* Fix test case failures by converting tokens into strings",2023-08-24 07:52:31,Taher Ghaleb,['wicket-core/src/test/java/org/apache/wicket/markup/MarkupParserTest.java']
apache/wicket,https://github.com/apache/wicket,0d99b67a741b3c33753638c97dbf5382a2bfcca0,fd890ccc7c787c192f308e9b4c2a64844954ce86,https://github.com/apache/wicket/commit/0d99b67a741b3c33753638c97dbf5382a2bfcca0,"[WICKET-6915] Fileupload2 is copied to wicket (#565)

* [WICKET-6915] commons-fileupload2 copied as-is

* [WICKET-6915] basic refactoring is done

* [WICKET-6915] pom is basically fixed, module-info need to be added

* [WICKET-6915] module-info is created

* [WICKET-6915] attempt to fix tests

* [WICKET-6915] Comments are addressed

* [WICKET-6915] Fileupload2 is updated, compilation errors are fixed",2023-04-20 01:33:56,Maxim Solodovnik,"['wicket-commons-fileupload/src/test/java/org/apache/wicket/commons/fileupload2/DiskFileItemSerializeTest.java', 'wicket-commons-fileupload/src/test/java/org/apache/wicket/commons/fileupload2/FileItemHeadersTest.java', 'wicket-commons-fileupload/src/test/java/org/apache/wicket/commons/fileupload2/MultipartStreamTest.java', 'wicket-commons-fileupload/src/test/java/org/apache/wicket/commons/fileupload2/ParameterParserTest.java', 'wicket-commons-fileupload/src/test/java/org/apache/wicket/commons/fileupload2/jaksrvlt/JakSrvltFileUploadTest.java', 'wicket-core/src/test/java/org/apache/wicket/markup/html/form/upload/FileUploadTest.java']"
apache/wicket,https://github.com/apache/wicket,0f42d3314f1200a3b88f76e435910ef389af6b58,7e83f1a6ba9a8a988d81529e96f6328ba0ffd2be,https://github.com/apache/wicket/commit/0f42d3314f1200a3b88f76e435910ef389af6b58,"[WICKET-6805] Add Cross-Origin Opener Policy and Cross-Origin Embedder Policy support (#442)

* COOP and COEP Implementation  (#5)

* Initial coop implementation

* Fixed typo +reformatting code

* Update wicket-core/src/main/java/org/apache/wicket/coop/CoopConfiguration.java

Co-authored-by: Sal <salchoman@gmail.com>

* Update wicket-core/src/main/java/org/apache/wicket/coop/CoopConfiguration.java

Co-authored-by: Sal <salchoman@gmail.com>

* Updates based on comments on the PR

* Initial COEP implementation that doesn't handle report-to and setting up a reporting endpoint

* Added javadocs and reformatted code

* Fixed typo in javadoc

* Updated valid values for COOP, same-origin-allow-popups instead of same-site

* Made builder methods public so they can be called from init() in a sample app, added default values for builder fields to avoid null pointer exceptions

* making exempted paths a HashSet for faster lookup

* Using Set instead of HashSet in the declaration of exemptedPaths + reformatting code

* Reformatting code to match Wicket's style

* Indentation fix for CoepMode enum

* Added tests for each COOP value, inlined url argument for checkHeaders in tests, formatted log statement to include path variable for exempted paths

Co-authored-by: Sal <salchoman@gmail.com>

* Fixed typo in COEP debug statement

* Refactoring configs into SecuritySettings for COOP and COEP

* Renamed the request cycle listeners and tests with longer names of coop and coep, removed CoopConfiguration and CoepConfiguration files

* Renamed securityInit() method to coopCoepInit()

* Moved adding coop/coep listeners to validetInit in WebApplication

* WICKET-6805 Formatting, cleanup and minor improvements

Co-authored-by: Sal <salchoman@gmail.com>
Co-authored-by: Martin Tzvetanov Grigorov <mgrigorov@apache.org>",2020-08-27 11:59:26,Ecenaz Ozmen,"['wicket-core/src/test/java/org/apache/wicket/coep/CrossOriginEmbedderPolicyRequestCycleListenerTest.java', 'wicket-core/src/test/java/org/apache/wicket/coop/CrossOriginOpenerPolicyRequestCycleListenerTest.java']"
apache/wicket,https://github.com/apache/wicket,dfee6a2a5e2971df92becc4d4e5c44d073ac52a7,52f4ec449e2588cea25243a94605ce434cf38e49,https://github.com/apache/wicket/commit/dfee6a2a5e2971df92becc4d4e5c44d073ac52a7,"Zero warnings in wicket-util

Brought several test cases into the 2010's by refactoring old idioms.
Added @SuppressWarnings where logical (javadoc for unit tests),
suppressed several serial warnings (if we aren't going to add those
SerialVersionUID's we should kill the warning).",2015-10-24 15:53:00,Martijn Dashorst,"['wicket-util/src/test/java/org/apache/wicket/util/collections/IntHashMapTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/convert/converter/BigIntegerConverterTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/convert/converters/ConvertersTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/crypt/SunJceCryptTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/crypt/UnlimitedStrengthJurisdictionPolicyTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/encoding/UrlDecoderTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/encoding/UrlEncoderTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/io/ConnectionsTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/io/XmlReaderTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/lang/ClassesTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/lang/NumbersTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/lang/PackagesTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/string/AppendingStringBufferTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/string/StringValueTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/string/StringsTest.java', 'wicket-util/src/test/java/org/apache/wicket/util/time/TimeTest.java']"
apache/wicket,https://github.com/apache/wicket,3744d5bee81753f3623497dd39e4529d2be5ee84,2ab4c7c00d2207679c6a10d2aee8b7c5fd624ba3,https://github.com/apache/wicket/commit/3744d5bee81753f3623497dd39e4529d2be5ee84,"Refactor Testcases to make failing tests more informative:
Refactor
assertTrue(factory.getFieldValue(field, obj) instanceof ILazyInitProxy);
to
assertThat(factory.getFieldValue(field, obj),
instanceOf(ILazyInitProxy.class));

Now when the assertion fails the value of the first argument is printed
in the test output.",2013-11-06 16:44:21,Martin Funk,"['wicket-core/src/test/java/org/apache/wicket/core/request/mapper/BasicResourceReferenceMapperTest.java', 'wicket-core/src/test/java/org/apache/wicket/core/request/mapper/BookmarkableMapperTest.java', 'wicket-core/src/test/java/org/apache/wicket/core/request/mapper/CryptoMapperTest.java', 'wicket-core/src/test/java/org/apache/wicket/core/request/mapper/MountedMapperTest.java', 'wicket-core/src/test/java/org/apache/wicket/core/request/mapper/PackageMapperTest.java', 'wicket-core/src/test/java/org/apache/wicket/core/request/mapper/PageInstanceMapperTest.java', 'wicket-core/src/test/java/org/apache/wicket/markup/html/WebPageTest.java', 'wicket-core/src/test/java/org/apache/wicket/markup/html/basic/SimpleResponsePageClassTest.java', 'wicket-core/src/test/java/org/apache/wicket/markup/parser/filter/OpenCloseTagExpanderTest.java', 'wicket-core/src/test/java/org/apache/wicket/model/PropertyModelTest.java', 'wicket-core/src/test/java/org/apache/wicket/protocol/http/ResponseIOExceptionTest.java', 'wicket-core/src/test/java/org/apache/wicket/protocol/http/servlet/ServletWebRequestTest.java', 'wicket-core/src/test/java/org/apache/wicket/request/resource/caching/ContextRelativeResourceCachingTest.java', 'wicket-extensions/src/test/java/org/apache/wicket/extensions/ajax/markup/html/AjaxEditableTest.java', 'wicket-ioc/src/test/java/org/apache/wicket/proxy/LazyInitProxyFactoryTest.java', 'wicket-spring/src/test/java/org/apache/wicket/spring/injection/annot/AnnotProxyFieldValueFactoryTest.java']"
apache/wicket,https://github.com/apache/wicket,befbf9c77219e8744d376eb40c73b4e9890aa306,e75eeaa2511ee0bc0bec7c74cb57d50809dba8ef,https://github.com/apache/wicket/commit/befbf9c77219e8744d376eb40c73b4e9890aa306,"Port of wicket-cdi to support cdi-1.1

Package is split up into wicket-cdi-1.1-core and wicket-cdi-1.1-weld.
Refactored some classes to use cdi injection instead of constructors.
Worked with tomcat and glassfish in my limited testing.",2013-06-26 17:01:21,John Sarman,"['wicket-experimental/wicket-cdi-1.1/wicket-cdi-1.1-core/src/test/java/org/apache/wicket/cdi/ApacheLicenceHeaderTest.java', 'wicket-experimental/wicket-cdi-1.1/wicket-cdi-1.1-core/src/test/java/org/apache/wicket/cdi/ComponentInjectorTest.java', 'wicket-experimental/wicket-cdi-1.1/wicket-cdi-1.1-weld/src/test/java/org/apache/wicket/cdi/weld/ApacheLicenceHeaderTest.java']"
apache/wicket,https://github.com/apache/wicket,992b05b436f8093210a9eadf8e3f100ed32fac83,5abe243225b1b5b2c5d73f3cc97f4f2552164539,https://github.com/apache/wicket/commit/992b05b436f8093210a9eadf8e3f100ed32fac83,"generics refactor. some unresolved test failures

git-svn-id: https://svn.apache.org/repos/asf/wicket/trunk@672603 13f79535-47bb-0310-9956-ffa450edef68",2008-06-29 05:50:41,Igor Vaynberg,"['wicket-auth-roles/src/test/java/org/apache/wicket/authorization/strategies/role/annotations/AnnotationsRoleTest.java', 'wicket-auth-roles/src/test/java/org/apache/wicket/authorization/strategies/role/metadata/ActionPermissionsTest.java', 'wicket-examples/src/test/java/org/apache/wicket/examples/panels/signin/CookieTest.java']"
apache/wicket,https://github.com/apache/wicket,fa26084084cb5b3d91677b9428f9297c4c95a481,e4347b7b45ea1378208742016b634650857d8eb3,https://github.com/apache/wicket/commit/fa26084084cb5b3d91677b9428f9297c4c95a481,"WICKET-280 Allow to access html resources if they are not associated with a java class

NOTE: WicketTesterTest.testClickResourceLink() is still disabled until the
relative path refactoring is ported to trunk


git-svn-id: https://svn.apache.org/repos/asf/incubator/wicket/trunk@510916 13f79535-47bb-0310-9956-ffa450edef68",2007-02-23 11:57:41,Jean-Baptiste Quenot,['wicket/src/test/java/wicket/util/tester/WicketTesterTest.java']
apache/wicket,https://github.com/apache/wicket,3eae72e1f80a3bc15c364b716762e058f58a2f57,02709188f9fb858f2abf1adcb9660fb387b63186,https://github.com/apache/wicket/commit/3eae72e1f80a3bc15c364b716762e058f58a2f57,"WICKET-147 Backport the ""MockWebApplication and WicketTester are no longer derived from WebApplication""

Finish refactoring

Needed to move WicketTestCase from src/test to src/java so that it is accessible
in any module, otherwise it is not packaged in the jar


git-svn-id: https://svn.apache.org/repos/asf/incubator/wicket/branches/wicket-1.x@510601 13f79535-47bb-0310-9956-ffa450edef68",2007-02-22 17:39:45,Jean-Baptiste Quenot,"['wicket-auth-roles/src/test/java/wicket/authorization/strategies/role/annotations/AnnotationsRoleTest.java', 'wicket-examples/src/test/java/wicket/examples/displaytag/list/SortableTableHeadersTest.java', 'wicket-examples/src/test/java/wicket/examples/panels/signin/CookieTest.java', 'wicket-spring/src/test/java/wicket/proxy/LazyInitProxyFactoryTest.java', 'wicket-spring/src/test/java/wicket/spring/SpringBeanLocatorTest.java']"
apache/wicket,https://github.com/apache/wicket,7e63802700519c33c5fff32f81c5f16a89640175,1033b74c33048b69a37f0aefaf35b018aab1cedc,https://github.com/apache/wicket/commit/7e63802700519c33c5fff32f81c5f16a89640175,"Fixed compiletime error introduced by the WicketTester/MockWebApplication refactoring.

git-svn-id: https://svn.apache.org/repos/asf/incubator/wicket/trunk@473938 13f79535-47bb-0310-9956-ffa450edef68",2006-11-12 11:43:16,Frank Bille Jensen,['wicket-auth-roles/src/test/java/wicket/authorization/strategies/role/annotations/AnnotationsRoleTest.java']
apache/wicket,https://github.com/apache/wicket,5ca5f715b37fa4b60f067e880b5a0f79b0add0fc,ef4c8e6ec94b608ffb32633203a844f4e0c5c66e,https://github.com/apache/wicket/commit/5ca5f715b37fa4b60f067e880b5a0f79b0add0fc,"Fixed compiletime error introduced by the WicketTester/MockWebApplication refactoring.

git-svn-id: https://svn.apache.org/repos/asf/incubator/wicket/trunk@473933 13f79535-47bb-0310-9956-ffa450edef68",2006-11-12 11:34:10,Frank Bille Jensen,['wicket-spring/src/test/java/wicket/spring/SpringBeanLocatorTest.java']
apache/wicket,https://github.com/apache/wicket,837d5a5189e96ea37474650ab5b3c80120d7d460,3f48e0bfdfe55cfc787311fe09f832c38647dc4c,https://github.com/apache/wicket/commit/837d5a5189e96ea37474650ab5b3c80120d7d460,"Major: Refactored converters so they can be constructed with a Locale parameter for convenience.  Also, fixed tests and simplified code according to developer list comments.  Much better now!


git-svn-id: https://svn.apache.org/repos/asf/incubator/wicket/trunk@455713 13f79535-47bb-0310-9956-ffa450edef68",2005-02-05 21:19:38,Jonathan Locke,['wicket/src/test/wicket/util/convert/converters/ConvertersTest.java']
apache/wicket,https://github.com/apache/wicket,0c371a2de91c611ca2586a76e79d7fe8dc26e9ca,9f8e136c629c8a8754c004afff3630cf925be156,https://github.com/apache/wicket/commit/0c371a2de91c611ca2586a76e79d7fe8dc26e9ca,"Refactored ComponentTagAttributeModifier.  Moved it to wicket package from wicket.markup package, renamed it to AttributeModifier and then made most of its methods package private so it has a less confusing public API.  Unfortunately, most of the tests relied on non-public methods, so I commented those out.


git-svn-id: https://svn.apache.org/repos/asf/incubator/wicket/trunk@455649 13f79535-47bb-0310-9956-ffa450edef68",2005-02-02 02:49:46,Jonathan Locke,['wicket/src/test/wicket/markup/ComponentTagAttributeModifierTest.java']
sepinf-inc/IPED,https://github.com/sepinf-inc/IPED,5fd7fb71c3372fef985ae1822c97a3aee5129c07,8d6133c649229134806677d175ad4ea1d5aa04b1,https://github.com/sepinf-inc/IPED/commit/5fd7fb71c3372fef985ae1822c97a3aee5129c07,'#180: move iped-parsers tests after additional package refactoring,2022-06-20 18:26:36,Luis Nassif,"['iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/browsers/AbstractPkgTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/browsers/chrome/ChromeSqliteParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/browsers/edge/EdgeWebCacheParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/browsers/firefox/FirefoxSavedSessionParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/browsers/firefox/FirefoxSqliteParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/browsers/ie/IndexDatParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/browsers/safari/SafariPlistParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/database/MSAccessParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/database/XBaseParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/sqlite/SQLite3ParserTest.java']"
sepinf-inc/IPED,https://github.com/sepinf-inc/IPED,a5c79c9e03e0d32cc2f1cd2ba22493901061a128,3728f8fd8c02e7935d8083c356fe403ba1d57173,https://github.com/sepinf-inc/IPED/commit/a5c79c9e03e0d32cc2f1cd2ba22493901061a128,'#180: refactor some iped-parsers tests after previous commit,2022-06-17 16:53:50,Luis Nassif,"['iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/mail/IncrediMailParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/mail/MBoxParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/mail/OutlookDBXParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/mail/OutlookPSTParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/misc/GenericOLEParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/iped/parsers/util/AbstractPkgTest.java']"
sepinf-inc/IPED,https://github.com/sepinf-inc/IPED,2a3f3baeddc57d4e8618ff9810492da7c4370078,d1f8ba60d2e6be5605914153b45366b3a96b32af,https://github.com/sepinf-inc/IPED/commit/2a3f3baeddc57d4e8618ff9810492da7c4370078,Refactoring tests to fit others tests patterns,2021-07-28 19:02:11,streeg,"['iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/FLVParserWrapperTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/MSAccessParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/PDFOCRTextParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/RARParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/RFC822ParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/SevenZipParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/XBaseParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/XMLParserTest.java']"
sepinf-inc/IPED,https://github.com/sepinf-inc/IPED,29e332b00c579fc7071552efc89d626519038bbc,1a6df620d9b08fb82aa867096eb615aa2ebff6a4,https://github.com/sepinf-inc/IPED/commit/29e332b00c579fc7071552efc89d626519038bbc,Refactoring tests,2021-06-30 18:17:30,streeg,"['iped-parsers/iped-parsers-impl/src/test/java/dpf/inc/sepinf/browsers/parsers/SafariPlistParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/inc/sepinf/python/PythonParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/OutlookDBXParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/PackageParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/jdbc/SQLite3ParserTest.java']"
sepinf-inc/IPED,https://github.com/sepinf-inc/IPED,766866a710e2afb38c99015edd3b2df775d19f28,fb9f79acf75502d2f436cd1bc4e81e83551b4182,https://github.com/sepinf-inc/IPED/commit/766866a710e2afb38c99015edd3b2df775d19f28,"Removing ""Imports *"" and unused imports. Added CRC32 field to check.

I'll refactor mboxparsertest to be like sevenzipparsertest using
@lfcnassif suggestion later. I'll also do the same for RARParsertest and
i'll verify the extracted path.",2021-04-19 18:41:49,guilh,"['iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/AbstractPkgTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/MBoxParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/RARParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/RFC822ParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/SevenZipParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/XBaseParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/XMLParserTest.java']"
sepinf-inc/IPED,https://github.com/sepinf-inc/IPED,fb9f79acf75502d2f436cd1bc4e81e83551b4182,c76c9ef077451eba198e4900f674f9ccd5fc498a,https://github.com/sepinf-inc/IPED/commit/fb9f79acf75502d2f436cd1bc4e81e83551b4182,refactor test names,2021-04-19 17:39:25,guilh,['iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/MSAccessParserTest.java']
sepinf-inc/IPED,https://github.com/sepinf-inc/IPED,8a4b78a19c34dc01c0712ae32656e3ea2052fd7b,f89c1becca5c06eb7a5257e906b44f7b9efa5717,https://github.com/sepinf-inc/IPED/commit/8a4b78a19c34dc01c0712ae32656e3ea2052fd7b,"MSAccessParserTest checking metadata info and content.

Refactored all the parserstests so the creation of the Object parser
receive the parser to be tested instead of a generic one. Changed the
sevenzipparser so the rar4 extension uses the iped RARParser.",2021-04-19 17:24:39,guilh,"['iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/MBoxParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/MSAccessParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/RFC822ParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/SevenZipParserTest.java', 'iped-parsers/iped-parsers-impl/src/test/java/dpf/sp/gpinf/indexer/parsers/XMLParserTest.java']"
spring-attic/spring-cloud-gcp,https://github.com/spring-attic/spring-cloud-gcp,e695288d05de2e5d46932549e2b9b5c82ab3b141,17ea93ca63e1f40adce25cd406b393e3a94d4568,https://github.com/spring-attic/spring-cloud-gcp/commit/e695288d05de2e5d46932549e2b9b5c82ab3b141,"Spanner interleaved parent-child integration tests (#950)

* Spanner schema generation for parent-child

* Spanner schema admin functions and tests for parent-child

* removed unnecessary check

* added property verification

* pr comments

* PR comments

* rename

* PR comments

* rename to createInterleavedTableStatementCascadeOnDelete

* Merging/resolving conflicts. rename setting

* small refactoring

* Spanner multi-level interleaved integration test

* merge conflict

* reordered params",2018-08-13 15:16:21,Chengyuan Zhao,['spring-cloud-gcp-data-spanner/src/test/java/org/springframework/cloud/gcp/data/spanner/test/AbstractSpannerIntegrationTest.java']
spring-attic/spring-cloud-gcp,https://github.com/spring-attic/spring-cloud-gcp,c873e2b24a908e61eb3bccf33448d76af2108510,2b0c3154166e76b8c3459443a75f0fb654c2b861,https://github.com/spring-attic/spring-cloud-gcp/commit/c873e2b24a908e61eb3bccf33448d76af2108510,"Spanner schema admin functions for parent-child relationships (#910)

* Spanner schema generation for parent-child

* Spanner schema admin functions and tests for parent-child

* removed unnecessary check

* added property verification

* pr comments

* PR comments

* rename

* PR comments

* rename to createInterleavedTableStatementCascadeOnDelete

* Merging/resolving conflicts. rename setting

* small refactoring",2018-08-10 16:31:28,Chengyuan Zhao,['spring-cloud-gcp-data-spanner/src/test/java/org/springframework/cloud/gcp/data/spanner/test/AbstractSpannerIntegrationTest.java']
spring-attic/spring-cloud-gcp,https://github.com/spring-attic/spring-cloud-gcp,e436f12b3d3d2fdff3c39cad75b093ff1f70f79a,d6d59be4589a5209991a32c75a386c23ff1deb04,https://github.com/spring-attic/spring-cloud-gcp/commit/e436f12b3d3d2fdff3c39cad75b093ff1f70f79a,"Spanner refactor converter tests (#617)

* refactoring converter tests

* additional refactoring after merge with master

* checkstyle

* fix errors after merge

* fixing up authors",2018-04-20 00:31:20,Balint Pato,"['spring-cloud-gcp-data-spanner/src/test/java/org/springframework/cloud/gcp/data/spanner/core/convert/MappingSpannerReadConverterTest.java', 'spring-cloud-gcp-data-spanner/src/test/java/org/springframework/cloud/gcp/data/spanner/core/convert/MappingSpannerWriteConverterTest.java']"
jzachr/goldenorb,https://github.com/jzachr/goldenorb,da80760b02ec7de2144a1fd73ad5609e2caf1595,f6659e0c4a2fea2c57e8ae07a9b2386784217939,https://github.com/jzachr/goldenorb/commit/da80760b02ec7de2144a1fd73ad5609e2caf1595,"Refactored OrbBarrier to Barrier interface, implemented OrbBarrier with O(N^2) efficiency, wrote unit test (OrbBarrierTest)",2011-06-21 17:12:23,Long Cao,['src/test/java/org/goldenorb/zookeeper/OrbBarrierTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,a46481f196925d013fe78b1328cd6c41d2042b73,752f26221851cf9200826760a1ff19c3a0d1412d,https://github.com/broadgsa/gatk/commit/a46481f196925d013fe78b1328cd6c41d2042b73,fix 1430 for genotype filters; refactored filter() method; added unit and integration test; more comprehensive fix must be done first on htsjdk side in JEXLMap (#1456),2016-09-06 21:30:18,Steve Huang,['public/gatk-tools-public/src/test/java/org/broadinstitute/gatk/tools/walkers/filters/VariantFiltrationUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,aca1251587e29d94a79a842efcb6ec0a3dc7ee9c,8bd7ababc9a54c29b771d93e91b83dde4cc5394f,https://github.com/broadgsa/gatk/commit/aca1251587e29d94a79a842efcb6ec0a3dc7ee9c,"Now passing in the path to the GATK directory to tests.
Changed tests and scripts to use gatkdir full path instead of relative testdata/qscripts symbolic links.
Although symlinks not created, left the symlink deletion script execution with a comment about future removal.
Re-enabled example UG pipeline queue test.
Replaced all hardcoded strings of {public,private}/testdata with BaseTest variables.
Refactored temp list creation method from ListFileUtilsUnitTest to BaseTest.createTempListFile.
Removed list files with hardcoded paths, now using createTempListFile instead with private test dir variable.",2014-09-01 10:15:19,Khalid Shakir,"['public/gatk-tools-public/src/test/java/org/broadinstitute/gatk/engine/EngineFeaturesIntegrationTest.java', 'public/gatk-tools-public/src/test/java/org/broadinstitute/gatk/engine/GenomeAnalysisEngineUnitTest.java', 'public/gatk-tools-public/src/test/java/org/broadinstitute/gatk/engine/datasources/reads/SAMReaderIDUnitTest.java', 'public/gatk-tools-public/src/test/java/org/broadinstitute/gatk/tools/CatVariantsIntegrationTest.java', 'public/gatk-tools-public/src/test/java/org/broadinstitute/gatk/tools/walkers/coverage/CallableLociIntegrationTest.java', 'public/gatk-tools-public/src/test/java/org/broadinstitute/gatk/utils/BaseTest.java', 'public/gatk-tools-public/src/test/java/org/broadinstitute/gatk/utils/commandline/ArgumentTypeDescriptorUnitTest.java', 'public/gatk-tools-public/src/test/java/org/broadinstitute/gatk/utils/commandline/ParsingEngineUnitTest.java', 'public/gatk-tools-public/src/test/java/org/broadinstitute/gatk/utils/commandline/RodBindingCollectionUnitTest.java', 'public/gatk-tools-public/src/test/java/org/broadinstitute/gatk/utils/interval/IntervalUtilsUnitTest.java', 'public/gatk-tools-public/src/test/java/org/broadinstitute/gatk/utils/text/ListFileUtilsUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,43fb0df28d154678b6f9f8aae434ac11806235ce,5fad1c10bf20c2fdbe0693f35d005101e63819e8,https://github.com/broadgsa/gatk/commit/43fb0df28d154678b6f9f8aae434ac11806235ce,"Change the behavior of SelectVariants for PL/AD when it encounters a record that has lost one or more alternate alleles.

Previously, we would strip out the PLs and AD values since they were no longer accurate.  However, this is not ideal because
then that information is just lost and 1) users complain on the forum and post it as a bug and 2) it gives us problems in both
the current and future (single sample) calling pipelines because we subset samples/alleles all the time and lose info.

Now the PLs and AD get correctly selected down.

While I was in there I also refactored some related code in subsetDiploidAlleles().  There were no real changes there - I just
broke it out into smaller chunks as per our best practices.

Added unit tests and updated integration tests.
Addressed reviews.",2013-12-02 17:46:51,Eric Banks,['public/java/test/org/broadinstitute/sting/utils/variant/GATKVariantContextUtilsUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,1318043f446b8923819b86d14c810273a2bf0579,8ea3119b43ee8ac727cfd9843d0aeb1bbd5ff530,https://github.com/broadgsa/gatk/commit/1318043f446b8923819b86d14c810273a2bf0579,"Adding Graph-based likelihood ratio calculation to HC

  To active this feature add '--likelihoodCalculationEngine GraphBased' to the HC command line.

New HC Options (both Advanced and Hidden):
==========================================

  --likelihoodCalculationEngine PairHMM/GraphBased/Random (default PairHMM)

Specifies what engine should be used to generate read vs haplotype likelihoods.

  PairHMM : standard full-PairHMM approach.
  GraphBased : using the assembly graph to accelarate the process.
  Random : generate random likelihoods - used for benchmarking purposes only.

  --heterogeneousKmerSizeResolution COMBO_MIN/COMBO_MAX/MAX_ONLY/MIN_ONLY (default COMBO_MIN)

It idicates how to merge haplotypes produced using different kmerSizes.
Only has effect when used in combination with (--likelihooCalculationEngine GraphBased)

  COMBO_MIN : use the smallest kmerSize with all haplotypes.
  COMBO_MAX : use the larger kmerSize with all haplotypes.
  MIN_ONLY : use the smallest kmerSize with haplotypes assembled using it.
  MAX_ONLY : use the larger kmerSize with haplotypes asembled using it.

Major code changes:
===================

 * Introduce multiple likelihood calculation engines (before there was just one).

 * Assembly results from different kmerSies are now packed together using the AssemblyResultSet class.

 * Added yet another PairHMM implementation with a different API in order to spport
   local PairHMM calculations, (e.g. a segment of the read vs a segment of the haplotype).

Major components:
================

 * FastLoglessPairHMM: New pair-hmm implemtation using some heuristic to speed up partial PairHMM calculations

 * GraphBasedLikelihoodCalculationEngine: delegates onto GraphBasedLikelihoodCalculationEngineInstance the exectution
     of the graph-based likelihood approach.

 * GraphBasedLikelihoodCalculationEngineInstance: one instance per active-region, implements the graph traversals
     to calcualte the likelihoods using the graph as an scafold.

 * HaplotypeGraph: haplotype threading graph where build from the assembly haplotypes. This structure is the one
     used by GraphBasedLikelihoodCalculationEngineInstance to do its work.

 * ReadAnchoring and KmerSequenceGraphMap: contain information as how a read map on the HaplotypeGraph that is
     used by GraphBasedLikelihoodCalcuationEngineInstance to do its work.

Remove mergeCommonChains from HaplotypeGraph creation

Fixed bamboo issues with HaplotypeGraphUnitTest

Fixed probrems with HaplotypeCallerIntegrationTest

Fixed issue with GraphLikelihoodVsLoglessAccuracyIntegrationTest

Fixed ReadThreadingLikelihoodCalculationEngine issues

Moved event-block iteration outside GraphBased*EngineInstance

Removed unecessary parameter from ReadAnchoring constructor.
Fixed test problem

Added a bit more documentation to EventBlockSearchEngine

Fixing some private - protected dependency issues

Further refactoring making GraphBased*Instance and HaplotypeGraph slimmer. Addressed last pull request commit comments

Fixed FastLoglessPairHMM public -> protected dependency

Fixed probrem with HaplotypeGraph unit test

Adding Graph-based likelihood ratio calculation to HC

  To active this feature add '--likelihoodCalculationEngine GraphBased' to the HC command line.

New HC Options (both Advanced and Hidden):
==========================================

  --likelihoodCalculationEngine PairHMM/GraphBased/Random (default PairHMM)

Specifies what engine should be used to generate read vs haplotype likelihoods.

  PairHMM : standard full-PairHMM approach.
  GraphBased : using the assembly graph to accelarate the process.
  Random : generate random likelihoods - used for benchmarking purposes only.

  --heterogeneousKmerSizeResolution COMBO_MIN/COMBO_MAX/MAX_ONLY/MIN_ONLY (default COMBO_MIN)

It idicates how to merge haplotypes produced using different kmerSizes.
Only has effect when used in combination with (--likelihooCalculationEngine GraphBased)

  COMBO_MIN : use the smallest kmerSize with all haplotypes.
  COMBO_MAX : use the larger kmerSize with all haplotypes.
  MIN_ONLY : use the smallest kmerSize with haplotypes assembled using it.
  MAX_ONLY : use the larger kmerSize with haplotypes asembled using it.

Major code changes:
===================

 * Introduce multiple likelihood calculation engines (before there was just one).

 * Assembly results from different kmerSies are now packed together using the AssemblyResultSet class.

 * Added yet another PairHMM implementation with a different API in order to spport
   local PairHMM calculations, (e.g. a segment of the read vs a segment of the haplotype).

Major components:
================

 * FastLoglessPairHMM: New pair-hmm implemtation using some heuristic to speed up partial PairHMM calculations

 * GraphBasedLikelihoodCalculationEngine: delegates onto GraphBasedLikelihoodCalculationEngineInstance the exectution
     of the graph-based likelihood approach.

 * GraphBasedLikelihoodCalculationEngineInstance: one instance per active-region, implements the graph traversals
     to calcualte the likelihoods using the graph as an scafold.

 * HaplotypeGraph: haplotype threading graph where build from the assembly haplotypes. This structure is the one
     used by GraphBasedLikelihoodCalculationEngineInstance to do its work.

 * ReadAnchoring and KmerSequenceGraphMap: contain information as how a read map on the HaplotypeGraph that is
     used by GraphBasedLikelihoodCalcuationEngineInstance to do its work.

Remove mergeCommonChains from HaplotypeGraph creation

Fixed bamboo issues with HaplotypeGraphUnitTest

Fixed probrems with HaplotypeCallerIntegrationTest

Fixed issue with GraphLikelihoodVsLoglessAccuracyIntegrationTest

Fixed ReadThreadingLikelihoodCalculationEngine issues

Moved event-block iteration outside GraphBased*EngineInstance

Removed unecessary parameter from ReadAnchoring constructor.
Fixed test problem

Added a bit more documentation to EventBlockSearchEngine

Fixing some private - protected dependency issues

Further refactoring making GraphBased*Instance and HaplotypeGraph slimmer. Addressed last pull request commit comments

Fixed FastLoglessPairHMM public -> protected dependency

Fixed probrem with HaplotypeGraph unit test",2013-11-18 17:07:59,Valentin Ruano-Rubio,"['public/java/test/org/broadinstitute/sting/BaseTest.java', 'public/java/test/org/broadinstitute/sting/WalkerTest.java', 'public/java/test/org/broadinstitute/sting/utils/GenomeLocParserUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,883589b9d2c6f5a429ecae5b2dc5874fee7ba5e4,826b8057d7819afd642ba7c89ec8b3eea1199c5a,https://github.com/broadgsa/gatk/commit/883589b9d2c6f5a429ecae5b2dc5874fee7ba5e4,"Adaptations to accomodate Tribble API changes, comprising mostly of the following.
* Refactoring implementations of readHeader(LineReader) -> readActualHeader(LineIterator), including nullary implementations where applicable.
* Galvanizing fo generic types.
* Test fixups, mostly to pass around LineIterators instead of LineReaders.
* New rev of tribble, which incorporates a fix that addresses a problem with TribbleIndexedFeatureReader reading a header twice in some instances.
* New rev of sam, to make AbstractIterator visible (was moved from picard -> sam in Tribble API refactor).",2013-08-19 16:42:28,Michael McCowan,"['public/java/test/org/broadinstitute/sting/BaseTest.java', 'public/java/test/org/broadinstitute/sting/gatk/EngineFeaturesIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/utils/activeregion/BandPassActivityProfileUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/codecs/hapmap/HapMapUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,bb5b5cb2500b0e86612ee272264364aa82d4d80b,e79db1924fd2a003ce16bdd05cbc027d1b02b60e,https://github.com/broadgsa/gatk/commit/bb5b5cb2500b0e86612ee272264364aa82d4d80b,"Add genotyping accuracy assessment to AssessNA12878

-- Now table looks like:

Name     VariantType  AssessmentType           Count
variant  SNPS         TRUE_POSITIVE              1220
variant  SNPS         FALSE_POSITIVE                0
variant  SNPS         FALSE_NEGATIVE                1
variant  SNPS         TRUE_NEGATIVE               150
variant  SNPS         CALLED_NOT_IN_DB_AT_ALL       0
variant  SNPS         HET_CONCORDANCE          100.00
variant  SNPS         HOMVAR_CONCORDANCE        99.63
variant  INDELS       TRUE_POSITIVE               273
variant  INDELS       FALSE_POSITIVE                0
variant  INDELS       FALSE_NEGATIVE               15
variant  INDELS       TRUE_NEGATIVE                79
variant  INDELS       CALLED_NOT_IN_DB_AT_ALL       2
variant  INDELS       HET_CONCORDANCE           98.67
variant  INDELS       HOMVAR_CONCORDANCE        89.58

-- Rewrite / refactored parts of subsetDiploidAlleles in GATKVariantContextUtils to have a BEST_MATCH assignment method that does it's best to simply match the genotype after subsetting to a set of alleles.  So if the original GT was A/B and you subset to A/B it remains A/B but if you subset to A/C you get A/A.  This means that het-alt B/C genotypes become A/B and A/C when subsetting to bi-allelics which is the convention in the KB.  Add lots of unit tests for this functions (from 0 previously)
-- BadSites in Assessment now emits TP sites with discordant genotypes with the type GENOTYPE_DISCORDANCE and tags the expected genotype in the info field as ExpectedGenotype, such as this record:

20      10769255        .       A       ATGTG   165.73  .       ExpectedGenotype=HOM_VAR;SupportingCallsets=ebanks,depristo,CEUTrio_best_practices;WHY=GENOTYPE_DISCORDANCE     GT:AD:DP:GQ:PL  0/1:1,9:10:6:360,0,6

Indicating that the call was a HET but the expected result was HOM_VAR
-- Forbid subsetting of diploid genotypes to just a single allele.
-- Added subsetToRef as a separate specific function.  Use that in the DiploidExactAFCalc in the case that you need to reduce yourself to ref only. Preserves DP in the genotype field when this is possible, so a few integration tests have changed for the UG",2013-06-12 16:43:19,Mark DePristo,['public/java/test/org/broadinstitute/sting/utils/variant/GATKVariantContextUtilsUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,58799ff10de7e2c7abe0d3ad92947c2af124cc43,f8dff2d14f4c6be0b59a57ed211379f7aa7ee654,https://github.com/broadgsa/gatk/commit/58799ff10de7e2c7abe0d3ad92947c2af124cc43,"Exclude reduced reads from elimination during downsampling

Problem:
-Downsamplers were treating reduced reads the same as normal reads,
 with occasionally catastrophic results on variant calling when an
 entire reduced read happened to get eliminated.

Solution:
-Since reduced reads lack the information we need to do position-based
 downsampling on them, best available option for now is to simply
 exempt all reduced reads from elimination during downsampling.

Details:
-Add generic capability of exempting items from elimination to
 the Downsampler interface via new doNotDiscardItem() method.
 Default inherited version of this method exempts all reduced reads
 (or objects encapsulating reduced reads) from elimination.

-Switch from interfaces to abstract classes to facilitate this change,
 and do some minor refactoring of the Downsampler interface (push
 implementation of some methods into the abstract classes, improve
 names of the confusing clear() and reset() methods).

-Rewrite TAROrderedReadCache. This class was incorrectly relying
 on the ReservoirDownsampler to preserve the relative ordering of
 items in some circumstances, which was behavior not guaranteed by
 the API and only happened to work due to implementation details
 which no longer apply. Restructured this class around the assumption
 that the ReservoirDownsampler will not preserve relative ordering
 at all.

-Add disclaimer to description of -dcov argument explaining that
 coverage targets are approximate goals that will not always be
 precisely met.

-Unit tests for all individual downsamplers to verify that reduced
 reads are exempted from elimination",2013-06-05 19:55:43,David Roazen,"['public/java/test/org/broadinstitute/sting/gatk/downsampling/FractionalDownsamplerUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/downsampling/LevelingDownsamplerUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/downsampling/ReservoirDownsamplerUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/downsampling/SimplePositionalDownsamplerUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/traversals/TAROrderedReadCacheUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,a0934a90b7435e8a0a0dc9b3d53ea026f3f1b7fe,ffa15b4f26cafe01ba8dc6ad9f06a0ee17d59849,https://github.com/broadgsa/gatk/commit/a0934a90b7435e8a0a0dc9b3d53ea026f3f1b7fe,"This commit addresses JIRA issue GSA-948: Prevent users from doing the wrong thing with RNA-Seq data and the GATK.

The previous behavior is to process reads with N CIGAR operators as they are despite that many of the tools do not actually support such operator and results become unpredictible.

Now if the there is some read with the N operator, the engine returns a user exception. The error message indicates what is the problem (including the offending read and mapping position) and give a couple of alternatives that the user can take in order to move forward:

a) ask for those reads to be filtered out (with --filter_reads_with_N_cigar or -filterRNC)

b) keep them in as before (with -U ALLOW_N_CIGAR_READS or -U ALL)

Notice that (b) does not have any effect if (a) is enacted; i.e. filtering overrides ignoring.

Implementation:

* Added filterReadsWithMCigar argument to MalformedReadFilter with the corresponding changes in the code to get it to work.
* Added ALLOW_N_CIGAR_READS unsafe flag so that N cigar containing reads can be processed as they are if that is what the user wants.
* Added ReadFilterTest class commont parent for ReadFilter test cases.
* Refactor ReadGroupBlackListFilterUnitTest to extend ReadFilterTest and push up some functionality to that class.
* Modified MalformedReadFilterUnitTest to extend ReadFilterTest and to test the new filter functionality.
* Added AllowNCigarMalformedReadFilterUnittest to check on the behavior when the unsafe ALLOW_N_CIGAR_READS flag is used.
* Added UnsafeNCigarMalformedReadFilterUnittest to check on the behavior when the unsafe ALL flag is used.
* Updated a broken test case in UnifiedGenotyperIntegrationTest resulting from the new behavior.
* Updated EngineFeaturesIntegrationTest testdata to be compliant with new behavior",2013-05-24 00:39:32,Valentin Ruano-Rubio,"['public/java/test/org/broadinstitute/sting/gatk/EngineFeaturesIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/filters/AllowNCigarMalformedReadFilterUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/filters/MalformedReadFilterUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/filters/ReadFilterTest.java', 'public/java/test/org/broadinstitute/sting/gatk/filters/ReadGroupBlackListFilterUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/filters/UnsafeMalformedReadFilterUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,2d1703e5bc37407ead0bb3bc39edc9aff1904b0d,5408c10e0810fb168a88bd47759a4681dae75e86,https://github.com/broadgsa/gatk/commit/2d1703e5bc37407ead0bb3bc39edc9aff1904b0d,"New faster Smith-Waterman implementation that is edge greedy and assumes that ref and haplotype have same global start/end points.

   * This version inherits from the original SW implementation so it can use the same matrix creation method.
   * A bunch of refactoring was done to the original version to clean it up a bit and to have it do the
     right thing for indels at the edges of the alignments.
     * Enum added for the overhang strategy to use; added implementation for the INDEL version of this strategy.
   * Lots of systematic testing added for this implementation.
   * NOT HOOKED UP TO HAPLOTYPE CALLER YET. Committing so that people can play around with this for now.",2013-05-01 15:13:58,Eric Banks,['public/java/test/org/broadinstitute/sting/utils/UtilsUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,4098c880ad1b7c6554d4a5b475479a0792b5cfaa,bdee564c5d08363f878c7d77f4b7317de704328f,https://github.com/broadgsa/gatk/commit/4098c880ad1b7c6554d4a5b475479a0792b5cfaa,"Replace DeBruijnAssembler with ReadThreadingAssembler

Problem
-------
The DeBruijn assembler was too slow.  The cause of the slowness was the need to construct many kmer graphs (from max read length in the interval to 11 kmer, in increments of 6 bp).  This need to build many kmer graphs was because the assembler (1) needed long kmers to assemble through regions where a shorter kmer was non-unique in the reference, as we couldn't split cycles in the reference (2) shorter kmers were needed to be sensitive to differences from the reference near the edge of reads, which would be lost often when there was chain of kmers of longer length that started before and after the variant.

Solution
--------
The read threading assembler uses a fixed kmer, in this implementation by default two graphs with 10 and 25 kmers.  The algorithm operates as follows:

identify all non-unique kmers of size K among all reads and the reference
for each sequence (ref and read):
  find a unique starting position of the sequence in the graph by matching to a unique kmer, or starting a new source node if non exist
  for each base in the sequence from the starting vertex kmer:
    look at the existing outgoing nodes of current vertex V.  If the base in sequence matches the suffix of outgoing vertex N, read the sequence to N, and continue
    If no matching next vertex exists, find a unique vertex with kmer K.  If one exists, merge the sequence into this vertex, and continue
    If a merge vertex cannot be found, create a new vertex (note this vertex may have a kmer identical to another in the graph, if it is not unique) and thread the sequence to this vertex, and continue

This algorithm has a key property: it can robustly use a very short kmer without introducing cycles, as we will create paths through the graph through regions that aren't unique w.r.t. the sequence at the given kmer size.  This allows us to assemble well with even very short kmers.

This commit includes many critical changes to the haplotype caller to make it fast, sensitive, and accurate on deep and shallow WGS and exomes, the key changes are highlighted below:

-- The ReadThreading assembler keeps track of the maximum edge multiplicity per sample in the graph, so that we prune per sample, not across all samples.  This change is essential to operate effectively when there are many deep samples (i.e., 100 exomes)
-- A new pruning algorithm that will only prune linear paths where the maximum edge weight among all edges in the path have < pruningFactor.  This makes pruning more robust when you have a long chain of bases that have high multiplicity at the start but only barely make it back into the main path in the graph.
-- We now do a global SmithWaterman to compute the cigar of a Path, instead of the previous bubble-based SmithWaterman optimization.  This change is essential for us to get good variants from our paths when the kmer size is small.  It also ensures that we produce a cigar from a path that only depends only the sequence of bases in the path, unlike the previous approach which would depend on both the bases and the way the path was decomposed into vertices, which depended on the kmer size we used.
-- Removed MergeHeadlessIncomingSources, which was introducing problems in the graphs in some cases, and just isn't the safest operation.  Since we build a kmer graph of size 10, this operation is no longer necessary as it required a perfect match of 10 bp to merge anyway.
-- The old DebruijnAssembler is still available with a command line option
-- The number of paths we take forward from the each assembly graph is now capped at a factor per sample, so that we allow 128 paths for a single sample up to 10 x nSamples as necessary.  This is an essential change to make the system work well for large numbers of samples.
-- Add a global mismapping parameter to the HC likelihood calculation: The phredScaledGlobalReadMismappingRate reflects the average global mismapping rate of all reads, regardless of their mapping quality. This term effects the probability that a read originated from the reference haploytype, regardless of its edit distance from the reference, in that the read could have originated from the reference haplotype but from another location in the genome. Suppose a read has many mismatches from the reference, say like 5, but has a very high mapping quality of 60. Without this parameter, the read would contribute 5 * Q30 evidence in favor of its 5 mismatch haplotype compared to reference, potentially enough to make a call off that single read for all of these events. With this parameter set to Q30, though, the maximum evidence against the reference that this (and any) read could contribute against reference is Q30. -- Controllable via a command line argument, defaulting to Q60 rate. Results from 20:10-11 mb for branch are consistent with the previous behavior, but this does help in cases where you have rare very divergent haplotypes
-- Reduced ActiveRegionExtension from 200 bp to 100 bp, which is a performance win and the large extension is largely unnecessary with the short kmers used with the read threading assembler

Infrastructure changes / improvements
-------------------------------------
-- Refactored BaseGraph to take a subclass of BaseEdge, so that we can use a MultiSampleEdge in the ReadThreadingAssembler
-- Refactored DeBruijnAssembler, moving common functionality into LocalAssemblyEngine, which now more directly manages the subclasses, requiring them to only implement a assemble() method that takes ref and reads and provides a List<SeqGraph>, which the LocalAssemblyEngine takes forward to compute haplotypes and other downstream operations.  This allows us to have only a limited amount of code that differentiates the Debruijn and ReadThreading assemblers
-- Refactored active region trimming code into ActiveRegionTrimmer class
-- Cleaned up the arguments in HaplotypeCaller, reorganizing them and making arguments @Hidden and @Advanced as appropriate.  Renamed several arguments now that the read threading assembler is the default
-- LocalAssemblyEngineUnitTest reads in the reference sequence from b37, and assembles with synthetic reads intervals from 10-11 mbs with only the reference sequence as well as artificial snps, deletions, and insertions.
-- Misc. updates to Smith Waterman code. Added generic interface to called not surpisingly SmithWaterman, making it easier to have alternative implementations.
-- Many many more unit tests throughout the entire assembler, and in random utilities",2013-04-18 12:17:15,Mark DePristo,"['public/java/test/org/broadinstitute/sting/utils/UtilsUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/clipping/ReadClipperUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,27ba919c8580c0a32a52034c720265d2085cab03,a7e95626131a1bf9691505c54829e6e040de170d,https://github.com/broadgsa/gatk/commit/27ba919c8580c0a32a52034c720265d2085cab03,"Refactored binomial probability code in MathUtils.

  * Moved redundant code out of UGEngine
  * Added overloaded methods that assume p=0.5 for speed efficiency
  * Added unit test for the binomialCumulativeProbability method",2013-04-09 19:37:08,Eric Banks,['public/java/test/org/broadinstitute/sting/utils/MathUtilsUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,2636757a29cb5dbc39f072d071d5fa46a36294d3,aee189b512071f01cb9af0721f0973c30cca9492,https://github.com/broadgsa/gatk/commit/2636757a29cb5dbc39f072d071d5fa46a36294d3,"Slightly improved Smith-Waterman parameter values for HaplotypeCaller Path comparisons

Key improvement
---------------
-- The haplotype caller was producing unstable calls when comparing the following two haplotypes:

ref:               ACAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGA
alt: TGTGTGTGTGTGTGACAGAGAGAGAGAGAGAGAGAGAGAGAGAGA

in which the alt and ref haplotypes differ in having indel at both the start and end of the bubble.  The previous parameter values used in the Path algorithm were set so that such haplotype comparisons would result in the either the above alignment or the following alignment depending on exactly how many GA units were present in the bubble.

ref: ACAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGA
alt: TGTGTGTGTGTGTGACAGAGAGAGAGAGAGAGAGAGAGAGAGAGA

The number of elements could vary depending on how the graph was built, and resulted in real differences in the calls between BWA mem and BWA-SW calls.  I added a few unit tests for this case, and found a set of SW parameter values with lower gap-extension penalties that significantly favor the first alignment, which is the right thing to do, as we really don't mind large indels in the haplotypes relative to having lots of mismatches.

-- Expanded the unit tests in both SW and KBestPaths to look at complex events like this, and to check as well somewhat sysmatically that we are finding many types of expected mutational events.
-- Verified that this change doesn't alter our calls on 20:10,000,000-11,000,000 at all

General code cleanup
--------------------
-- Move Smith-Waterman to its own package in utils
-- Refactored out SWParameters class in SWPairwiseAlignment, and made constructors take either a named parameter set or a Parameter object directly.  Depreciated old call to inline constants.  This makes it easier to group all of the SW parameters into a single object for callers
-- Update users of SW code to use new Parameter class
-- Also moved haplotype bam writers to protected so they can use the Path SW parameter, which is protected
-- Removed the storage of the SW scoring matrix in SWPairwiseAligner by default.  Only the SWPairwiseAlignmentMain test program needs this, so added a gross protected static variable that enables its storage",2013-04-10 14:54:25,Mark DePristo,['public/java/test/org/broadinstitute/sting/utils/haplotypeBAMWriter/HaplotypeBAMWriterUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,78ff262f43225da4ae489b3e556957da1eec000b,2a6fe511d42be850f6bc5a92c34a9bfee4b4fde6,https://github.com/broadgsa/gatk/commit/78ff262f43225da4ae489b3e556957da1eec000b,"LD-based merging algorithm for nearby events in the haplotypes

-- Moved R^2 LD haplotype merging system to the utils.haplotype package
-- New LD merging only enabled with HC argument.
-- EventExtractor and EventExtractorUnitTest refactors so we can test the block substitution code without having to enabled it via a static variable
-- A few misc. bug fixes in LDMerger itself
-- Refactoring of Haplotype event splitting and merging code
-- Renamed EventExtractor to EventMap
-- EventMap has a static method that computes the event maps among n haplotypes
-- Refactor Haplotype score and base comparators into their own classes and unit tested them
-- Refactored R^2 based LD merging code into its own class HaplotypeR2Calculator and unit tested much of it.
-- LDMerger now uses the HaplotypeR2Calculator, which cleans up the code a bunch and allowed me to easily test that code with a MockHaplotypeR2Calculator.  For those who haven't seen this testing idiom, have a look, and very useful
-- New algorithm uses a likelihood-ratio test to compute the probability that only the phased haplotypes exist in the population.
-- Fixed fundamental bug in the way the previous R^2 implementation worked
-- Optimizations for HaplotypeLDCalculator: only compute the per sample per haplotype summed likelihoods once, regardless of how many calls there are
-- Previous version would enter infinite loop if it merged two events but the second event had other low likelihood events in other haplotypes that didn't get removed.  Now when events are removed they are removed from all event maps, regardless of whether the haplotypes carry both events
-- Bugfixes for EventMap in the HaplotypeCaller as well.  Previous version was overly restrictive, requiring that the first event to make into a block substitution was a snp.  In some cases we need to merge an insertion with a deletion, such as when the cigar is 10M2I3D4M.  The new code supports this.  UnitTested and documented as well.  LDMerger handles case where merging two alleles results in a no-op event.  Merging CA/C + A/AA -> CAA/CAA -> no op.  Handles this case by removing the two events.  UnitTested
-- Turn off debugging output for the LDMerger in the HaplotypeCaller unless -debug was enabled
-- This new version does a much more specific test (that's actually right).  Here's the new algorithm:

     * Compute probability that two variants are in phase with each other and that no
     * compound hets exist in the population.
     *
     * Implemented as a likelihood ratio test of the hypothesis:
     *
     * x11 and x22 are the only haplotypes in the populations
     *
     * vs.
     *
     * all four haplotype combinations (x11, x12, x21, and x22) all exist in the population.
     *
     * Now, since we have to have both variants in the population, we exclude the x11 & x11 state.  So the
     * p of having just x11 and x22 is P(x11 & x22) + p(x22 & x22).
     *
     * Alternatively, we might have any configuration that gives us both 1 and 2 alts, which are:
     *
     * - P(x11 & x12 & x21) -- we have hom-ref and both hets
     * - P(x22 & x12 & x21) -- we have hom-alt and both hets
     * - P(x22 & x12) -- one haplotype is 22 and the other is het 12
     * - P(x22 & x21) -- one haplotype is 22 and the other is het 21",2013-03-28 22:17:27,Mark DePristo,['public/java/test/org/broadinstitute/sting/utils/haplotype/EventMapUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,d621d242448d56164fb2af5e17214361a570cc21,7dee7049bd1f4fd52289424450100511e0b0ec9c,https://github.com/broadgsa/gatk/commit/d621d242448d56164fb2af5e17214361a570cc21,"Rarely-occurring logic bugfix for GenotypeConcordance, streamlining and testing of MathUtils

Currently, the multi-allelic test is covering the following case:

Eval   A   T,C
Comp   A   C

reciprocate this so that the reverse can be covered.

Eval   A   C
Comp   A   T,C

And furthermore, modify ConcordanceMetrics to more properly handle the situation where multiple alternate alleles are available in the comp. It was possible for an eval C/C sample to match a comp T/T sample, so long as the C allele were also present in at least one other comp sample.

This comes from the fact that ""truth"" reference alleles can be paired with *any* allele also present in the truth VCF, while truth het/hom var sites are restricted to having to match only the alleles present in the genotype. The reason that truth ref alleles are special case is as follows, imagine:

Eval:   A  G,T      0/0   2/0   2/2   1/1
Comp:   A  C,T      0/0   1/0   0/0   0/0

Even though the alt allele of the comp is a C, the assessment of genotypes should be as follows:

Sample1: ref called ref
Sample2: alleles don't match (the alt allele of the comp was not assessed in eval)
Sample3: ref called hom-var
Sample4: alleles don't match (the alt allele of the eval was not assessed in comp)

Before this change, Sample2 was evaluated as ""het called het"" (as the T allele in eval happens to also be in the comp record, just not in the comp sample). Thus: apply current
logic to comp hom-refs, and the more restrictive logic (""you have to match an allele in the comp genotype"") when the comp is not reference.

Also in this commit,major refactoring and testing for MathUtils. A large number of methods were not used at all in the codebase, these methods were removed:
 - dotProduct(several types). logDotProduct is used extensively, but not the real-space version.
 - vectorSum
 - array shuffle, random subset
 - countOccurances (general forms, the char form is used in the codebase)
 - getNMaxElements
 - array permutation
 - sorted array permutation
 - compare floats
 - sum() (for integer arrays and lists).

Final keyword was extensively added to MathUtils.

The ratio() and percentage() methods were revised to error out with non-positive denominators, except in the case of 0/0 (which returns 0.0 (ratio), or 0.0% (percentage)). Random sampling code was updated to make use of the cleaner implementations of generating permutations in MathUtils (allowing the array permutation code to be retired).

The PaperGenotyper still made use of one of these array methods, since it was the only walker it was migrated into the genotyper itself.

In addition, more extensive tests were added for
 - logBinomialCoefficient (Newton's identity should always hold)
 - logFactorial
 - log10sumlog10 and its approximation

All unit tests pass",2013-03-29 03:25:28,Chris Hartl,"['public/java/test/org/broadinstitute/sting/utils/MathUtilsUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/activeregion/BandPassActivityProfileUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,b130583fd110fbe45c17a4be915e9aaf2b779529,b669b371237e3a8a74aacc691a7f5de3afe4881a,https://github.com/broadgsa/gatk/commit/b130583fd110fbe45c17a4be915e9aaf2b779529,"Refactored the het (polyploid) consensus creation in ReduceReads.

 * It is now cleaner and easier to test; added tests for newly implemented methods.
 * Many fixes to the logic to make it work
   * The most important change was that after triggering het compression we actually need to back it out if it
      creates reads that incorporated too many softclips at any one position (because they get unclipped).
   * There was also an off-by-one error in the general code that only manifested itself with het compression.
 * Removed support for creating a het consensus around deletions (which was broken anyways).
   * Mauricio gave his blessing for this.
 * Het compression now works only against known sites (with -known argument).
    * The user can pass in one or more VCFs with known SNPs (other variants are ignored).
    * If no known SNPs are provided het compression will automatically be disabled.
 * Added SAM tag to stranded (i.e. het compressed) reduced reads to distinguish their
   strandedness from normal reduced reads.
    * GATKSAMRecord now checks for this tag when determining whether or not the read is stranded.
    * This allows us to update the FisherStrand annotation to count het compressed reduced reads
       towards the FS calculation.
    * [It would have been nice to mark the normal reads as unstranded but then we wouldn't be
       backwards compatible.]
    * Updated integration tests accordingly with new het compressed bams (both for RR and UG).
 * In the process of fixing the FS annotation I noticed that SpanningDeletions wasn't handling
   RR properly, so I fixed it too.
    * Also, the test in the UG engine for determining whether there are too many overlapping
       deletions is updated to handle RR.
 * I added a special hook in the RR integration tests to additionally run the systematic
   coverage checking tool I wrote earlier.
    * AssessReducedCoverage is now run against all RR integration tests to ensure coverage is
       not lost from original to reduced bam.
    * This helped uncover a huge bug in the MultiSampleCompressor where it would drop reads
       from all but 1 sample (now fixed).
    * AssessReducedCoverage moved from private to protected for packaging reasons.
 * #resolve GSA-639

At this point, this commit encompasses most of what is needed for het compression to go live.
There are still a few TODO items that I want to get in before the 2.5 release, but I will save
those for a separate branch because as it is I feel bad for the person who needs to review all
these changes (sorry, Mauricio).",2013-03-15 16:20:23,Eric Banks,"['public/java/test/org/broadinstitute/sting/gatk/walkers/coverage/CallableLociIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/utils/sam/GATKSAMRecordUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,a4f38a5487bf251270e41381d106cfc70509602f,18585adf2b391b5846ed64cb21555c0bfb878b80,https://github.com/broadgsa/gatk/commit/a4f38a5487bf251270e41381d106cfc70509602f,"Fixed reported bug in BQSR for RNA seq alignments with Ns.

  * ClippingOp updated to incorporate Ns in the hard clips.
  * ReadUtils.getReadCoordinateForReferenceCoordinate() updated to account for Ns.
  * Added test that covers the BQSR case we saw.
  * Created GSA-856 (for Mauricio) to add lots of tests to ReadUtils.
    * It will require refactoring code and not in the scope of what I was willing to do to fix this.",2013-03-14 15:06:45,Eric Banks,['public/java/test/org/broadinstitute/sting/utils/sam/ReadUtilsUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,baec3932a2d709002ca61aad9aef01892a60a25d,68acc1e1ea6ef0fe4a351a4b33d2c19e3ea0d41f,https://github.com/broadgsa/gatk/commit/baec3932a2d709002ca61aad9aef01892a60a25d,"Expanded functionality for writing BAMs from HaplotypeCaller

-- The new code includes a new mode to write out a BAM containing reads realigned to the called haplotypes from the HC, which can be easily visualized in IGV.
-- Previous functionality maintained, with bug fixes
-- Haplotype BAM writing code now lives in utils
-- Created a base class that includes most of the functionality of writing reads realigned to haplotypes onto haplotypes.
-- Created two subclasses, one that writes all haplotypes (previous functionality) and a CalledHaplotypeBAMWriter that will only write reads aligned to the actually called haplotypes
-- Extended PerReadAlleleLikelihoodMap.getMostLikelyAllele to optionally restrict set of alleles to consider best
-- Massive increase in unit tests in AlignmentUtils, along with several new powerful functions for manipulating cigars
-- Fix bug in SWPairwiseAlignment that produces cigar elements with 0 size, and are now fixed with consolidateCigar in AlignmentUtils
-- HaplotypeCaller now tracks the called haplotypes in the GenotypingEngine, and returns this information to the HC for use in visualization.
-- Added extensive docs to HaplotypeCaller on how to use this capability
-- BUGFIX -- don't modify the read bases in GATKSAMRecord in LikelihoodCalculationEngine in the HC
-- Cleaned up SWPairwiseAlignment.  Refactored out the big main and supplementary static methods.  Added a unit test with a bug TODO to fix what seems to be an edge case bug in SW
-- Integration test to make sure we can actually write a BAM for each mode.  This test only ensures that the code runs and doesn't exception out.  It doesn't actually enforce any MD5s
-- HaplotypeBAMWriter also left aligns indels in the reads, as SW can return a random placement of a read against the haplotype.  Calls leftAlign to make the alignments more clear, with unit test of real read to cover this case
-- Writes out haplotypes for both all haplotype and called haplotype mode
-- Haplotype writers now get the active region call, regardless of whether an actual call was made.  Only emitting called haplotypes is moved down to CalledHaplotypeBAMWriter",2013-02-22 20:22:43,Mark DePristo,"['public/java/test/org/broadinstitute/sting/utils/HaplotypeUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/UtilsUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/haplotypeBAMWriter/HaplotypeBAMWriterUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/sam/AlignmentUtilsUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,6d48f9252a08d6e98091f647802cfadbdab8107d,9d10a39130effca1ff40459e7f9abceb5b343230,https://github.com/broadgsa/gatk/commit/6d48f9252a08d6e98091f647802cfadbdab8107d,"Replace Smith-Waterman alignment with the bubble traversal.

-- Instead of doing a full SW alignment against the reference we read off bubbles from the assembly graph.
-- Smith-Waterman is run only on the base composition of the bubbles which drastically reduces runtime.
-- Refactoring graph functions into a new DeBruijnAssemblyGraph class.
-- Bug fix in path.getBases().
-- Adding validation code to the assembly engine.
-- Renaming SimpleDeBruijnAssembler to match the naming of the new Assembly graph class.
-- Adding bug fixes, docs and unit tests for DeBruijnAssemblyGraph and KBestPaths classes.
-- Added ability to ignore bubbles that are too divergent from the reference
-- Max kmer can't be bigger than the extension size.
-- Reverse the order that we create the assembly graphs so that the bigger kmers are used first.
-- New algorithm for determining unassembled insertions based on the bubble traversal instead of the full SW alignment.
-- Don't need the full read span reference loc for anything any more now that we clip down to the extended loc for both assembly and likelihood evaluation.
-- Updating HaplotypeCaller and BiasedDownsampling integration tests.
-- Rebased everything into one commit as requested by Eric
-- improvements to the bubble traversal are coming as a separate push",2013-02-05 22:12:53,Ryan Poplin,['public/java/test/org/broadinstitute/sting/utils/activeregion/ActiveRegionUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,9ec8cda4373590f3bc963c40b6f4097548334ffa,c0010979b23e14798207f7e5175f0ac4b6812057,https://github.com/broadgsa/gatk/commit/9ec8cda4373590f3bc963c40b6f4097548334ffa,"Vast improvements to AssessNA12878 code and functionality

-- AssessNA12878 now breaks out multi-allelics into bi-allelic components.  This means that we can properly assess multi-allelic calls against the bi-allelic KB
-- Refactor AssessNA12878, moving into assess package in KB.  Split out previously private classes in the walker itself into separate classes.  Added real docs for all of the classes.
-- Vastly expand (from 0) unit tests for NA12878 assessments
-- Allow sites only VCs to be evaluated by Assessor
-- Move utility for creating simple VCs from a list of string alleles from GATKVariantContextUtilsUnitTest to GATKVariantContextUtils
-- Assessor bugfix for discordant records at a site.  Previous version didn't handle properly the case where one had a non-matching call in the callset w.r.t. the KB, so that the KB element was eaten during the analysis.  Fixed.  UnitTested
-- See GSA-781 -- Handle multi-allelic variants in KB for more information
-- Bugfix for missing site counting in AssessNA12878.  Previous version would count N misses for every missed value at a site.  Not that this has much impact but it's worth fixing
-- UnitTests for BadSitesWriter
-- UnitTests for filtered and filtering sites in the Assessor
-- Cleanup end report generation code (simply the code).  Note that instead of ""indel"" the new code will print out ""INDELS""
-- Assessor DoC calculations now us LIBS and RBPs for the depth calculation.  The previous version was broken for reduced reads.  Added unit test that reads a complex reduced read example and matches the DoC of this BAM with the output of the GATK DoC tool here.
-- Added convenience constructor for LIBS using just SAMFileReader and an iterator.  It's now easy to create a LIBS from a BAM at a locus.  Added advanceToLocus function that moves the LIBS to a specific position.  UnitTested via the assessor (which isn't ideal, but is a proper test)",2013-02-20 01:19:49,Mark DePristo,['public/java/test/org/broadinstitute/sting/utils/variant/GATKVariantContextUtilsUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,b2207325b2d0488b7e173760e357a27fdc5444ef,d49cff32dfb87f93f766abcc6a091971cd8b87a8,https://github.com/broadgsa/gatk/commit/b2207325b2d0488b7e173760e357a27fdc5444ef,"Refactored GATKDocs categories some more ( GSATDG-62 )

-- Renamed ValidatePileup to CheckPileup since validation is reserved word
-- Renamed AlignmentValidation to CheckAlignment (same as above)
-- Refactored category definitions to use constants defined in HelpConstants
-- Fixed a couple of minor typos and an example error
-- Reorganized the GATKDocs index template to use supercategories
-- Refactored integration tests for renamed walkers (my earlier refactoring had screwed them up or not carried over)",2013-02-12 21:27:18,Geraldine Van der Auwera,['public/java/test/org/broadinstitute/sting/gatk/walkers/qc/CheckPileupIntegrationTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,bf10adbbaf6b52c11b9a364fef273d735e8ea6bf,a81fcb6565e4152ad5a69202df3109700bb67851,https://github.com/broadgsa/gatk/commit/bf10adbbaf6b52c11b9a364fef273d735e8ea6bf,"Encrypt GATK AWS keys using the GATK private key, and decrypt as needed as a resource when uploading to AWS logs

-- Has the overall effect that the GATK user AWS keys are no longer visible in the gatk source as plain text.  This will stop AWS from emailing me (they crawl the web looking for keys)
-- Added utility EncryptAWSKeys that takes as command line arguments the GATK user AWS access and secret keys, encrypts them with the GATK private key, and writes out the resulting file to resources in phonehome.
-- GATKRunReport now decrypts as needed these keys using the GATK public key as resources in the GATK bundle
-- Refactored the essential function of Resource (reading the resource) from IOUtils into the class itself.  Now how to get the data in the resouce is straightforward
-- Refactored md5 calculation code from a byte[] into Utils.  Added unit tests
-- Committing the encrypted AWS keys
-- #resolves https://jira.broadinstitute.org/browse/GSA-730",2013-01-30 21:41:23,Mark DePristo,"['public/java/test/org/broadinstitute/sting/gatk/phonehome/GATKRunReportUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/UtilsUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,7d6dd38ac7e63ac1fb3316f9fe42f1bdba20cd9e,47cbab701026a7fa565b2a0b9dfb7c907bc5fa3d,https://github.com/broadgsa/gatk/commit/7d6dd38ac7e63ac1fb3316f9fe42f1bdba20cd9e,"Refactoring the SimpleGenomeLoc into the now public utility UnvalidatingGenomeLoc and the RR-specific FinishedGenomeLoc.
Moved the merging utility methods into GenomeLoc and moved the unit tests around accordingly.",2013-01-30 15:45:29,Eric Banks,['public/java/test/org/broadinstitute/sting/utils/GenomeLocUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,47cbab701026a7fa565b2a0b9dfb7c907bc5fa3d,fe8a50ea5a678a6a3020e83d3e9ffde6b21a8a57,https://github.com/broadgsa/gatk/commit/47cbab701026a7fa565b2a0b9dfb7c907bc5fa3d,"Refactoring and unit testing GenomeLocParser

-- Moved previously inner class to MRUCachingSAMSequenceDictionary, and unit test to 100% coverage
-- Fully document all functions in GenomeLocParser
-- Unit tests for things like parsePosition (shocking it wasn't tested!)
-- Removed function to specifically create GenomeLocs for VariantContexts.  The fact that you must incorporate END attributes in the context means that createGenomeLoc(Feature) works correctly
-- Depreciated (and moved functionality) of setStart, setStop, and incPos to GenomeLoc
-- Unit test coverage at like 80%, moving to 100% with next commit",2013-01-29 21:51:39,Mark DePristo,"['public/java/test/org/broadinstitute/sting/utils/GenomeLocParserUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/MRUCachingSAMSequencingDictionaryUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,09673669bd21ca4c67cb83017fdbfd49a8f727af,43a12afaa580167c76d69865eee89f5e77f697e3,https://github.com/broadgsa/gatk/commit/09673669bd21ca4c67cb83017fdbfd49a8f727af,"Big intermediate commit (mostly so that I don't have to go again through merge/rebase hell) in expanding BQSR capabilities. Far from done yet:
a) Add option to stratify CalibrateGenotypeLikelihoods by repeat - will add integration test in next push.
b) Simulator to produce BAM files with given error profile - for now only given SNP/indel error rate can be given. A bad context can be specified and if such context is present then error rate is increased to given value.
c) Rewrote RepeatLength covariate to do the right thing - not fully working yet, work in progress.
d) Additional experimental covariates to log repeat unit and combined repeat unit+length. Needs code refactoring/testing",2013-01-29 00:55:46,Guillermo del Angel,['public/java/test/org/broadinstitute/variant/variantcontext/VariantContextUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,73c3decf61da0e63c289f4094f3392bcf65b6c5c,adef26ad701f88681cb2e56cf2ae0a69e8f5c214,https://github.com/broadgsa/gatk/commit/73c3decf61da0e63c289f4094f3392bcf65b6c5c,"org.broadinstitute.variant refactor, part 2

-removed sting dependencies from test classes
-removed org.apache.log4j dependency
-misc cleanup",2013-01-08 19:45:50,David Roazen,"['public/java/test/org/broadinstitute/sting/WalkerTest.java', 'public/java/test/org/broadinstitute/sting/utils/MWUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/activeregion/BandPassActivityProfileUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/variant/VCFIntegrationTest.java', 'public/java/test/org/broadinstitute/variant/VariantBaseTest.java', 'public/java/test/org/broadinstitute/variant/bcf2/BCF2EncoderDecoderUnitTest.java', 'public/java/test/org/broadinstitute/variant/bcf2/BCF2UtilsUnitTest.java', 'public/java/test/org/broadinstitute/variant/utils/BaseUtilsUnitTest.java', 'public/java/test/org/broadinstitute/variant/variantcontext/AlleleUnitTest.java', 'public/java/test/org/broadinstitute/variant/variantcontext/GenotypeLikelihoodsUnitTest.java', 'public/java/test/org/broadinstitute/variant/variantcontext/GenotypeUnitTest.java', 'public/java/test/org/broadinstitute/variant/variantcontext/GenotypesContextUnitTest.java', 'public/java/test/org/broadinstitute/variant/variantcontext/VariantContextUnitTest.java', 'public/java/test/org/broadinstitute/variant/variantcontext/VariantContextUtilsUnitTest.java', 'public/java/test/org/broadinstitute/variant/variantcontext/VariantJEXLContextUnitTest.java', 'public/java/test/org/broadinstitute/variant/variantcontext/writer/VCFWriterUnitTest.java', 'public/java/test/org/broadinstitute/variant/variantcontext/writer/VariantContextWritersUnitTest.java', 'public/java/test/org/broadinstitute/variant/vcf/IndexFactoryUnitTest.java', 'public/java/test/org/broadinstitute/variant/vcf/VCFHeaderUnitTest.java', 'public/java/test/org/broadinstitute/variant/vcf/VCFStandardHeaderLinesUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,705fb390bf81a07c332bff072a62c96a3a4517bf,531e51100767b64818819bfd29ace1443c7f4e7f,https://github.com/broadgsa/gatk/commit/705fb390bf81a07c332bff072a62c96a3a4517bf,"ArtificialBAMBuilder utility class for creating streams of GATKSAMRecords with a variety of properties

--  Allows us to make a stream of reads or an index BAM file with read having the following properties (coming from n samples, of fixed read length and aligned to the genome with M operator, having N reads per alignment start, skipping N bases between each alignment start, starting at a given alignment start)
-- This stream can be handed back to the caller immediately, or written to an indexed BAM file
-- Update LocusIteratorByStateUnitTest to use this functionality (which was refactored from LIBS unit tests and ArtificialSAMUtils)",2013-01-15 21:45:45,Mark DePristo,"['public/java/test/org/broadinstitute/sting/utils/locusiterator/LocusIteratorByStateUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/sam/ArtificialBAMBuilderUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,dfe2c7cdc72eaeeb84d48bc9b0eccdd1cb1ea34e,c2643ba4797292a78a3314e7c49be80e456c7063,https://github.com/broadgsa/gatk/commit/dfe2c7cdc72eaeeb84d48bc9b0eccdd1cb1ea34e,"Refactor LIBS into component parts, expand unit tests, some code cleanup

-- Split out all of the inner classes of LIBS into separate independent classes
-- Split / add unit tests for many of these components.
-- Radically expand unit tests for SAMRecordAlignmentState (the lowest level piece of code) making sure at least some of it works
-- No need to change unit tests or integration tests.  No change in functionality.
-- Added (currently disabled) code to track all submitted reads to LIBS, but this isn't accessible or tested",2013-01-06 16:55:18,Mark DePristo,"['public/java/test/org/broadinstitute/sting/utils/locusiterator/LegacyLocusIteratorByStateUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/locusiterator/LocusIteratorByStateBaseTest.java', 'public/java/test/org/broadinstitute/sting/utils/locusiterator/LocusIteratorByStateUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/locusiterator/ReadStateManagerUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/locusiterator/SAMRecordAlignmentStateUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/locusiterator/legacy/LegacyLocusIteratorByStateUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,90bbb7f3b7354c5c8ed116234d3c33b7f75f20e8,8476fb9c5b0b98b30945e7e40c300ecdc708ff1d,https://github.com/broadgsa/gatk/commit/90bbb7f3b7354c5c8ed116234d3c33b7f75f20e8,"BQSR optimization: read group x quality score calibration table is thread-local

-- AdvancedRecalibrationEngine now uses a thread-local table for the quality score table, and in finalizeData merges these thread-local tables into the final table.  Radically reduces the contention for RecalDatum in this very highly used table
-- Refactored the utility function to combine two tables into RecalUtils, and created UnitTests for this function, as well as all of RecalibrationTables.  Updated combine in RecalibrationReport to use this table combiner function
-- Made several core functions in RecalDatum into final methods for performance
-- Added RecalibrationTestUtils, a home for recalibration testing utilities",2012-12-24 15:46:47,Mark DePristo,"['public/java/test/org/broadinstitute/sting/utils/recalibration/RecalUtilsUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/recalibration/RecalibrationTablesUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,2450784b8a1d02ff4b52d970ef7cd016b5fc951b,155944fcb0b59f60125a2bd4c9b6df12d0c07393,https://github.com/broadgsa/gatk/commit/2450784b8a1d02ff4b52d970ef7cd016b5fc951b,Add ActiveRegion tests and refactor,2012-11-19 19:45:19,Joel Thibault,['public/java/test/org/broadinstitute/sting/gatk/traversals/TraverseActiveRegionsTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,7d88502c63bc87b941e98f8d72f232e099a541f5,86dddab1c59ab361d166eae52e5b4c032fcd2292,https://github.com/broadgsa/gatk/commit/7d88502c63bc87b941e98f8d72f232e099a541f5,Refactoring the PairHMM util class to allow for multiple implementations which can be specified by the callers via an enum argument. Adding an optimized PairHMM implementation which caches per-read calculations as well as a logless implementation which drastically reduces the runtime of the HMM while also increasing the precision of the result. In the HaplotypeCaller we now lexicographically sort the haplotypes to take maximal benefit of the haplotype offset optimization which only recalculates the HMM matrices after the first differing base in the haplotype. Many thanks to Mauricio for all the initial groundwork for these optimizations. The change to the one HC integration test is in the fourth decimal of HaplotypeScore.,2012-10-20 20:38:18,Ryan Poplin,['public/java/test/org/broadinstitute/sting/utils/PairHMMUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,fcdde809d5b0ed34b940ed9da2ab42c7ee7eb98c,f81e7a788db5bf57a97b86cd377dbaa9794094d9,https://github.com/broadgsa/gatk/commit/fcdde809d5b0ed34b940ed9da2ab42c7ee7eb98c,"Refactor ExactCallLogger into a separate class

-- Update minor integration tests with NanoSchedule due to qual accuracy update",2012-10-16 17:30:09,Mark DePristo,['public/java/test/org/broadinstitute/sting/utils/nanoScheduler/NanoSchedulerIntegrationTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,5e0365d53e5420b67c9dfcd02e79146dc48337e8,bd7964859ca96d4278d436bce88302b34d9bbcb7,https://github.com/broadgsa/gatk/commit/5e0365d53e5420b67c9dfcd02e79146dc48337e8,"ExperimentalReadShardBalancerUnitTest was being skipped; fixed

TestNG skips tests when an exception occurs in a data provider,
which is what was happening here.

This was due to an AWFUL AWFUL use of a non-final static for
ReadShard.MAX_READS. This is fine if you assume only one instance
of SAMDataSource, but with multiple tests creating multiple SAMDataSources,
and each one overwriting ReadShard.MAX_READS, you have a recipe for
problems. As a result of this the test ran fine individually, but not as
part of the unit test suite.

Quick fix for now to get the tests running -- this ""mutable static""
interface should really be refactored away though, when I have time.",2012-09-22 05:05:40,David Roazen,['public/java/test/org/broadinstitute/sting/gatk/datasources/reads/ExperimentalReadShardBalancerUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,f961ed309c0fa2d402711f32ba8a76f457b28522,f63947144f63081b0fa57dce421a4826f6a506e0,https://github.com/broadgsa/gatk/commit/f961ed309c0fa2d402711f32ba8a76f457b28522,"Intermediate commit for proper error handling in the NanoScheduler

-- Refactored error handling from HMS into utils.TraversalErrorManager, which is now used by HMS and will be usable by NanoScheduler
-- Generalized EngineFeaturesIntegrationTest to test map / reduce error throwing for nt 1, nt 2 and nct 2 (disabled)
-- Added unit tests for failing input iterator in NanoScheduler (fails)
-- Made ErrorThrowing NanoScheduable",2012-09-19 15:39:49,Mark DePristo,"['public/java/test/org/broadinstitute/sting/gatk/EngineFeaturesIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/utils/nanoScheduler/NanoSchedulerUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,271f0835d45654fc20756c85f22449344f33a330,d7600469a5416a04f067a640fc5677e9b14b608a,https://github.com/broadgsa/gatk/commit/271f0835d45654fc20756c85f22449344f33a330,"Refactor TraversalEngine to extract the progress meter functions

-- Previously these core progress metering functions were all in TraversalEngine, and available to subclasses like TraverseLoci via inheritance.  The problem here is that the upcoming data threads x cpu threads parallelism requires one master copy of the progress metering shared among all traversals, but multiple instantiations of traverse engines themselves.
-- Because the progress metering code has horrible anyway, I've refactored and vastly cleaned up and simplified all of these capabilities into TraversalProgressMeter class.  I've simplified down the classes it uses to work (STILL SOME TODOs in there) so that it doesn't reach into the core GATK engine all the time.  It should be possible to write some nice tests for it now.  By making it its own class, it can protect itself from multi-threaded access with a single synchronized printProgress function instead of carrying around multiple lock objects as before
-- Cleaned up the start up of the progress meter.  It's now handled when the meter is created, so each micro scheduler doesn't have to deal with proper initialization timing any longer
-- Simplified and made clear the interface for shutting down the traversal engines.  There's no a shutdown method in TraversalEngine that's called once by the MicroScheduler when the entire traversing in over.  Nano traversals now properly shut down (was subtle bug I undercovered here).  The printing of on traversal done metering is now handled by MicroScheduler
-- The MicroScheduler holds the single master copy of the progress meter, and doles it out to the TraversalEngines (currently 1 but in future commit there will be N).
-- Added a nice function to GenomeAnalysisEngine that returns the regions we will be processing, either the intervals requested or the whole genome.  Useful for progress meter but also probably for other infrastructure as well
-- Remove a lot of the sh*ting Bean interface getting and setting in MicroScheduler that's no longer useful.  The generic bean is just a shell interface with nothing in it.
-- By removing a lot of these bean accessors and setters many things are now final that used to be dynamic.",2012-09-09 00:17:15,Mark DePristo,['public/java/test/org/broadinstitute/sting/gatk/traversals/TraverseReadsUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,d9d29db58f695c0448b5cc164e935e4f296b2a62,4eeb2487431ca86510de5356b9275fd777df5df7,https://github.com/broadgsa/gatk/commit/d9d29db58f695c0448b5cc164e935e4f296b2a62,"Separately track time spent doing user and system CPU work

-- Allows us to ID (by proxy) time spent doing IO
-- Refactor StateMonitoryingThreadFactory to use it's own enum, not Thread.State
-- Reliable unit tests across mac and unix",2012-08-22 14:28:27,Mark DePristo,['public/java/test/org/broadinstitute/sting/utils/threading/StateMonitoringThreadFactoryUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,79accdbffabdf8923cf56122f93f6515ac32ddb5,597c94e581c669501fcdaecf92c0d9d3015f6375,https://github.com/broadgsa/gatk/commit/79accdbffabdf8923cf56122f93f6515ac32ddb5,"Final step (for now) in VA refactoring: update MD5's because, a) since it's not guaranteed that we'll iterate through reads/pileups in the same order, the rank sum dithering will change annotations, b) FS uses new generic threshold to distinguish uninformative reads (it used to use ad-hoc thresholds), c) AD definition changed and throws away uninformative reads, d) shortened general ploidy integration tests for quicker debugging. May have missed some MD5's in the update so there may be lingering test failures still",2012-08-22 15:38:51,Guillermo del Angel,"['public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/RankSumTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/annotator/VariantAnnotatorIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/genotyper/UnifiedGenotyperIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,3e0e3d58e79a60f05a23d743ccba40df4cb8630e,93510e309154085811e42e42d0f731823f9272c2,https://github.com/broadgsa/gatk/commit/3e0e3d58e79a60f05a23d743ccba40df4cb8630e,"First preliminary big refactoring of UG annotation engine. Goals: a) Remove gigantic hack that cached per-read haplotype likelihoods in a static array so that annotations would go back and retrieve them, b) unify interface for annotations between HaplotypeCaller and UnifiedGenotyper, c) as a consequence, removed and cleaned duplicated code. As a bonus, annotations have now more relevant info to help them compute values.
Major idea is that per-read haplotype likelihoods are now stored in a single unified object of class PerReadAlleleLikelihoodMap. Class implementation in theory hides internal storage details from outside work (still may need work cleaning up interface), and this object(or rather, a Map from Sample->perReadAlleleLikelihoodMap) is produced by UGCalcLikelihoods. The genotype calculation is also able to potentially use this info if needed. All InfoFieldAnnotations now get an extra argument with this map. Currently, this map is only produced for indels in UG, or for all variants within HaplotypeCaller. If this map is absent (SNPs in UG), the old Pileup interface is used, but it's avoided whenever possible. FORMAT annotations are not yet changed but will be focus of second step. Major benefit will be that annotations will be able to very easily discard non-informative reads for certain events. HaplotypeCaller also uses this new class, and no longer hard-codes the mapping of allele ->list(reads) but instead uses the same objects and interfaces as the rest of the modules. Code still needs further testing/cleaning/reviewing/debugging",2012-08-17 00:36:53,Guillermo del Angel,"['public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/BaseQualityRankSumTest.java', 'public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/ClippingRankSumTest.java', 'public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/MappingQualityRankSumTest.java', 'public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/RankSumTest.java', 'public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/ReadPosRankSumTest.java', 'public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/TransmissionDisequilibriumTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,f1fe90f9c95554a09b257b645e3424be1b917002,b5362c58b13c18bddfca0de66aa5b5b0a3886a77,https://github.com/broadgsa/gatk/commit/f1fe90f9c95554a09b257b645e3424be1b917002,"Clean, documented implementation of ThreadFactory that monitors running / blocking / waiting time of threads it creates

-- Expanded unit tests
-- Support for clean logging of results to logger
-- Refactored MyTime into AutoFormattingTime in Utils, out of TraversalEngine, for cleanliness and reuse
-- Added docs and contracts to StateMonitoringThreadFactory",2012-08-14 20:27:30,Mark DePristo,['public/java/test/org/broadinstitute/sting/utils/threading/StateMonitoringThreadFactoryUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,4b1a74083d1792d804ac67495aa88cfd3b65d151,55ed28a23dd0ff8b4698ab523a27f5db7230468c,https://github.com/broadgsa/gatk/commit/4b1a74083d1792d804ac67495aa88cfd3b65d151,"Cleanup BQSR classes

-- Moved most of BQSR classes (which are used throughout the codebase) to utils.recalibration.  It's better in my opinion to keep commonly used code in utils, and only specialized code in walkers.  As code becomes embedded throughout GATK its should be refactored to live in utils
-- Removed unncessary imports of BQSR in VQSR v3
-- Now ready to refactor QualQuantizer and unit test into a subclass of RecalDatum, refactor unit tests into RecalDatum unit tests, and generalize into hierarchical recal datum that can be used in QualQuantizer and the analysis of adaptive context covariate
-- Update PluginManager to sort the plugins and interfaces.  This allows us to have a deterministic order in which the plugin classes come back, which caused BQSR integration tests to temporarily change because I moved my classes around a bit.",2012-07-27 16:25:06,Mark DePristo,"['public/java/test/org/broadinstitute/sting/gatk/walkers/bqsr/BQSRGathererUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/recalibration/ContextCovariateUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/recalibration/CycleCovariateUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/recalibration/ReadCovariatesUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/recalibration/ReadGroupCovariateUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/recalibration/RecalibrationReportUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,48a129af529e715ce809eb620526c3c4413a80da,7da3928b9554c549a21f02dfee8b6d14d8be8e9c,https://github.com/broadgsa/gatk/commit/48a129af529e715ce809eb620526c3c4413a80da,"Allele refactoring checkpoint #3: all integration tests except for PoolCaller are passing now.  Fixed a couple of bugs from old code that popped up during md5 difference review.  Added VariantContextUtils.requiresPaddingBase() method for tools that create alleles to use for determining whether or not to add the ref padding base.  One of the HaplotypeCaller tests wasn't passing because of RankSumTest differences, so I added a TODO for Ryan to look into this.",2012-07-27 19:48:40,Eric Banks,"['public/java/test/org/broadinstitute/sting/gatk/walkers/validation/ValidationAmpliconsIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/variantutils/CombineVariantsIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/utils/codecs/vcf/VCFIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,67a7402a9b024e54756de506b6fd572e2db8a8bc,5d060fb49d0f5bdd0e9e6912307d037e2941ffab,https://github.com/broadgsa/gatk/commit/67a7402a9b024e54756de506b6fd572e2db8a8bc,"Allele refactoring checkpoint 2: all code finally compiles, AD and STR annotations are fixed, and most of the UG integration tests pass.",2012-07-27 03:27:11,Eric Banks,"['public/java/test/org/broadinstitute/sting/utils/codecs/vcf/VCFAlleleClipperUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/variantcontext/VariantContextUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/variantcontext/VariantContextUtilsUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/variantcontext/writer/VCFWriterUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,ca6fad704d12831da2e9737078b611e00ea97d84,162339f0e372eaf9b54098fa1bb83b76d49462bb,https://github.com/broadgsa/gatk/commit/ca6fad704d12831da2e9737078b611e00ea97d84,Initial checkpoint commit of VariantContext/Allele refactoring.  There were just too many problems associated with the different representation of alleles in VCF (padded) vs. VariantContext (unpadded).  We are moving VC to use the VCF representation.  No more reference base for indels in VC and no more trimming and padding of alleles.  Even reverse trimming has been stopped (the theory being that writers of VCF now know what they are doing and often want the reverse padding if they put it there; this has been requested on GetSatisfaction).  Code compiles but presumably pretty much all tests with indels with fail at this point.,2012-07-26 05:50:39,Eric Banks,"['public/java/test/org/broadinstitute/sting/utils/variantcontext/AlleleUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/variantcontext/VariantContextUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,5d1951cdaef41d8dce1d6a0bfdb6817bd6d82386,6ac7a92fbf997f9a0fdbd45bea8dca5d218a43ac,https://github.com/broadgsa/gatk/commit/5d1951cdaef41d8dce1d6a0bfdb6817bd6d82386,"Enabling symbolic alleles in BCF2

-- Bugfix for VCFDiffableReader: don't add null filters to object
-- BCF2Codec uses new VCFAlleleClipper to handle clipping / unclipping of alleles
-- AbstractVCFCodec: decodeLoc uses full decode() [still doesn't decode genotypes] to avoid dangerous code duplication.  Refactored code that clipped alleles and determined end position into updateBuilderAllelesAndStop method that uses new VCFAlleleClipper. Fixed bug by ensuring the VCF codec always uses the END field in the INFO when it's provided, not just in the case where the there's a biallelic symbolic allele
-- Brand new home for allele clipping / padding routines in VCFAlleleClipper.  Actually documented this code, which results in lots of **** negative comments on the code quality.  Eric has promised that he and Ami are going to rethink this code from scratch.  Fixed many nasty bugs in here, cleaning up unnecessary branches, etc.  Added UnitTests in VCFAlleleClipper that actually test the code full.  In the process of testing I discovered lots of edge cases that don't work, and I've commented out failing tests or manually skipped them, noting how this tests need to be fixed.  Even introduced some minor optimizations
-- VariantContext: validateAllele was broken in the case where there were mixed symbolic and concrete alleles, failing validation for no reason.  Fixed.
-- Added computeEndFromAlleles() function to VariantContextUtils and VariantContextBuilder for convenience calculating where the VC really ends given alleles
--",2012-06-29 17:55:52,Mark DePristo,"['public/java/test/org/broadinstitute/sting/gatk/walkers/diagnostics/targets/DiagnoseTargetsIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/variantrecalibration/VariantRecalibrationWalkersIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/utils/codecs/vcf/VCFAlleleClipperUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,6ac7a92fbf997f9a0fdbd45bea8dca5d218a43ac,eaadc526de02e3d891c703d1d01a0f5b643955e4,https://github.com/broadgsa/gatk/commit/6ac7a92fbf997f9a0fdbd45bea8dca5d218a43ac,"BCF2 with support symbolic alleles

-- refactored allele clipping / padding code into VCFAlleleClipping class, and added much needed docs and TODOs for methods dev guys
-- Added real unit tests for (some) clipping operations in VCFUtilsUnitTest",2012-06-29 02:36:26,Mark DePristo,"['public/java/test/org/broadinstitute/sting/BaseTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/CNV/SymbolicAllelesIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/filters/VariantFiltrationIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/variantrecalibration/VariantRecalibrationWalkersIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/utils/codecs/vcf/VCFCodecUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/codecs/vcf/VCFIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/utils/codecs/vcf/VCFUtilsUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,92370c9f3f6108d42d7172c65f2cd93463d1a125,98c4f6ff8c2de706962d3765d683402b76699fbc,https://github.com/broadgsa/gatk/commit/92370c9f3f6108d42d7172c65f2cd93463d1a125,"Refactored parsing of Rod/IntervalBinding. Queue S/G now uses all interval arguments passed to CommandLineGATK QFunctions including support for BED/tribble types, XL, ISR, and padding.
Updated HSP to use new padding arguments instead of flank intervals file, plus latest QC evals.
IntervalUtils return unmodifiable lists so that utilities don't mutate the collections.
Added a JavaCommandLineFunction.javaGCThreads option to test reducing java's automatic GC thread allocation based on num cpus.
Added comma to list of characters to convert to underscores in GridEngine job names so that GE JSV doesn't choke on the -N values.
JobRunInfo handles the null done times when jobs crash with strange errors.",2012-06-27 05:15:22,Khalid Shakir,"['public/java/test/org/broadinstitute/sting/gatk/GenomeAnalysisEngineUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/interval/IntervalUtilsUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,5e9dd3c601c214be887cb374b66e6fb9fc198875,e03ab2d2920ab78221e6ace54235cf6487d3719b,https://github.com/broadgsa/gatk/commit/5e9dd3c601c214be887cb374b66e6fb9fc198875,"Finalizing BCF2 mark III commit

-- Moved GENOTYPE_KEY vcf header line to VCFConstants.  This general migration and cleanup is on Eric's plate now
-- Updated HC to initialize the annotation engine in an order that allows it to write a proper VCF header.  Still doesn't work...
-- Updating integration test files.  Moved many more files into public/testdata.  Updated their headers to all work correctly with new strict VCF header checking.
-- Bugfix for TandemRepeatAnnotation that must be unbounded not A count type as it provides info for the REF as well as each alt
-- No longer add FALSE values to flag values in VCs in VariantAnnotatorEngine.  DB = 0 is never seen in the output VCFs now
-- Fixed bug in VCFDiffableReader that didn't differeniate between ""."" and ""PASS"" VC filter status
-- Unconditionally add lowQual Filter to UG output VCF files as this is in some cases (EMIT_ALL_SITES) used when the previous check said it wouldn't be
-- VariantsToVCF now properly writes out the GT FORMAT field
-- BCF2 codec explodes when reading symbolic alleles as I literally cannot figure out how to use the allele clipping code.  Eric said he and Ami will clean up this whole piece of instructure
-- Fixed bug in BCF2Codec that wasn't setting the phase field correctly.  UnitTested now
-- PASS string now added at the end of the BCF2 dictionary after discussion with Heng
-- Fixed bug where I was writing out all field values as BigEndian.  Now everything is LittleEndian.
-- VCFHeader detects the case where a count field has size < 0 (some of our files have count = -1) and throws a UserException
-- Cleaned up unused code
-- Fixed bug in BCF2 string encoder that wasn't handling the case of an empty list of strings for encoding
-- Fixed bug where all samples are no called in a VC, in which case we (like the VCFwriter) write out no called diploid genotypes for all samples
-- We always write the number of genotype samples into the BCF2 nSamples header.  How we can have a variable number of samples per record isn't clear to me, as we don't have a map from missing samples to header names...
-- Removed old filtersWereAppliedToContext code in VCF as properly handle unfiltered, filtered, and PASS records internally
-- Fastpath function getDisplayBases() in allele that just gives you the raw bytes[] you'd see for an Allele
-- Genotype fields no longer differentiate between unfiltered, filtered, and PASS values.  Genotype objects are all PASS implicitly, or explicitly filtered.  We only write out the FT values if at least one sample is filtered.  Removed interface functions and cleaned up code
-- Refactored padAllele code from createVariantContextWithPaddedAlleles into the function padAllele so that it actually works.  In general, **** NEVER COPY CODE **** if you need to share funcitonality make a function, that's why there were invented!
-- Increased the default number of records to read for DiffObjects to 1M",2012-06-19 13:46:26,Mark DePristo,"['public/java/test/org/broadinstitute/sting/gatk/datasources/rmd/ReferenceOrderedQueryDataPoolUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/refdata/tracks/FeatureManagerUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/refdata/utils/FeatureToGATKFeatureIteratorUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/CNV/SymbolicAllelesIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/annotator/VariantAnnotatorIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/beagle/BeagleIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/filters/VariantFiltrationIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/genotyper/UnifiedGenotyperIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/phasing/ReadBackedPhasingIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/recalibration/RecalibrationWalkersIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/variantrecalibration/VariantRecalibrationWalkersIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/variantutils/CombineVariantsIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/variantutils/LiftoverVariantsIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/variantutils/SelectVariantsIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/utils/codecs/vcf/VCFIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,5fcdabd6b13b6259746fdc87be5433c0ff81b5e0,428d43e8ccf3ccc7d8843edefc72f449d4de932d,https://github.com/broadgsa/gatk/commit/5fcdabd6b13b6259746fdc87be5433c0ff81b5e0,"Optimizations for VCF and BCF2

-- encodeTyped in BCF2Encoder now with specialized versions for int, float, and string, avoiding unnecessary intermediate list creation and dynamic type checking.  encodeTypedMissing also includes inline operations now instead of using Collections.emptyList() version.  Lots of contracts.  User code updated to use specialized versions where possible
-- Misc code refactoring
-- Updated VCF float formating to always include 3 sig digits for values < 1, and 2 for > 1.  Updating MD5s accordingly
-- Expanded testing of BCF2Decoder to really use all of the encodeTyped* operations",2012-06-14 17:22:31,Mark DePristo,"['public/java/test/org/broadinstitute/sting/gatk/walkers/annotator/VariantAnnotatorIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/beagle/BeagleIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/genotyper/UnifiedGenotyperIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/variantutils/CombineVariantsIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/variantutils/SelectVariantsIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/utils/codecs/bcf2/BCF2EncoderDecoderUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,91d65ca325eba18d842d18acec6ca1d790477f18,63a31c2af5fc45d9aa0a82f45ffca0ea3237a6ab,https://github.com/broadgsa/gatk/commit/91d65ca325eba18d842d18acec6ca1d790477f18,"No more makePrecisionFormatStringFromDenominatorValue

-- As values in VCs are becoming their native Java types the VCFWriter needs to own proper float formating.
-- Created a smart float formatter in VCFWriter, with unit tests
-- Removed makePrecisionFormatStringFromDenominatorValue and its uses
-- Fix broken contracted
-- Refactored some code from the encoder to utils in BCF2
-- HaplotypeCaller's GenotypingEngine was using old version of subset to context.  Replaced with a faster call that I think is correct. Ryan, please confirm.",2012-06-10 12:55:23,Mark DePristo,"['public/java/test/org/broadinstitute/sting/gatk/walkers/variantutils/CombineVariantsUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/codecs/bcf2/BCF2EncoderDecoderUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/codecs/vcf/VCFHeaderUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/variantcontext/writer/VCFWriterUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,2f151b24f5626328a804e9b9dfae7cc4fb5caef5,05ae15974689201d6cdc82ae019e07a987e43556,https://github.com/broadgsa/gatk/commit/2f151b24f5626328a804e9b9dfae7cc4fb5caef5,Refactored VariantsToTable so that 1) genotype-level fields can be specified (stabilized and supported code) and 2) the --moltenize argument could be supported to produce molten output of the data.  Added tests that cover these capabilities.,2012-06-04 18:28:32,Eric Banks,['public/java/test/org/broadinstitute/sting/gatk/walkers/variantutils/VariantsToTableIntegrationTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,a0c566d26e7a5d1740f73610b10b6bab24725970,711d23ff58a8f8c8ddcb3430f219696ce42c8602,https://github.com/broadgsa/gatk/commit/a0c566d26e7a5d1740f73610b10b6bab24725970,"Bugfixes and testdata cleanup

-- Cut down the size of a few large files in public/testdata that were only used in part
-- Refactor vcf Filename => shadow BCF filename to BCF2Utils.  Fix bug in WalkerTest due to the way this was handled previously",2012-05-24 17:26:05,Mark DePristo,"['public/java/test/org/broadinstitute/sting/WalkerTest.java', 'public/java/test/org/broadinstitute/sting/gatk/refdata/utils/FeatureToGATKFeatureIteratorUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/variantcontext/writer/VariantContextWritersUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,297d4d3334dda25d74450b673ca3766f29f1b3aa,4c58567b151fd4dca8fad0ee2d5d5061e2942335,https://github.com/broadgsa/gatk/commit/297d4d3334dda25d74450b673ca3766f29f1b3aa,"Extensive refactoring of the GATKReports.  This was a beast.

The practical differences between version 1.0 and this one (v1.1) are:

* the underlying data structure now uses arrays instead of hashes, which should drastically reduce the memory overhead required to create large tables.
* no more primary keys; you can still create arbitrary IDs to index into rows, but there is no special cased primary key column in the table.
* no more dangerous/ugly table operations supported except to increment a cell's value (if an int) or to concatenate 2 tables.

Integration tests change because table headers are different.
Old classes are still lying around.  Will clean those up in a subsequent commit.",2012-05-18 05:11:26,Eric Banks,"['public/java/test/org/broadinstitute/sting/gatk/report/GATKReportUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/bqsr/BQSRGathererUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/diagnostics/ErrorRatePerCycleIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/diagnostics/ReadGroupPropertiesIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/varianteval/VariantEvalIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,4c58567b151fd4dca8fad0ee2d5d5061e2942335,3cfe94bede48d8bbd530a8ba7015a103f8cf0f18,https://github.com/broadgsa/gatk/commit/4c58567b151fd4dca8fad0ee2d5d5061e2942335,"New annotation for indels that describe if they're STR's and their characteristics. If an indel is a STR, 3 fields are added to INFO: STR (boolean), RU = repeat unit (String), RPA = number of repetitions per allele. So, for example, if ATATAT* context gets changed to ATAT and ATATATAT, then RU=AT and RPA=3,2,4. Will be made standard annotation shortly. Added unit tests for new functionality. Pending: refactor VariantContextUtils.isRepeat() to unify code, and fix VariantEval functionality.",2012-05-17 19:28:19,Guillermo del Angel,['public/java/test/org/broadinstitute/sting/utils/variantcontext/VariantContextUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,27b1aa5dd3b8ecfc84aa96b810defc4c0aa2d7e9,4f37d6d399866bb90169fb1fbdde32e880964f4c,https://github.com/broadgsa/gatk/commit/27b1aa5dd3b8ecfc84aa96b810defc4c0aa2d7e9,Don't allow N's in insertions when discovering indels. Maybe better solution will be to use them as wildcards and merge them with compatible regular insertion alleles but for now it's easier to ignore them. Minor refactoring of Allele.accepableAlleleBases to support this. Added unit test to test consensus allele counter in presence of N's,2012-05-10 14:29:19,Guillermo del Angel,"['public/java/test/org/broadinstitute/sting/BaseTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/genotyper/IndelGenotypeLikelihoodsUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,43d97c2e00024311f43c0024104ac9311ff31865,58c470a6c5a23d626b582d89dc83724a42d4d2c1,https://github.com/broadgsa/gatk/commit/43d97c2e00024311f43c0024104ac9311ff31865,"Rev Tribble to r97, adding binary feature support

From tribble logs:

Binary feature support in tribble

-- Massive refactoring and cleanup
-- Many bug fixes throughout
-- FeatureCodec is now general, with decode etc. taking a PositionBufferedStream
as an argument not a String
-- See ExampleBinaryCodec for an example binary codec
-- AbstractAsciiFeatureCodec provides to its subclass the same String decode,
readHeader functionality before.  Old ASCII codecs should inherit from this base
class, and will work without additional modifications
-- Split AsciiLineReader into a position tracking stream
(PositionalBufferedStream).  The new AsciiLineReader takes as an argument a
PositionalBufferedStream and provides the readLine() functionality of before.
Could potentially use optimizations (its a TODO in the code)
-- The Positional interface includes some more functionality that's now
necessary to support the more general decoding of binary features
-- FeatureReaders now work using the general FeatureCodec interface, so they can
index binary features
-- Bugfixes to LinearIndexCreator off by 1 error in setting the end block
position
-- Deleted VariantType, since this wasn't used anywhere and it's a particularly
clean why of thinking about the problem
-- Moved DiploidGenotype, which is specific to Gelitext, to the gelitext package
-- TabixReader requires an AsciiFeatureCodec as it's currently only implemented
to handle line oriented records
-- Renamed AsciiFeatureReader to TribbleIndexedFeatureReader now that it handles
Ascii and binary features
-- Removed unused functions here and there as encountered
-- Fixed build.xml to be truly headless
-- FeatureCodec readHeader returns a FeatureCodecHeader obtain that contains a
value and the position in the file where the header ends (not inclusive).
TribbleReaders now skip the header if the position is set, so its no longer
necessary, if one implements the general readHeader(PositionalBufferedStream)
version to see header lines in the decode functions.  Necessary for binary
codecs but a nice side benefit for ascii codecs as well
-- Cleaned up the IndexFactory interface so there's a truly general createIndex
function that takes the enumerated index type.  Added a writeIndex() function
that writes an index to disk.
-- Vastly expanded the index unit tests and reader tests to really test linear,
interval, and tabix indexed files.  Updated test.bed, and created a tabix
version of it as well.
-- Significant BinaryFeaturesTest suite.
-- Some test files have indent changes",2012-05-03 11:02:28,Mark DePristo,"['public/java/test/org/broadinstitute/sting/gatk/walkers/variantutils/CombineVariantsUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/codecs/hapmap/HapMapUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/genotype/vcf/VCFHeaderUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/genotype/vcf/VCFWriterUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,58c470a6c5a23d626b582d89dc83724a42d4d2c1,e448cfcc5995d110e3acfbc6d6799d07d854bf1b,https://github.com/broadgsa/gatk/commit/58c470a6c5a23d626b582d89dc83724a42d4d2c1,"Rev'ing Tribble from 53 to 94

-- Other tribble contributors did major refactoring / simplification of tribble, which required some changes to GATK code
-- Integrationtests pass without modification, though some very old index files (callable loci beds) were apparently corrupt and no longer tolerated by the newer tribble codebase",2012-04-28 17:20:16,Mark DePristo,"['public/java/test/org/broadinstitute/sting/WalkerTest.java', 'public/java/test/org/broadinstitute/sting/utils/codecs/vcf/IndexFactoryUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,730208133ba0fd824287694c5ee24f4e4606683b,1bbb156afab1ad261577ac739cce310255a9e7cf,https://github.com/broadgsa/gatk/commit/730208133ba0fd824287694c5ee24f4e4606683b,"Several fixes and improvements to Pool caller with ancillary test functions (not done yet):
a) Utility class called Probability Vector that holds a log-probability vector and has the ability to clip ends that deviate largely from max value.
b) Used this class to hold site error model, since likelihoods of error model away from peak are so far down that it's not worth computing with them and just wastes time.
c) Expand unit tests and add an exhaustive test for ErrorModel class.
d) Corrected major math bug in ErrorModel uncovered by exhaustive test: log(e^x) is NOT x if log's base = 10.
e) Refactored utility functions that created artificial pileups for testing into separate class ArtificialPileupTestProvider. Right now functionality is limited (one artificial contig of 10 bp), can only specify pileups in one position with a given number of matches and mismatches to ref) but functionality will be expanded in future to cover more test cases.
f) Use this utility class for IndelGenotypeLikelihoods unit test and for PoolGenotypeLikelihoods unit test (the latter testing functionality still not done).
g) Linearized implementation of biallelic exact model (very simple approach, similar to diploid exact model, just abort if we're past the max value of AC distribution and below a threshold). Still need to add unit tests for this and to expand to multiallelic model.
h) Update integration test md5's due to minor differences stemming from linearized exact model and better error model math",2012-04-27 18:41:17,Guillermo del Angel,['public/java/test/org/broadinstitute/sting/gatk/walkers/genotyper/IndelGenotypeLikelihoodsUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,68d0211fa1cf8e0f9803e64d60672b800716a20c,4999ae87adcc5d279c182a666ece6264c159e85b,https://github.com/broadgsa/gatk/commit/68d0211fa1cf8e0f9803e64d60672b800716a20c,"Improved BQSR plotting and some new parameters

   * Refactored CycleCovariate to be a fragment covariate instead of a per read covariate
   * Refactored the CycleCovariateUnitTest to test the pairing information
   * Updated BQSR Integration tests accordingly
   * Made quantization levels parameter not hidden anymore
   * Added hidden option to keep intermediate plotting files for debug purposes (they're automatically deleted)
   * Added hidden option not to generate the plots automatically (important for scatter/gathering)",2012-04-18 17:02:41,Mauricio Carneiro,['public/java/test/org/broadinstitute/sting/gatk/walkers/bqsr/CycleCovariateUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,f0c81b59b05fe7e5bfc292402c575edc94a50475,952280bef1b8162c4cdfa5e2f108902e777e04e4,https://github.com/broadgsa/gatk/commit/f0c81b59b05fe7e5bfc292402c575edc94a50475,"Implementation of the new BQSR plotting infrastructure

   * removed low quality bases from the recalibration report.
   * refactored the Datum (Recal and Accuracy) class structure
   * created a new plotting csv table for optimized performance with the R script
   * added a datum object that carries the accuracy information (AccuracyDatum) for plotting
   * added mean reported quality score to all covariates
   * added QualityScore as a covariate for plotting purposes
   * added unit test to the key manager to operate with one required covariate and multiple optional covariates
   * integrated the plotting into BQSR (automatically generates the pdf with the recalibration tearsheet)",2012-04-12 17:52:32,Mauricio Carneiro,['public/java/test/org/broadinstitute/sting/gatk/walkers/bqsr/BQSRKeyManagerUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,c78b0eee3a33c44617c273c216d12ffafe7fa885,f9f8589692fece0185a7e8e059b75ee4672d1c8d,https://github.com/broadgsa/gatk/commit/c78b0eee3a33c44617c273c216d12ffafe7fa885,"Refactoring/fixing up UG HMM code: a) Make code use PairHMM class instead of having duplicated code. That way UG and HaplotypeCaller now use same core code. Changes to be able to do this: 1. Compute context-dependent GOP as a function of read, not of haplotype, b) Extracted code to initialize HMM arrays into separate method, c) Move PairHMM class and unit test to public, d) Reenable banded code in PairHMM, inverted sense of flag (true=enable feature) but leave off in HaplotypeCaller.",2012-04-17 18:22:48,Guillermo del Angel,"['public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/BaseQualityRankSumTest.java', 'public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/MappingQualityRankSumTest.java', 'public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/RankSumTest.java', 'public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/ReadPosRankSumTest.java', 'public/java/test/org/broadinstitute/sting/WalkerTest.java', 'public/java/test/org/broadinstitute/sting/gatk/EngineFeaturesIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/report/GATKReportUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/FlagStatIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/activeregionqc/CountReadsInActiveRegionsIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/genotyper/ExactAFCalculationModelUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/genotyper/UnifiedGenotyperIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/varianteval/VariantEvalIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/varianteval/VariantEvalWalkerUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/R/RUtilsUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/activeregion/ActivityProfileUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/text/ListFileUtilsUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,f9f8589692fece0185a7e8e059b75ee4672d1c8d,ec9822b2a72040d3053adb4f3ed98b965d7df120,https://github.com/broadgsa/gatk/commit/f9f8589692fece0185a7e8e059b75ee4672d1c8d,"Refactoring/fixing up UG HMM code: a) Make code use PairHMM class instead of having duplicated code. That way UG and HaplotypeCaller now use same core code. Changes to be able to do this: 1. Compute context-dependent GOP as a function of read, not of haplotype, b) Extracted code to initialize HMM arrays into separate method, c) Move PairHMM class and unit test to public, d) Reenable banded code in PairHMM, inverted sense of flag (true=enable feature) but leave off in HaplotypeCaller.",2012-04-11 17:56:51,Guillermo del Angel,['public/java/test/org/broadinstitute/sting/utils/PairHMMUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,4b45a2c99d9f9b72873b059c303cac19869ad888,8c0718a7c9f28461b84c2ce2727dcba598423acb,https://github.com/broadgsa/gatk/commit/4b45a2c99d9f9b72873b059c303cac19869ad888,"Final version of new VariantEval infrastructure.

*** WAY FASTER ***
 -- 3x performance for multiple sample analysis with 1000 samples
 -- Analyzing 1MB of the ESP call set (3100 samples) takes 40 secs, compared to several minutes in the previous version
 -- According to JProfiler all of the runtime is now spent decoding genotypes, which will only get better when we move to BCF2

-- Remove the TableType system, as this was way too complex.  No longer possible to embed what were effectively multiple tables in a single Evaluator.  You now have to have 1 table per eval
-- Replaced it with @Molten, which allows an evaluator to provide a single Map from variable -> value for analysis.  IndelLengthHistogram is now a @Molten data type.  GenotypeConcordance is also.
-- No longer allow Evaluators to use private and protected variables at @DataPoints.  You get an error if you do.
-- Simplified entire IO system of VE.  Refactored into VariantEvalReportWriter.
-- Commented out GenotypePhasingEvaluator, as it uses the retired TableType
-- Stratifications are all fully typed, so it's easy for GATKReports to format them.
-- Removed old VE work around from GATKReportColumn
-- General code cleanup throughout
-- Updated integration tests",2012-03-30 19:28:47,Mark DePristo,"['public/java/test/org/broadinstitute/sting/BaseTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/varianteval/VariantEvalIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,cbd21c6339f8e65c1aad94a34175d9666b001cb7,6da957182980f704c62bf65bc23ee7842142413c,https://github.com/broadgsa/gatk/commit/cbd21c6339f8e65c1aad94a34175d9666b001cb7,"Nasty, nasty.....

VariantEval is overly abusive of the GATKReport (lack of) spec.

   1. It converts numeric values (longs, integers and doubles) to string before sending to the Report, then expects it to decipher that those were actually numbers.
   2. Worse, the stratification modules somehow instead of sending the actual values to the report table, sends a string with the value ""unknown"" and then abuses the GATKReport spec to convert those ""unknown"" placeholder values with numbers. Then again, it expects the report to know those are numbers, not strings.

   Now that the GATKReport HAS specs, VariantEval needs to be overhauled to conform with that. In the meantime, I have added special ad-hoc treatment to these wrong contracts. It works, and the integration tests all passed without changing any MD5's, but right after Mark and Ryan commit their VariantEval refactors, I will step in to change the way it interacts with the GATKReport, so we can clean up the GATKReport.

   No wonder, the printing needed to be O(n^2).",2012-03-29 21:49:42,Mauricio Carneiro,"['public/java/test/org/broadinstitute/sting/gatk/walkers/bqsr/BQSRGathererUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/varianteval/VariantEvalIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,deb45865599df06e2fb96c177c377f6c982c479c,0a56a14d099e90e01a9fafdeb030199c56de1002,https://github.com/broadgsa/gatk/commit/deb45865599df06e2fb96c177c377f6c982c479c,"Next intermediate commit for new pool caller structure: a) Bug fixes in pool GL computation. Now, correct GL's are returned per each pool to the UG engine. Work still needs to be done in redoing interface with exact model. b) Added unit tests for new MathUtils dot product and logDotProduct functions. c) Refactorings of UnifiedGentotyperEngine since N (size of prior/posterior arrays) is no longer necessarily nSamples+1 but, in general, nSamplesPerPool*nPools+1",2012-03-25 01:49:43,Guillermo del Angel,['public/java/test/org/broadinstitute/sting/utils/MathUtilsUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,3bfca0ccfd606ca5001a1dc3fdab7e43d351f476,ca11ab39e7fb0821129360d301dfcf2906ed78dd,https://github.com/broadgsa/gatk/commit/3bfca0ccfd606ca5001a1dc3fdab7e43d351f476,"BitSet implementation of the on-the-fly recalibration using the CSV format file.

 Infrastructure:
   * Added static interface to all different clipping algorithms of low quality tail clipping
   * Added reverse direction pileup element event lookup (indels) to the PileupElement and LocusIteratorByState
   * Complete refactor of the KeyManager. Much cleaner implementation that handles keys with no optional covariates (necessary for on-the-fly recalibration)
   * EventType is now an independent enum with added capabilities. All functionality is now centralized.

 BQSR and RecalibrateBases:
   * On-the-fly recalibration is now generic and uses the same bit set structure as BQSR for a reduced memory footprint
   * Refactored the object creation to take advantage of the compact key structure
   * Replaced nested hash maps with single hash maps indexed by bitsets
   * Eliminated low quality tails from the context covariate (using ReadClipper's write N's algorithm).
   * Excluded contexts with N's from the output file.
   * Fixed cycle covariate for discrete platforms (need to check flow cycle platforms now!)
   * Redfined error for indels to look at the previous base in negative strand reads (using new PE functionality)
   * Added the covariate ID (for optional covariates) to the output for disambiguation purposes
   * Refactored CovariateKeySet -- eventType functionality is now handled by the EventType enum.
   * Reduced memory usage of the BQSR script to 4

 Tests:
   * Refactored BQSRKeyManagerUnitTest to handle the new implementation of the key manager
   * Added tests for keys without optional covariates
   * Added tests for on-the-fly recalibration (but more tests are necessary)",2012-03-08 19:52:28,Mauricio Carneiro,"['public/java/test/org/broadinstitute/sting/gatk/walkers/bqsr/ContextCovariateUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/bqsr/CycleCovariateUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/recalibration/BaseRecalibrationUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/sam/GATKSAMRecordUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,e73406b9b50bbfbce270c50641dafc7139ac0eed,86eed6de0706d519d979922148727bcf36ac456f,https://github.com/broadgsa/gatk/commit/e73406b9b50bbfbce270c50641dafc7139ac0eed,"CountReadsInActiveRegions now emits a detailed GATK report

-- This report details which intervals are coming in and how many reads they contain
-- Added integration test to verify that the intervals aren't changing, before heading into the ART refactor",2012-03-14 13:43:45,Mark DePristo,['public/java/test/org/broadinstitute/sting/gatk/walkers/activeregionqc/CountReadsInActiveRegionsIntegrationTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,1011f3862ba7ac3d7b4cebb4f28e1603c84be6f1,8158348e0188f9581a171918003e165c085180f0,https://github.com/broadgsa/gatk/commit/1011f3862ba7ac3d7b4cebb4f28e1603c84be6f1,"CalibrateGenotypeLikelihoods now emits the position of the variant for debugging

-- Refactored some duplicated code (FYI, code duplication = root of all evil) into shared functions
-- Added long-missing integrationtests
-- CHRIS/RYAN -- it would be very good to add an integration test covering external VCF files as I believe we rely on this functionality and it's not tested at all",2012-03-08 13:57:29,Mark DePristo,['public/java/test/org/broadinstitute/sting/BaseTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,0920a1921eb02d3d6000dd380086732dd635cfc6,14981bed10fe519f60a58305bdf71d59f802b123,https://github.com/broadgsa/gatk/commit/0920a1921eb02d3d6000dd380086732dd635cfc6,Minor fixes to splitting multi-allelic records (as regards printing indel alleles correctly); minor code refactoring; adding integration tests to cover +/- splitting multi-allelics.,2012-02-13 20:09:53,Eric Banks,['public/java/test/org/broadinstitute/sting/gatk/walkers/variantutils/VariantsToTableIntegrationTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,5af373a3a13a3558d758fb280e8cdced5c4bc949,aa097a83d58db40403639fe2d71af59efb254b00,https://github.com/broadgsa/gatk/commit/5af373a3a13a3558d758fb280e8cdced5c4bc949,"BQSR with indels integrated!

   * added support to base before deletion in the pileup
   * refactored covariates to operate on mismatches, insertions and deletions at the same time
   * all code is in private so original BQSR is still working as usual in public
   * outputs a molten CSV with mismatches, insertions and deletions, time to play!
   * barely tested, passes my very simple tests... haven't tested edge cases.",2012-02-08 19:39:55,Mauricio Carneiro,['public/java/test/org/broadinstitute/sting/utils/sam/GATKSAMRecordUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,ffd61f4c1cdbf95dafc14976a375d31cc00e40f9,4aacaf89165fa8cb974501d3023fe8c753ee585b,https://github.com/broadgsa/gatk/commit/ffd61f4c1cdbf95dafc14976a375d31cc00e40f9,"Refactor the Pileup Element with regards to indels

Eric reported this bug due to the reduced reads failing with an index out of bounds on what we thought was a deletion, but turned out to be a read starting with insertion.

   * Refactored PileupElement to distinguish clearly between deletions and read starting with insertion
   * Modified ExtendedEventPileup to correctly distinguish elements with deletion when creating new pileups
   * Refactored most of the lazyLoadNextAlignment() function of the LocusIteratorByState for clarity and to create clear separation between what is a pileup with a deletion and what's not one. Got rid of many useless if statements.
   * Changed the way LocusIteratorByState creates extended event pileups to differentiate between insertions in the beginning of the read and deletions.
   * Every deletion now has an offset (start of the event)
   * Fixed bug when LocusITeratorByState found a read starting with insertion that happened to be a reduced read.
   * Separated the definitions of deletion/insertion (in the beginning of the read) in all UG annotations (and the annotator engine).
   * Pileup depth of coverage for a deleted base will now return the average coverage around the deletion.
   * Indel ReadPositionRankSum test now uses the deletion true offset from the read, changed all appropriate md5's
   * The extra pileup elements now properly read by the Indel mode of the UG made any subsequent call have a different random number and therefore all RankSum tests have slightly different values (in the 10^-3 range). Updated all appropriate md5s after extremely careful inspection -- Thanks Ryan!

 phew!",2012-01-17 23:56:50,Mauricio Carneiro,"['public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/BaseQualityRankSumTest.java', 'public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/RankSumTest.java', 'public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/ReadPosRankSumTest.java', 'public/java/test/org/broadinstitute/sting/BaseTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/genotyper/UnifiedGenotyperIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/utils/sam/ReadUtilsUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,e61e5c75891154393af93c9c529b60d446bf4bac,7c58d8e37d490c890baac6421b6c309b4297716d,https://github.com/broadgsa/gatk/commit/e61e5c75891154393af93c9c529b60d446bf4bac,"Refactor of ReadClipper unit tests

* expanded the systematic cigar string space test framework Roger wrote to all tests
* moved utility functions into Utils and ReadUtils
* cleaned up unused classes",2011-12-15 18:09:46,Mauricio Carneiro,"['public/java/test/org/broadinstitute/sting/utils/clipreads/ClippingOpUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/clipreads/ReadClipperUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,677bea0abdb1010da084818a0b8903f4e6ea1dbf,1ba03a5e7234f6e5a656801aaf31b7a2fa931500,https://github.com/broadgsa/gatk/commit/677bea0abdb1010da084818a0b8903f4e6ea1dbf,"Right aligning GATKReport numeric columns and updated MD5s in tests.
PreQC parses file with spaces in sample names by using tabs only.
PostQC allows passing the file names for the evals so that flanks can be evaled.
BaseTest's network temp dir now adds the user name to the path so files aren't created in the root.
HybridSelectionPipeline:
- Updated to latest versions of reference data.
- Refactored Picard parsing code replacing YAML.",2011-12-06 04:04:33,Khalid Shakir,"['public/java/test/org/broadinstitute/sting/BaseTest.java', 'public/java/test/org/broadinstitute/sting/gatk/report/GATKReportUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/diffengine/DiffObjectsIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/varianteval/VariantEvalIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/variantutils/VCFStreamingIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/pipeline/PipelineUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,b7b57ef39a313ca2c743a96f92d5951b8e2b390a,73119c8e3c279ea4401ba4ea379c24161c2d2e60,https://github.com/broadgsa/gatk/commit/b7b57ef39a313ca2c743a96f92d5951b8e2b390a,"Updating MD5 to reflect canonical ordering of calculation

-- We should no longer have md5s changing because of hashmaps changing their sort order on us
-- Added GenotypeLikelihoodsUnitTests
-- Refactored ExactAFCaclculation to put the PL -> QUAL calculation in the GenotypeLikelihoods class to avoid the code copy.",2011-11-19 20:57:33,Mark DePristo,"['public/java/test/org/broadinstitute/sting/gatk/walkers/genotyper/GenotypePriorsUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/genotyper/UnifiedGenotyperIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/utils/variantcontext/GenotypeLikelihoodsUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,fac9932938f1275015aa0b93a82fb9bd52dd391d,89a581a66f2c6ae1437301ffa6ab7243ebc5ca32,https://github.com/broadgsa/gatk/commit/fac9932938f1275015aa0b93a82fb9bd52dd391d,"Embedding gsalib source and queueJobReport R scripts in the dist and package jars.
Moved gsalib and queueJobReport.R to embeddable namespaced locations.
Updated packager dependencies/dir to add an @includes which filters the embedded fileset.
RScriptExecutor can now JIT compiles the gsalib.
RScriptExecutor uses ProcessController and sends the Rscript output to java's stdout when run under -l DEBUG.
Refactored ProcessController and IOUtils from Queue to Sting Utils.
Added more unit tests to ProcessController along with a utility class to hard stop OutputStreams at a specified byte count.
Replaced uses of some IOUtils with Apache Commons IO.
ShellJobRunner refactored to use direct ProcessController and now kills jobs on shutdown.
Better QGraph responsiveness on shutdown by using Object.wait() instead of Thread.sleep().",2011-10-24 19:49:02,Khalid Shakir,"['public/java/test/org/broadinstitute/sting/utils/R/RScriptLibraryUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/io/IOUtilsUnitTest.java', 'public/java/test/org/broadinstitute/sting/utils/runtime/ProcessControllerUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,4f09453470d3f86cd985eb31215623ae8d62a1d8,b76dbc72f0d856866689e8b150b0acc39b4ece59,https://github.com/broadgsa/gatk/commit/4f09453470d3f86cd985eb31215623ae8d62a1d8,"Refactored reduced read utilities

-- UnitTests for key functions on reduced reads
-- PileupElement calls static functions in ReadUtils
-- Simple routine that takes a reduced read and fills in its quals with its reduced qual",2011-09-26 16:58:31,Mark DePristo,['public/java/test/org/broadinstitute/sting/utils/ReadUtilsUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,f3049fba63899bfb35f245198b829472f480c9fa,90947ab3598023e984e3c2b674c93713fbdfe013,https://github.com/broadgsa/gatk/commit/f3049fba63899bfb35f245198b829472f480c9fa,"refdata directory cleanup

Removing unused files RODRecordIterator, ReferenceOrderedData, QueryableTrack, RMDTrackCreationException, GATKFeatureIterator, ReferenceOrderedDataUnitTest
Refactored dbSNP and refseq utilities to be closer to the other files implementing these features",2011-07-25 17:21:52,Mark DePristo,"['public/java/test/org/broadinstitute/sting/gatk/datasources/providers/ReferenceOrderedViewUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/datasources/rmd/ReferenceOrderedDataPoolUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/refdata/ReferenceOrderedDataUnitTest.java', 'public/java/test/org/broadinstitute/sting/gatk/refdata/tracks/RMDTrackBuilderUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,d6e2e89f9994f45182071962f3d140a0569dc865,6f26c07b8506756cc62f566099ca08adde51b101,https://github.com/broadgsa/gatk/commit/d6e2e89f9994f45182071962f3d140a0569dc865,"Walker test system refactoring.  All MD5DB related functions are now in MD5DB.java.
System has the concept of a local and a global MD5 db.  The local one is like it operated previously.  The global one lives in /humgen/gsa-hpprojects/GATK/data/integrationtests.  If the system can find this directory then MD5s will also be read / written to this location.  This means that gsabamboo will print differences as appropriate.  And all users will in effect have access to a complete history of MD5 file results.
A few minor code reshuffles changed VariantRecalibration and VCFHeader test files.",2011-07-18 14:46:01,Mark DePristo,"['public/java/test/org/broadinstitute/sting/BaseTest.java', 'public/java/test/org/broadinstitute/sting/WalkerTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/variantrecalibration/VariantRecalibrationWalkersIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/gatk/walkers/variantutils/CombineVariantsIntegrationTest.java', 'public/java/test/org/broadinstitute/sting/utils/genotype/vcf/VCFHeaderUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,e16bc2cbd9ff13bdb96e90c2d083908099aa82e8,0095aa2627bbfca377925de71df9dbf16fa6dd6b,https://github.com/broadgsa/gatk/commit/e16bc2cbd9ff13bdb96e90c2d083908099aa82e8,"Contracts for Java now write for GenomeLoc and GenomeLocParser.  The semantics of GenomeLoc are now much clearer.  It is no longer allowed to create invalid GenomeLocs -- you can only create them with well formed start, end, and contigs, with respect to the mater dictionary.  Where one previously created an invalid GenomeLoc, and asked is this valid, you must now provide the raw arguments to helper functions to assess this.  Providing bad arguments to GenomeLoc generates UserExceptions now. Added utilty functions contigIsInDictionary and indexIsInDictionary to help with this.

Refactored several Interval utilties from GenomeLocParser to IntervalUtils, as one might expect they go

Removed GenomeLoc.clone() method, as this was not correctly implemented, and actually unnecessary, as GenomeLocs are immutable.  Several iterator classes have changed to remove their use of clone()

Removed misc. unnecessary imports

Disabled, temporarily, the validating pileup integration test, as it uses reads mapped to an different reference sequence for ecoli, and this now does not satisfy the contracts for GenomeLoc


git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@5827 348d0f76-0448-11de-a6fe-93d51630548a",2011-05-20 15:43:27,depristo,"['java/test/org/broadinstitute/sting/gatk/walkers/qc/ValidatingPileupIntegrationTest.java', 'java/test/org/broadinstitute/sting/utils/GenomeLocParserUnitTest.java', 'java/test/org/broadinstitute/sting/utils/interval/IntervalUtilsUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,de4eaa455e234627cae96930eb08cb83ca5f1c13,b4b52cc0fe9b147dcffe80e826c9de81f643ec78,https://github.com/broadgsa/gatk/commit/de4eaa455e234627cae96930eb08cb83ca5f1c13,"Squashing some bugs. Current implementation of AlignmentContextUtils.splitContextBySample() eliminates all sample meta data. Per Mark's request I'm working around this rather than fixing it -- the extender now maintains a mapping from sample id to sample object. Addition of a proportion test for large-insert-size reads, and slight refactoring of code to deal with bad window initialization of subclasses (e.g. chris forgot that constructors aren't inherited)



git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@5608 348d0f76-0448-11de-a6fe-93d51630548a",2011-04-09 21:07:52,chartl,['java/src/org/broadinstitute/sting/oneoffprojects/walkers/association/modules/casecontrol/ValueTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,53db7b8faadb8987ef8d1e0056850208515b3821,74755cfd1c8d061c230acc086e41c1d262cb1183,https://github.com/broadgsa/gatk/commit/53db7b8faadb8987ef8d1e0056850208515b3821,"Did some refactoring which broke some unit tests, and then failed to run
the unit tests.  Definitely not my best effort...


git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@5599 348d0f76-0448-11de-a6fe-93d51630548a",2011-04-08 03:31:52,hanna,['java/test/net/sf/samtools/GATKBAMFileSpanUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,79b5fa6cc5b7b475cd8dda850f1be86f3cd846cd,77ca4eef312356cad599b175172141be9ea24072,https://github.com/broadgsa/gatk/commit/79b5fa6cc5b7b475cd8dda850f1be86f3cd846cd,"Structural refactoring in advance of dichotomization statistics; generalization of statistical test infrastructure.



git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@5579 348d0f76-0448-11de-a6fe-93d51630548a",2011-04-05 18:52:32,chartl,"['java/src/org/broadinstitute/sting/oneoffprojects/walkers/association/modules/casecontrol/ProportionTest.java', 'java/src/org/broadinstitute/sting/oneoffprojects/walkers/association/modules/casecontrol/ValueTest.java', 'java/src/org/broadinstitute/sting/oneoffprojects/walkers/association/statistics/StatisticalTest.java', 'java/test/org/broadinstitute/sting/oneoffprojects/walkers/RegionalAssociationUnitTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,d185c2961f032964445ff9b9e8cbed7174ec28f7,7598f5f6a719f652c027e995f597c180fca82c2f,https://github.com/broadgsa/gatk/commit/d185c2961f032964445ff9b9e8cbed7174ec28f7,"Added pipeline for calling FCP in batches called MultiFullCallingPipeline.
Bug smashes for the MCFP:
  Synchronized access to LSF library and modifications to the QGraph.
  If values are missing from the graph with -run make sure to exit with a non-zero.
  Refactored QGraph to pre-generate a unique Int for each QNode speeding up getHashCode/equals inside the graph.
  Added jobPriority and removed jobLimitSeconds from QFunction.
  All scatter gather is by default in a single sub directory queueScatterGather.
  Moved some FCPTest into BaseTest/PipelineTest for use by MFCPTest.
  Rev'ed the 1000G bams used for validation from v1 to v2 and added code to look for the bams before running other tests.


git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@5247 348d0f76-0448-11de-a6fe-93d51630548a",2011-02-15 18:26:14,kshakir,"['java/test/org/broadinstitute/sting/BaseTest.java', 'java/test/org/broadinstitute/sting/jna/lsf/v7_0_6/LibBatIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,1085bbf303765ff87332d66fd6f7214961fa3fcc,c4707631e2c216c5359dbffb2c5cf6d6d3bebbd7,https://github.com/broadgsa/gatk/commit/1085bbf303765ff87332d66fd6f7214961fa3fcc,"Fixed issue where all comp tracks were being treated as known tracks.  Fixed issue where multiple JEXL expressions were causing an exception because the underlying object did not implement the Comparable interface.  Fixed issue where variants being compared to the known track were not being checked for equality of variation type.  Fixed issue where functional annotations were not being iterated over properly.  Refactored a lot of helper methods into a separate VariantEvalUtils utility class.  Significantly expanded the test suite using a small VCF with SNPs, indels, and non-variant loci which makes it much easier to see what the proper answer should be, and included the appropriate grep and awk commands in the comments to confirm the values.

git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@5204 348d0f76-0448-11de-a6fe-93d51630548a",2011-02-06 19:19:20,kiran,['java/test/org/broadinstitute/sting/gatk/walkers/varianteval/VariantEvalIntegrationTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,8831ec3dce0f937b89660b7e303fd5e7c35e8a3f,3022f4dfa0a9e54547c0e17058f67f4a6f156d0f,https://github.com/broadgsa/gatk/commit/8831ec3dce0f937b89660b7e303fd5e7c35e8a3f,"Some refactoring and cleanup around the area of  my sleep-deprived integration 
test typo, which Khalid already fixed for me.  Sorry, Khalid!


git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@5035 348d0f76-0448-11de-a6fe-93d51630548a",2011-01-20 15:03:14,hanna,['java/test/org/broadinstitute/sting/gatk/walkers/variantutils/VCFStreamingIntegrationTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,16e1bbd380de4b82859016d311c31d10c4b686a5,1b6bec8e6be7e7bb0b33fc41f2dda8a541300b04,https://github.com/broadgsa/gatk/commit/16e1bbd380de4b82859016d311c31d10c4b686a5,"Hidden command line option to control BAQ gap open penalty for testing by me and eric.  ValidateBAQWalker has misc. useful improvements.  PrintReads now adds BAQ tags on output, if requested.

BAQ has generally useful improvements.  Refactor code to make it easier for BAQUnitTest to run.  minBaseQuality enforced on output, as well as input now.  Added BAQUnitTest that checks that the BAQ calculation is performing as expected.  Still needs to be expanded significantly.

git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@4804 348d0f76-0448-11de-a6fe-93d51630548a",2010-12-08 01:01:39,depristo,['java/test/org/broadinstitute/sting/utils/baq/BAQUnitTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,b0856481418781150c5cd57c61cbd56f5e200e03,8211cee0b2fdb189270d10e24d28213c82f8564a,https://github.com/broadgsa/gatk/commit/b0856481418781150c5cd57c61cbd56f5e200e03,"Parallelized VariantEval.  Refactored output to support parallel output style.  Minor improvements to testing framework to enable easy executeTestParallel to run -nt 1 and -nt 4 by default.

git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@4574 348d0f76-0448-11de-a6fe-93d51630548a",2010-10-26 20:21:38,depristo,"['java/test/org/broadinstitute/sting/WalkerTest.java', 'java/test/org/broadinstitute/sting/gatk/walkers/varianteval/VariantEvalIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,f74298086446fb4a25456fe7e5f1d98b5433aa1d,70b07206a243d54d7cf13152287256b607ee2b6f,https://github.com/broadgsa/gatk/commit/f74298086446fb4a25456fe7e5f1d98b5433aa1d,"1. Refactoring of GenoypeWriters so that parallelization now works again with VCF4.0.  We now have just a single reference to the old VCF classes, and that one will be purged soon.
2. Moved Jared's VCFTool code into archive so that everything would compile.
3. Added the vcf reference base (needed for indels) as an attribute to the VariantContext from the reader.
4. TribbleRMDTrackBuilderUnitTest was complaining that a validation file didn'r exist, so I commented it out.



git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@3835 348d0f76-0448-11de-a6fe-93d51630548a",2010-07-20 06:16:45,ebanks,"['java/test/org/broadinstitute/sting/gatk/contexts/variantcontext/VariantContextIntegrationTest.java', 'java/test/org/broadinstitute/sting/gatk/refdata/VariantContextAdaptorsUnitTest.java', 'java/test/org/broadinstitute/sting/gatk/refdata/tracks/builders/TribbleRMDTrackBuilderUnitTest.java', 'java/test/org/broadinstitute/sting/gatk/walkers/genotyper/UnifiedGenotyperIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,693672a46132235590ccf482a5c418b03dc7ba21,379584f1bfdfbe205ae3f349f2e991370f548c74,https://github.com/broadgsa/gatk/commit/693672a46132235590ccf482a5c418b03dc7ba21,"Refactoring the VCF writer code; now no longer uses VCFRecord or any of its related classes, instead writing directly to the writer.  Integration tests pass, but some are actually broken and will be fixed this week.

git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@3822 348d0f76-0448-11de-a6fe-93d51630548a",2010-07-18 13:19:56,ebanks,['java/test/org/broadinstitute/sting/gatk/walkers/sequenom/SequenomValidationConverterIntegrationTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,1e06d2bf68de55807154e2053471ca8bbc1333d5,f44d8b150f0e45fb7da570b983be4b6042770687,https://github.com/broadgsa/gatk/commit/1e06d2bf68de55807154e2053471ca8bbc1333d5,"Initial HLA Caller integration tests.  Kind of painful, but will improve with code refactoring.
This baby is now officially ours.


git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@3593 348d0f76-0448-11de-a6fe-93d51630548a",2010-06-18 20:35:27,ebanks,['java/test/org/broadinstitute/sting/playground/gatk/walkers/HLAcaller/HLACallerIntegrationTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,9b2fcc4711312b3bdde70e4596c59ec8a7a92aa1,84563b37e565ffff86cae5dc074d4036d452fe16,https://github.com/broadgsa/gatk/commit/9b2fcc4711312b3bdde70e4596c59ec8a7a92aa1,"Refactoring of the annotation system:
1. VA is now a ROD walker so it no longer requires reads (needs a little more testing)
2. Annotations can now represent multiple INFO fields (i.e. sets of key/value pairs)
3. The chromosome count annotations have been pulled out of UG and the VCF writer code and into VA where they belong.  Fixed the headers too.



git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@3513 348d0f76-0448-11de-a6fe-93d51630548a",2010-06-09 17:05:51,ebanks,"['java/src/org/broadinstitute/sting/gatk/walkers/annotator/BaseQualityRankSumTest.java', 'java/src/org/broadinstitute/sting/gatk/walkers/annotator/MappingQualityRankSumTest.java', 'java/src/org/broadinstitute/sting/gatk/walkers/annotator/RankSumTest.java', 'java/test/org/broadinstitute/sting/gatk/walkers/annotator/VariantAnnotatorIntegrationTest.java', 'java/test/org/broadinstitute/sting/gatk/walkers/genotyper/UnifiedGenotyperIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,c0528cd88e18851c44dbc693bbf49f066491d5a7,b6f8e33f4c754b5638ecbc74447fa8bd98146b17,https://github.com/broadgsa/gatk/commit/c0528cd88e18851c44dbc693bbf49f066491d5a7,"Updated the CallsetConcordance classes to use new VCF Variation code... and uncovered a whole bunch of VCF bugs in the process.  I'm not convinced that I got them all, so I'll unit test like crazy when the refactoring is done.



git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@2272 348d0f76-0448-11de-a6fe-93d51630548a",2009-12-06 11:43:40,ebanks,"['java/test/org/broadinstitute/sting/gatk/walkers/annotator/SecondBaseSkewIntegrationTest.java', 'java/test/org/broadinstitute/sting/gatk/walkers/concordance/CallsetConcordanceIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,08f2214f1463c4efbc2be3439d7ad5f95cef9445,b817db09623580f22a49a4231c7f3def23814a27,https://github.com/broadgsa/gatk/commit/08f2214f1463c4efbc2be3439d7ad5f95cef9445,"Stage 1 of massive Variation/Genotype refactoring.

This stage consists only of the code originating in the Genotyper and flowing through to the genotype writers.  I haven't finished refactoring the writers and haven't even touched the readers at all.

The major changes here are that
1. Variations which are BackedByGenotypes are now correctly associated with those Genotypes
2. Genotypes which have an associated Variation can actually be associated with it (and then return it when toVariation() is called).

The only integration tests which need to be updated are MSG-related (because the refactoring now made it easy for me to prevent MSG from emitting tri-allelic sites).



git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@2269 348d0f76-0448-11de-a6fe-93d51630548a",2009-12-06 03:12:41,ebanks,"['java/src/org/broadinstitute/sting/gatk/walkers/annotator/RankSumTest.java', 'java/test/org/broadinstitute/sting/gatk/walkers/genotyper/UnifiedGenotyperIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,70059a0fc95f5fa707d0ac76c319bf562ac9511f,7f947f6b60fe3a3666fc6f9ab29940cf8c20ee55,https://github.com/broadgsa/gatk/commit/70059a0fc95f5fa707d0ac76c319bf562ac9511f,"Refactored joint estimation model to allow subclasses to overload PofD calculation over all frequencies.  Pooled model now takes only 20% of time that it used to.
Added integration test for pooled model and updated other joint estimation tests to be more comprehensive now that they are faster.



git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@2123 348d0f76-0448-11de-a6fe-93d51630548a",2009-11-23 20:03:38,ebanks,['java/test/org/broadinstitute/sting/gatk/walkers/genotyper/UnifiedGenotyperIntegrationTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,22aaf8c5e033290d74548e0a42df78f6985a2d1a,a95302fe9823aa443d650df7d89d72bbb0cc5940,https://github.com/broadgsa/gatk/commit/22aaf8c5e033290d74548e0a42df78f6985a2d1a,"Added the old recalibrator integration tests to the refactored recalibrator sitting in playground.

git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@2096 348d0f76-0448-11de-a6fe-93d51630548a",2009-11-19 22:43:28,rpoplin,"['java/test/org/broadinstitute/sting/gatk/walkers/recalibration/CovariateCounterTest.java', 'java/test/org/broadinstitute/sting/gatk/walkers/recalibration/RecalDataTest.java', 'java/test/org/broadinstitute/sting/playground/gatk/walkers/Recalibration/RefactoredRecalibrationWalkersIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,a048f5cdf118e260096def612f8fe3fa4ef35a18,43bd4c8e8fdac593ff4a866e47987e017d6b74e6,https://github.com/broadgsa/gatk/commit/a048f5cdf118e260096def612f8fe3fa4ef35a18,"-Refactored JointEstimation code so that pooled calling will work
-Use phred-scale for fisher strand test
-Use only 2N allele frequency estimation points



git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@2059 348d0f76-0448-11de-a6fe-93d51630548a",2009-11-17 20:21:15,ebanks,"['java/test/org/broadinstitute/sting/gatk/walkers/annotator/VariantAnnotatorIntegrationTest.java', 'java/test/org/broadinstitute/sting/gatk/walkers/genotyper/UnifiedGenotyperIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,45583755754eeffab4cede53e0f63e6512314c17,ce5034dc5d2e1094a423404f58b19294b76e3962,https://github.com/broadgsa/gatk/commit/45583755754eeffab4cede53e0f63e6512314c17,"Stage 1 of the VariantFiltration refactoring is now complete.  There now exists a parallel tool called VariantAnnotator which simply takes variant calls and annotates them with the same type of data that we used to use for filtering (e.g. DoC, allele balance).  The output is a VCF with the INFO field appropriately annotated.

VariantAnnotator can be called as a standalone walker or by another walker, as it is by the UnifiedGenotyper.  UG now no longer computes any of this meta data - it relegates the task completely to the annotator (assuming the output format accepts it).

This is a fairly all-encompassing check in.  It involves changes to all of the UG code, bug fixes to much of the VCF code as things popped up, and other changes throughout.  All integration tests pass and I've tediously confirmed that the annotation values are correct, but this framework could use some more rigorous testing.

Stage 2 of the process will happen later this week.



git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@2053 348d0f76-0448-11de-a6fe-93d51630548a",2009-11-16 02:41:20,ebanks,"['java/test/org/broadinstitute/sting/gatk/refdata/RodVCFTest.java', 'java/test/org/broadinstitute/sting/gatk/walkers/annotator/VariantAnnotatorIntegrationTest.java', 'java/test/org/broadinstitute/sting/gatk/walkers/concordance/CallsetConcordanceIntegrationTest.java', 'java/test/org/broadinstitute/sting/gatk/walkers/filters/VariantFiltrationIntegrationTest.java', 'java/test/org/broadinstitute/sting/gatk/walkers/genotyper/UnifiedGenotyperIntegrationTest.java']"
broadgsa/gatk,https://github.com/broadgsa/gatk,3b1fabeff070fa9289c85401824e285aae2d2ea6,4be6bb8e92b5eec0ab95a5cd808579e92c811c57,https://github.com/broadgsa/gatk/commit/3b1fabeff070fa9289c85401824e285aae2d2ea6,"Major code refactoring:

@ Pooled utils & power
   - Removed two of the power walkers leaving only PowerBelowFrequency, added some additional
     flags on PowerBelowFrequency to give it some of the behavior that PowerAndCoverage had
   - Removed a number of PoolUtils variables and methods that were used in those walkers or simply
     not used
   - Removed AnalyzePowerWalker (un-necessary)
   - Changed the location of Quad/Squad/ReadOffsetQuad into poolseq

@NQS
   - Deleted all walkers but the minimum NQS walker, refactored not to use LocalMapType

@ BaseTransitionTable
   - Added a slew of new integration tests for different flaggable and integral parameters
   - (Scala) just a System.out that was added and commented out (no actual code change)
   - (Java) changed a < to <= and a boolean formula


Chris



git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@1887 348d0f76-0448-11de-a6fe-93d51630548a",2009-10-20 14:58:04,chartl,['java/test/org/broadinstitute/sting/playground/gatk/walkers/BaseTransitionTableCalculatorJavaIntegrationTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,9f5f6f9bc75f9533c596398fd0fe731ca71b0159,df88c4d6b046aa7d62f776df10cfcbd0f200632c,https://github.com/broadgsa/gatk/commit/9f5f6f9bc75f9533c596398fd0fe731ca71b0159,"N-way parallelism.  Works for small test cases.  Untested for large test cases.

-Needs more comprehensive unit testing.
-Needs some basic refactoring.
-Needs rethink of interface boundaries.
-Needs to play more nicely in the /tmp sandbox.


git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@583 348d0f76-0448-11de-a6fe-93d51630548a",2009-05-01 19:34:09,hanna,['java/test/org/broadinstitute/sting/gatk/OutputTrackerTest.java']
broadgsa/gatk,https://github.com/broadgsa/gatk,ce72932a454fec661d12c410ed377adacc680933,49fd951d8c0b607e84af3b5cbb242e7527d5a7f5,https://github.com/broadgsa/gatk/commit/ce72932a454fec661d12c410ed377adacc680933,"* refactored GenomeLoc to use contigIndex internally for performance and fixed several calling classes
* added basic unit test for GenomeLoc
* fixed bug when parsing genome locations like chr1:5000 the start position was being left as maxint rather than being set to the same as the stop position.

git-svn-id: file:///humgen/gsa-scr1/gsa-engineering/svn_contents/trunk@365 348d0f76-0448-11de-a6fe-93d51630548a",2009-04-12 02:25:17,kcibul,['java/test/org/broadinstitute/sting/utils/GenomeLocTest.java']
usethesource/capsule,https://github.com/usethesource/capsule,b41346b6c3d64a5200f0316ffc3655a8aba6d2c9,ffd95a31f11dad26e695d8d9d04941140c94ad5a,https://github.com/usethesource/capsule/commit/b41346b6c3d64a5200f0316ffc3655a8aba6d2c9,Refactor static test configuration and remove unused `Class<?> type` arguments,2021-06-02 16:21:29,Michael Steindorfer,['src/test/java/io/usethesource/capsule/MapEntryPropertiesTest.java']
usethesource/capsule,https://github.com/usethesource/capsule,20d4ca9bd0ae09da748a8344c93c1330ce921dd1,12a35c8a96c93612e74596c893fb6c90bde9810a,https://github.com/usethesource/capsule/commit/20d4ca9bd0ae09da748a8344c93c1330ce921dd1,"Squashed commit of the following:

commit 6803a6964a021622e49ba9016572f13fa5d5acae
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Sep 4 16:17:18 2017 +0200

    Optimize imports.

commit f169bd50254b71a09b9142d94b71d67725af8801
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Sep 4 15:12:43 2017 +0200

    Moving  definition to .

commit d10d4bad5d5d9f0640295396e6a52b40f408453a
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Sep 4 14:59:13 2017 +0200

    Inlining default methods.

commit b84ba358136e45f2667fd732a5cebafa8a1bca93
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Sep 4 14:55:55 2017 +0200

    Starting to extract common node interfaces + cleanup.

commit b0c74fd2be0212cfa517d8738ef66e2b821b1806
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Sep 4 13:13:12 2017 +0200

    Focusing tests on core classes.

commit 102cfd7e6a9ea9d48982f651d1608a4ccbb449a6
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Sep 4 13:07:34 2017 +0200

    Cleanup (moving methods).

commit 17a0440316376facd380531d53319aa7ba3e4e68
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Sep 4 13:05:25 2017 +0200

    Removing experiment that tries obsolete hash-collision nodes.

commit 2971de5bbf812841cd2b7234771f2479cc039ddb
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Sep 4 10:39:30 2017 +0200

    Moving functional interfaces.

commit cbac26db94e989ae6f753a170ee567e52123fcc3
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Sun Sep 3 22:16:52 2017 +0200

    Initial support for deep equivalence checks on hash-sets.

commit 0b221ed08d72abd9cf70c8dfc516192e4d4b6677
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Aug 28 15:55:20 2017 +0200

    Lifting EMPTY_NODE constant and making access modifiers more liberal for experiments.

commit f46dc56a336605d78f95f4ec94206b606f185c0a
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Fri Aug 25 09:46:38 2017 +0200

    Updating license header.

commit 6277b6249e1f7a0298766ab247061854ebd7a395
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Wed Aug 16 10:39:22 2017 +0200

    Porting simplified union to other prototype.

commit 2e1f1652ce8a33e45f376ac5e59d7e884a1dbf80
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Wed Aug 16 10:09:24 2017 +0200

    Adding method for feature parity.

commit ba6e3a82737910921a10da6ff2e9035d523cdb56
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Wed Aug 16 09:53:33 2017 +0200

    Including bitMap() + simplifying union.

commit 35825405efbf0d5daa69ef1528ac177821c62954
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Wed Aug 16 09:37:02 2017 +0200

    Minor.

commit 6d2edcd1390f734f6275c3189f8023024d66e15b
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Wed Aug 16 09:35:57 2017 +0200

    Using comparator for equality.

commit efee48662fca67428117b17856c7c08a03ad5a24
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Wed Aug 16 08:28:42 2017 +0200

    Using merge API that accepts payload tuple.

commit 9ad1ee82d79e29af4a9030c9d77e36aab8f714e8
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Aug 15 22:09:26 2017 +0200

    Using getPayload instead of getKey(Hash) in union.

commit e43d51385a4b01be817af770d66e9d4067d0dc21
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Aug 15 21:50:19 2017 +0200

    Introducing getPayload() to SetNode.

commit f80bc96fe9105477f69fb9644d20a22625b3fb2f
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Aug 15 21:23:52 2017 +0200

    Refactoring union, moving ImmutablePayloadTuple, extending Prototype.

commit e018f5857d2402ff54b7a648080e29d7cae44c69
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Aug 15 19:07:59 2017 +0200

    Simplify code in order to make make operations symmetric.

commit 344f485abd202ed717d25d31ad0268be030e85c8
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Aug 15 16:59:04 2017 +0200

    Simplification of union code (WIP).

commit aec64f4433e1548cd8abf3591c38e6cd2eb69d3d
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Aug 15 16:13:46 2017 +0200

    Enabling structural union.

commit 9ba04a7ec23437ec1cb75d41e8f4de5ad514f980
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Aug 15 14:59:36 2017 +0200

    Preparing AXIOM for structural set algebra.

commit 4591ed959c45b5f82f59a992a6d70eb39547f17f
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Aug 14 14:09:41 2017 +0200

    Removing qualification for Capsule Set.

commit 74a19f2ddbb0c736c980472f87d4aaa739e1ccf1
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Aug 14 14:07:29 2017 +0200

    Fully qualifying java.util.Set.

commit 62acfce96af29ef55abef3cdd893b6fbe38fcd53
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Aug 14 13:51:14 2017 +0200

    Renaming data type + internal classes for prototyping.

commit 7b6176400de89fb9f38c63d0135291de90336a62
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Aug 14 13:34:34 2017 +0200

    Copying MEMCHAMP set for conversion towards AXIOM design.

commit d2d6e0d55b8c0cdd51f43c2b88be155fe279f6ca
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Aug 14 13:33:47 2017 +0200

    Small fixes towards new design.

commit 7485d7f819c89778439c30e9ba5715d0576613c2
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Sat Jul 29 05:57:55 2017 +0200

    Towards a set implementation that does not require hash-collision nodes.

commit 2586ff855005c59376be2b8aa4050c9762cdb7e1
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Jul 4 19:48:00 2017 +0200

    Re-enabling structural set ops.

commit 82b333159b4069e49118722cdc9825ac9a86bbac
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Jul 4 16:14:57 2017 +0200

    Cleanup.

commit 575b729c49b6b907be2a7f7d5a40c2bdced6c845
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Jul 4 16:12:56 2017 +0200

    Towards a payload tuple representation.

commit b0ca2fa67d1a0c1519b474e882514626c9b91604
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Jul 4 14:09:20 2017 +0200

    Removing stuff.

commit bdfc573b8f66f33f9947d974b722b5f5547fee4d
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Jul 4 14:00:12 2017 +0200

    Merging inner classes of set implementation.

commit 1f04f5d117674233587098b181a7c3b88ceaa4a7
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Jul 4 13:30:51 2017 +0200

    Switching hash collision support.

commit 9ae22ee35b382f34b33741c1bd91e1ba2451ddaf
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Jul 4 13:21:50 2017 +0200

    Qualifying names + removing hash collision support.

commit 110f6fa90f1178a3a851ccf08b6b0619b96b914d
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Jul 4 12:50:29 2017 +0200

    Copying set implementation for experiments.

commit 8804d9253e1b218c6a9d291afba0a70e2bd37227
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Jul 4 12:50:08 2017 +0200

    Adding more asserts + bugfix and incremental counting in union.

commit 4a428488d253e364a1c503460860beb4a8e626d7
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Jul 3 13:10:24 2017 +0200

    Clean up class names.

commit e24e51f99f694a662d53225d90728637e81409a0
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Jul 3 13:08:02 2017 +0200

    Ignoring test due to missing generator.

commit d7ac1afdb0f14c9447b9f3eb39d96571046dec2c
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Jul 3 13:07:36 2017 +0200

    Extending reference equality tests.

commit 6aa25460f04c8104d6955904f49378910e3abc8c
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Mon Jul 3 13:05:34 2017 +0200

    Fixing wrong recursive call.

commit f52f77a8a29a88038e74868c43e4a14703507f19
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Sat Jul 1 18:54:57 2017 +0200

    Adding default method implementations + small changes.

commit 92b394adab866252013609e919a443eba4f719f1
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Sat Jul 1 18:44:12 2017 +0200

    Adding structural union/intersect/substract for multi-map hash-collision node.

commit 115fe782bafa143b6440413710de85939f2a4b90
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Sat Jul 1 12:38:19 2017 +0200

    Implementing default method + fixing updatedMultiple in multi-map.

commit 7a4762963b4b6f6d7d5e4a8c22df55ffb47740f9
Merge: fdd3a31 34a21ec
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Sat Jul 1 01:42:51 2017 +0200

    Merge branch 'master' into structural-set-algebra

commit fdd3a31a3458363d7110f3cc1ae2f9237d02f01c
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Sat Jul 1 00:41:21 2017 +0200

    Bumping SNAPSHOT version.

commit 53a82720065aeeae878523704f2ae2e7fa05463a
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Fri Jun 30 13:21:37 2017 +0200

    Range of fixes and optimizations.

commit 8f4ed341b2cf88e8a5e13f6033b8915bb7846ddd
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Thu Jun 29 12:16:22 2017 +0200

    Compilation fix.

commit f066432b3455e0783e43142234ddf6d8ef7f617f
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Thu Jun 29 12:14:57 2017 +0200

    Adopting HHAMT multi-map to new base class.

commit 44959a044e014d355814be4e7ec737330045dbdf
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Thu Jun 29 12:13:36 2017 +0200

    Set of changes w.r.t. structural intersect experiment.

commit c72542075039a070ec88932d8241af158b1aa1ea
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Thu Jun 29 11:36:41 2017 +0200

    Adding particular entry point for PersistentTrieSet tests.

commit 162a5ade903138ab9dca40b4f2c191f5ce434913
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Jun 27 11:49:23 2017 +0200

    Cleanup.

commit 04631796704a8cc8e7c9e9fd40b872b02e68724a
Merge: dbeecfe 5c5b23b
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Wed Jun 21 16:51:35 2017 +0200

    Merge branch 'master' into structural-set-algebra

commit dbeecfee5e250e891c46497894d1ff1b683ac6a8
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Sun Apr 16 16:00:22 2017 +0200

    Experimentally adding join.

commit 144be1071058aa7c7fe457888bdbbcb3beeed815
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Sun Apr 16 15:59:38 2017 +0200

    Making helpers available.

commit 2e98e2c1a04cbd2ee773a4de64ec301485f306b1
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Wed Apr 5 08:09:24 2017 +0200

    Clean-up SetNode prototype.

commit 85c5b868151b814d64e699bdfffee4e0854a6808
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Wed Apr 5 08:02:00 2017 +0200

    Updating subtract.

commit 8b3ffbc5150386f17fa0a32c94c0e170d4c37d3d
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Apr 4 16:40:09 2017 +0200

    Started reworking intersection.

commit 6743ca948dd1815dd87289cef32b6eecfd36ad68
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Tue Apr 4 14:56:34 2017 +0200

    Experimentally add cachedSize and cachedHashCode properties to nodes to explore different meta-data update strategies.

commit f2947758b539f38fa625c5deab4d65800b299466
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Fri Mar 31 17:30:02 2017 +0200

    Simplifying structural operations.

commit 96acb125c7b112a5bde7b706863d451b9553115c
Author: Michael Steindorfer <michael@steindorfer.name>
Date:   Thu Mar 30 13:56:36 2017 +0200

    First draft of structural operations.

    Still needs design reconsiderations and optimizations.",2017-09-06 12:42:15,Michael Steindorfer,"['capsule-veritas/src/test/java/io/usethesource/capsule/RuntimeCodeGenerationTest.java', 'capsule-veritas/src/test/java/io/usethesource/capsule/SetPropertiesOfPersistentTrieSetTest.java', 'capsule-veritas/src/test/java/io/usethesource/capsule/TernaryRelationTest.java']"
kite-sdk/kite,https://github.com/kite-sdk/kite,9bdeecf7139def9521366491fcc5462c0cc60afb,1ff586b5fab60f0f0fb631adcc28c184aa34bd3e,https://github.com/kite-sdk/kite/commit/9bdeecf7139def9521366491fcc5462c0cc60afb,refactor tests,2013-06-28 06:27:20,Wolfgang Hoschek,"['cdk-morphlines/cdk-morphlines-avro/src/test/java/com/cloudera/cdk/morphline/avro/AvroMorphlineTest.java', 'cdk-morphlines/cdk-morphlines-core/src/test/java/com/cloudera/cdk/morphline/api/MorphlineTest.java']"
smallrye/smallrye-mutiny,https://github.com/smallrye/smallrye-mutiny,d2045da42a4d79a4f5f349c9652ecd423c808a08,ab1acf892267d41229739f6b3e37dc3959b3dbe6,https://github.com/smallrye/smallrye-mutiny/commit/d2045da42a4d79a4f5f349c9652ecd423c808a08,Refactor testing utilities to add awaitNextItems and awaitItems,2021-03-06 17:56:28,Clement Escoffier,"['implementation/src/test/java/io/smallrye/mutiny/helpers/test/AssertSubscriberTest.java', 'implementation/src/test/java/io/smallrye/mutiny/operators/MultiGroupTest.java']"
esig/dss,https://github.com/esig/dss,ccb02bbccac12606a707e049cd4f84ab32e7b0c5,fad4761f28e082ac2efb6c7304adb457e5cda089,https://github.com/esig/dss/commit/ccb02bbccac12606a707e049cd4f84ab32e7b0c5,DSS-2713 : refactor ASiC with CAdES merger + add unit tests,2022-03-24 13:31:40,Aleksandr Beliakov,"['dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/merge/ASiCEWithCAdESContainerMergerTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/merge/ASiCSWithCAdESContainerMergerTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/merge/asice/ASiCEWithCAdESLevelBContainerMergerDifferentFileContentTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/merge/asice/ASiCEWithCAdESLevelBContainerMergerDifferentMultipleFilesContentTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/merge/asice/ASiCEWithCAdESLevelLTAContainerMergerSingleDocumentTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/merge/asics/ASiCSWithCAdESLevelBContainerMergerDifferentFileContentTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/merge/asics/ASiCSWithCAdESLevelBContainerMergerDifferentMultipleDocumentsTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/merge/asics/ASiCSWithCAdESLevelBContainerMergerDifferentMultipleFilesContentTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/merge/ASiCEWithXAdESContainerMergerTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/merge/ASiCSWithXAdESContainerMergerTest.java']"
esig/dss,https://github.com/esig/dss,5f49d7a3c82c8196f52a07861b83f09b62d7c2b2,d2d1dffb056cc3f012c51125eeb9f3af6f6c2a6d,https://github.com/esig/dss/commit/5f49d7a3c82c8196f52a07861b83f09b62d7c2b2,DSS-2013: ASiC modules validation tests refactoring,2020-04-15 15:21:00,Aleksandr Beliakov,"['dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCECAdESDoubleLTAExtensionTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCECAdESMultipleArchiveTimestampsTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCeExtensionWithCAdESBToLTATest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCeExtensionWithCAdESBToLTTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCeExtensionWithCAdESBToTTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCeExtensionWithCAdESBToTWithFailTimestampTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCeExtensionWithCAdESLTAToLTATest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCeExtensionWithCAdESLTToLTAWithFailTimestampTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCeExtensionWithCAdESTToLTATest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCeExtensionWithCAdESTToLTSelfSignedTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCeExtensionWithCAdESTToTLevelTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/CrossedASiCContainerTypeExtensionTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asics/ASiCsExtensionWithCAdESBToLTATest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asics/ASiCsExtensionWithCAdESBToLTTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asics/ASiCsExtensionWithCAdESBToTTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asics/ASiCsExtensionWithCAdESBToTWithFailTimestampTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asics/ASiCsExtensionWithCAdESLTToLTAWithFailTimestampTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asics/ASiCsExtensionWithCAdESTToLTASelfSignedTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asics/ASiCsExtensionWithCAdESTToLTTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asics/ASiCsExtensionWithCAdESTToTTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asics/CrossedASiCContainerTypeExtensionTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asics/NullASiCContainerTypeExtensionTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESLevelBDoubleValidationTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESLevelBMultiArchivesTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESLevelBMultiFilesTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESLevelBSignFourTimeTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESLevelLTATest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESLevelLTDoubleValidationTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCEWithCAdESTimestampValidatorTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESLevelBMultiFilesTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESLevelBMultiFilesWithoutNameTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESLevelLTATest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/timestamp/asice/ASiCETimestampMultiFilesTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/timestamp/asics/ASiCSTimestampMultiFilesTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCEBrokenRefAndCorruptedManifestTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCEBrokenReferenceTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCEMalformedValidationTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCERemovedReferenceTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCETwoSignaturesInOneTimeTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCEWithCAdESLTACheckTimeStampIDTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCEWithCAdESTimestampOrderTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCEWithNewLineMimeTypeTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCSWithCAdESLTACheckTimeStampIDTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCSWithCAdESTimestampOrderTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/DSS1421Test.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/DSS1792Test.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/DSS1809Test.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/dss1421/DSS1421ArchiveTstNotCoverSigTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/dss1421/DSS1421BrokenTstTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/dss1421/DSS1421Test.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/ASiCEWithXAdESManifestParserTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asice/ASiCeExtensionWithXAdESBToLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asice/ASiCeExtensionWithXAdESBToLTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asice/ASiCeExtensionWithXAdESBToTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asice/ASiCeExtensionWithXAdESBToTWithFailTimestampTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asice/ASiCeExtensionWithXAdESLTToLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asice/ASiCeExtensionWithXAdESLTToLTAWithFailTimestampTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asice/ASiCeExtensionWithXAdESTToLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asice/ASiCeExtensionWithXAdESTToLTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asice/CrossedASiCContainerTypeExtensionTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asice/LibreOfficeExtensionWithXAdESBToTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asice/NullASiCContainerTypeExtensionTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asics/ASiCsExtensionWithXAdESBToLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asics/ASiCsExtensionWithXAdESBToLTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asics/ASiCsExtensionWithXAdESBToTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asics/ASiCsExtensionWithXAdESBToTWithFailTimestampTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asics/ASiCsExtensionWithXAdESLTToLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asics/ASiCsExtensionWithXAdESLTToLTAWithFailTimestampTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asics/ASiCsExtensionWithXAdESTToLTASelfSignedTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asics/ASiCsExtensionWithXAdESTToLTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asics/CrossedASiCContainerTypeExtensionTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/ASiCLevelBInclusiveCanonicalizationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESLevelBInclusiveCanonicalizationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESLevelLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESMultiFilesLevelBTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESMultiFilesLevelLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESMultiFilesLevelLTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESMultiFilesLevelLTWithKeyInfoTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESSignLTALevelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESLevelBInclusiveCanonicalizationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESLevelBMultiFilesWithoutNameTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESLevelLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESMultiFilesLevelBTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESSignLTALevelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentLevelBInclusiveCanonicalizationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentLevelLTASignatureTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentMultipleArchivesLevelBTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentMultipleArchivesLevelLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentMultipleArchivesLevelLTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentMultipleArchivesLevelTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentSignLTALevelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCENoMimetypeTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCEWith2SignaturesTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCEWithMalformedOCSPTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCEWithXAdESCorruptedTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCEWithXAdESMultiFilesCorruptedTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCEWithXAdESMultiFilesValidationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCEWithXAdESOneFileValidationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCEWithZipCommentTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCE_XAdESLTACheckTimeStampIDTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCSWithCXAdESOneFileValidationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCSWithXAdESCorruptedTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCSWithXAdESMultiFilesCorruptedTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCSWithXAdESMultiFilesValidationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCS_XAdESLTACheckTimeStampIDTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCWithModifiedCertValuesTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/EmptyOpenDocumentValidationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/GetOriginalTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/LibreOfficeODSValidationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/LibreOfficeValidationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/OpenDocumentODTValidationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/OpenDocumentValidationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/SignedPropertiesNotCheckedTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ZipBombingTest.java', 'dss-pades-openpdf/src/test/java/eu/europa/esig/dss/pades/extension/ITextPAdESExtensionSuiteTest.java', 'dss-pades-openpdf/src/test/java/eu/europa/esig/dss/pades/signature/ITextBuildKnownObjectsTest.java', 'dss-pades-openpdf/src/test/java/eu/europa/esig/dss/pades/signature/ITextExternalCMSPAdESSignatureTest.java', 'dss-pades-openpdf/src/test/java/eu/europa/esig/dss/pades/signature/ITextPAdESSignatureSuiteTest.java', 'dss-pades-openpdf/src/test/java/eu/europa/esig/dss/pades/validation/ITextPAdESValidationSuiteTest.java', 'dss-pades-openpdf/src/test/java/eu/europa/esig/dss/pades/validation/ITextPDFDocumentValidatorCheckTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/extension/PdfBoxPAdESExtensionSuiteTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/signature/PdfBoxBuildKnownObjectsTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/signature/PdfBoxExternalCMSPAdESSignatureTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/signature/PdfBoxPAdESSignatureSuiteTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/validation/PdfBoxPAdESValidationSuiteTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/validation/PdfBoxPDFDocumentValidatorCheckTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/AbstractBuildKnownObjectsTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/AbstractExternalCMSPAdESSignatureTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/AbstractPDFDocumentValidatorCheckTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESNoReferenceTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/dss1524/DSS1524NoAttachmentTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/dss1524/DSS1524WrongAttachmentTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/dss2011/XAdESDetachedWithTransformNoFileTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/xsw/XAdESEnvelopedFakeContentSameIdTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/xsw/XAdESEnvelopingFakeManifestTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/xsw/XAdESEnvelopingFakeObjectTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/xsw/XSWProtectionDefaultBehaviorTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/xsw/XSWProtectionDisableSecurityTest.java']"
esig/dss,https://github.com/esig/dss,d2d1dffb056cc3f012c51125eeb9f3af6f6c2a6d,80ccc7952fd817e4df5b5be7d2733248ee2bc892,https://github.com/esig/dss/commit/d2d1dffb056cc3f012c51125eeb9f3af6f6c2a6d,DSS-2013 : use common pattern for extension test names + PAdES test refactoring,2020-04-14 13:00:53,Aleksandr Beliakov,"['dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionBToLTATest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionBToLTTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionBToTTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionBToTWithCompositeTSATest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionBToTWithError500TimestampTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionBToTWithFailTimestampTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionLTToLTATest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionLTToLTAWithError500TimestampTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionLTToLTAWithFailTimestampTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionTToLTATest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionTToLTTest.java', 'dss-pades-openpdf/src/test/java/eu/europa/esig/dss/pades/extension/ITextPAdESExtensionSuiteTest.java', 'dss-pades-openpdf/src/test/java/eu/europa/esig/dss/pades/signature/ExternalCMSPAdESSignatureTest.java', 'dss-pades-openpdf/src/test/java/eu/europa/esig/dss/pades/signature/ITextPAdESSignatureTest.java', 'dss-pades-openpdf/src/test/java/eu/europa/esig/dss/pades/timestamp/PDFTimestampServiceTest.java', 'dss-pades-openpdf/src/test/java/eu/europa/esig/dss/pades/validation/DSS1823Test.java', 'dss-pades-openpdf/src/test/java/eu/europa/esig/dss/pades/validation/ITextPAdESValidationSuiteTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/extension/PdfBoxPAdESExtensionSuiteTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/signature/BuildKnownObjectsTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/signature/PdfBoxPAdESSignatureSuiteTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/timestamp/PDFTimestampServiceTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/validation/DSS1823Test.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/validation/PDFDocumentValidatorCheckTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/validation/PdfBoxPAdESValidationSuiteTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/DSS1443Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/DSS1469ExtensionTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/DSS1523Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionBToLTATest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionBToLTTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionBToTTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionBToTWithCompositeTSATest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionBToTWithError500TimestampTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionBToTWithFailTimestampTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionLTAToLTATest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionLTToLTATest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionLTToLTAWithError500TimestampTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionLTToLTAWithFailTimestampTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionTToLTATest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionTToLTTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/BuildKnownObjectsTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/ExternalCMSPAdESSignatureTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PAdESBExtendToLTACheckTimeStampIDTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PAdESLTACheckTimeStampIDTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PAdESLTACheckTimeStampedTimestampIDTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PAdESLevelLTATest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PDFTimestampFiltersTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/timestamp/AbstractPAdESTimestampTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/timestamp/AbstractPDFTimestampServiceTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/PDFDocumentValidatorCheckTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/ASN1PolicyTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/ArchiveTimestampCoverageTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/BadEncodedCMSTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DSS1188Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DSS1376GetOriginalDocTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DSS1420Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DSS1538Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DSS1683Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DSS1690Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DSS1794Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DSS1899Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DSS1972Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DSS1983Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DSS818Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DSS917Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DiagnosticDataCompleteTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/EtsiValidationReportCompleteTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PAdESCorruptedSigTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PAdESMultipleFieldSignatureReferenceTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PAdESNonLatinCharactersValidationTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PAdESOutOfByteRangeTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PAdESSimpleCorruptedTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PAdESSimpleValidationTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PAdESTimestampWithOrphanRefsTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PAdESWithOrphanOcspCertRefsTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PadesWrongDigestAlgoTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PdfPkcs7Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PolicyZeroHashTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/SIWATest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/SignatureTimestampCertificateNotFoundTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss1420/DSS1420Sha224Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss1420/DSS1420Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss1469/DSS1469LTTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss1469/DSS1469Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss1696/ArchiveTimestampCoverageTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss1696/DoubleArchiveTstCoverageTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss1794/DSS1794CrlTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss1794/DSS1794OcspTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss1899/DSS1899Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss1899/DSS1899TstWithNullTypeTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss818/AbstractDSS818Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss818/DSS818ADOTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss818/DSS818CRYTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss818/DSS818SKTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss917/DSS917CorruptedTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/dss917/DSS917Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/revocation/PAdESDssAndVriTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/revocation/PAdESFiveSignaturesDocTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/revocation/PAdESMultiSignedDocRevocTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/revocation/PAdESRevocationOriginTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/revocation/PAdESSignatureDigestRefPresenceTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/revocation/PAdESSignatureDigestReferenceTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionBToLTATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionBToLTTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionBToTCustomPrefixesTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionBToTTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionBToTWithCompositeTSATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionBToTWithError500TimestampTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionBToTWithFailTimestampTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionLTAToLTATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionLTToLTATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionLTToLTAWithError500TimestampTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionLTToLTAWithFailTimestampTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionTToLTATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionTToLTTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/prettyprint/XAdESClassicSignatureAndPrettyPrintExtensionTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/prettyprint/XAdESDoubleLTAClassicAndPrettyPrintTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/prettyprint/XAdESDoubleLTAPrettyPrintAndClassicTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/prettyprint/XAdESDoubleLTAPrettyPrintTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/prettyprint/XAdESExtensionBToLTAPrettyPrintTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/prettyprint/XAdESExtensionTToLTTPrettyPrintTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/prettyprint/XAdESPrettyPrintedSignatureAndOneLineTimestampTest.java']"
esig/dss,https://github.com/esig/dss,1f5d46688b704ff39ad00e1a9a8ed9c1891bfc9f,c7d60e82fff309087f2edd999db3910fe0d0e3b2,https://github.com/esig/dss/commit/1f5d46688b704ff39ad00e1a9a8ed9c1891bfc9f,"DSS-2013 : validation tests refactoring, extension tests refactored + XAdES validation + minor refactoring of signature scope and original docs extraction",2020-04-09 16:14:07,Aleksandr Beliakov,"['dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCeCAdESExtensionASiCXAdESTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCeExtensionWithCAdESBToTWithFailTimestampTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCeExtensionWithCAdESLTToLTAWithFailTimestampTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCeTimestampingTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asics/ASiCsCAdESExtensionOpenDocumentTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asics/ASiCsExtensionWithCAdESBToTWithFailTimestampTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asics/ASiCsExtensionWithCAdESLTToLTAWithFailTimestampTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/ASiCWithCAdESServiceTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESDoubleLTAExtensionTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESLTAValidationDataTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESLevelBDoubleValidationTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESLevelBMultiFilesParallelTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESLevelBSignFourTimeTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESMultipleArchiveTimestampsTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESMultipleTimestampsTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESSignLTALevelTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESSignOpenDocumentTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCEWithCAdESAllSelfSignedCertsTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESLevelBMultiFilesParallelTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESLevelBSignFourTimeTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESMultipleTimestampsTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESSignASiCXAdESTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESSignLTALevelTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCsWithCAdESAllSelfSignedCertsTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/timestamp/asice/ASiCETimestampMultiFilesTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/timestamp/asice/ASiCETimestampOneFileTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/timestamp/asics/ASiCSTimestampMultiFilesTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/timestamp/asics/ASiCSTimestampOneFileTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCEBrokenReferenceTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCEMalformedValidatorTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCERemovedReferenceTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCETwoSignaturesInOneTimeTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCEWithCAdESLTACheckTimeStampIDTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCEWithCAdESTimestampValidatorTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCEWithNewLineMimeTypeTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCSWithCAdESLTACheckTimeStampIDTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCWithCAdESTimestampOrderTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/DSS1421Test.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/DSS1792Test.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/DSS1809Test.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/ZipExtractorTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asice/ASiCeExtensionWithXAdESBToTWithFailTimestampTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asice/ASiCeExtensionWithXAdESLTToLTAWithFailTimestampTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asics/ASiCsExtensionWithXAdESBToTWithFailTimestampTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asics/ASiCsExtensionWithXAdESLTToLTAWithFailTimestampTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asics/ASiCsXAdESExtensionASiCCAdESTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/opendocument/OpenDocumentExtensionBToLTASelfSignedTSATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/opendocument/OpenDocumentExtensionBToLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/opendocument/OpenDocumentExtensionBToLTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/opendocument/OpenDocumentExtensionBToTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/opendocument/OpenDocumentExtensionBToTWithFailTimestampTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/opendocument/OpenDocumentExtensionLTToLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/opendocument/OpenDocumentExtensionLTToLTAWithFailTimestampTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/opendocument/OpenDocumentExtensionPrettyPrintBToClassicLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/opendocument/OpenDocumentExtensionTToLTASelfSignedTSATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/opendocument/OpenDocumentExtensionTToLTASelfSignedTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/opendocument/OpenDocumentExtensionTToLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/opendocument/OpenDocumentExtensionTToLTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/ASiCLevelBInclusiveCanonicalizationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/ASiCWithXAdESServiceTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEWithXAdESAllSelfSignedCertsTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESLevelBMultiArchivesParallelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESLevelBMultiFilesParallelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESLevelBSignFourTimeTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESMultipleTimestampsTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESSignASiCCAdESTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESSignLTALevelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSWithXAdESAllSelfSignedCertsTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESLevelBMultiFilesParallelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESLevelBSignFourTimeTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESMultipleTimestampsTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESSignLTALevelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentAllSelfSignedCertsTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentLevelBMultipleSignaturesTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentMultipleTimestampsTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/timestamp/UnsupportedOperationTimestampASiCContainerWithXAdESTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCE_XAdESLTACheckTimeStampIDTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/validation/ASiCS_XAdESLTACheckTimeStampIDTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionAllSelfSignedCertsTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionBToTWithError500TimestampTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionBToTWithFailTimestampTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionDetachedWithContentTimestampTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionLTToLTAWithError500TimestampTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionLTToLTAWithFailTimestampTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/CAdESExtensionNoDetachedFileBToLTATest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/DSS1220Test.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/extension/ExtendToCAdESLtaTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESAllSelfSignedCertsTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESDoubleLTATest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESDoubleLTAValidationDataTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESDoubleSignatureDetachedTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESDoubleSignatureTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBDetachedDigestDocumentTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBWithZeroPolicyTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelLTADetachedDigestTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelLTATS101733Test.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESServiceTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/DSS798Test.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/UntrustedConfigTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/timestamp/UnsupportedOperationTimestampCAdESTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESBExtendToLTACheckTimeStampIDTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESCertificateWrapperTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESDetachedWithCounterSigTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESDetachedWithTstV2Test.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESDoubleLTATest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESLTACheckTimeStampIDTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESLTACheckTimeStampedTimestampIDTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESNoDetachedFileProvidedTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESRevocationWrapperTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESSignatureScopeTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESSignatureWrapperTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESSignedDataExtendedAfterLTATest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESWithDEREncodedTimestampTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESWithGeneralizedSigningTimeTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CAdESWithSpecialCharInFilenameTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/CounterSignatureValidationTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/DSS1619Test.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/DSS1871Test.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/DSS1956Test.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/DSS1997Test.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/GetOriginalDocumentTest.java', 'dss-cookbook/src/test/java/plugtests/SignaturePoolTest.java', 'dss-pades-openpdf/src/test/java/eu/europa/esig/dss/pades/signature/BuildKnownObjectsTest.java', 'dss-pades-openpdf/src/test/java/eu/europa/esig/dss/pades/timestamp/PDFTimestampServiceTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/signature/BuildKnownObjectsTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/signature/visible/AbstractPDFAVisibleSignatureTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/signature/visible/DefaultVsNativeDrawerComparatorTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/signature/visible/PAdESVisibleSignaturePositionTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/timestamp/PDFTimestampServiceTest.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/validation/DSS1496Test.java', 'dss-pades-pdfbox/src/test/java/eu/europa/esig/dss/pades/validation/DSS1823Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/DSS1523Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionAllSelfSignedCertsTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionBToTWithError500TimestampTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionBToTWithFailTimestampTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionLTToLTAWithError500TimestampTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PAdESExtensionLTToLTAWithFailTimestampTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PDFArchiveTimestampingTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/extension/suite/PDFTimestampingTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/DigestStabilityTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/GetOriginalDocumentTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PAdESAllSelfSignedCertsTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PAdESBExtendToLTACheckTimeStampIDTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PAdESDoubleLTAValidationDataTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PAdESDoubleSignatureTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PAdESLTACheckTimeStampIDTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PAdESLTACheckTimeStampedTimestampIDTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PAdESLevelBNotEnoughSpaceForSignatureTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PAdESNoDuplicateValidationDataTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PAdESServiceTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PAdESTwoSignersLTALevelTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/PDFTimestampFiltersTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/ProtectedDocumentsSignatureTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/suite/TwoPAdESSigniatureMustHaveDifferentIdTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/visible/suite/PAdESSignatureFieldTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/visible/suite/PAdESVisibleCombinationTextAndImageSignatureTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/visible/suite/PAdESVisibleDocRotationTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/visible/suite/PAdESVisibleSignWithSignatureFieldTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/visible/suite/PAdESVisibleSignatureTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/visible/suite/PAdESVisibleSignatureWithJavaFontTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/visible/suite/PAdESVisibleZoomRotationTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/timestamp/AbstractPAdESTimestampTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/ASN1PolicyTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/ArchiveTimestampCoverageTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DSS1443Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DSS1683Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/DiagnosticDataCompleteTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/EtsiValidationReportCompleteTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PAdESCorruptedSigTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PAdESMultipleFieldSignatureReferenceTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PAdESNonLatinCharactersValidationTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/PolicyZeroHashTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/validation/suite/SignatureTimestampCertificateNotFoundTest.java', 'dss-signature-remote/src/test/java/eu/europa/esig/dss/ws/signature/common/AbstractRemoteSignatureServiceTest.java', 'dss-timestamp-remote/src/test/java/eu/europa/esig/dss/ws/timestamp/remote/RemoteTimestampServiceTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/ExtendWithLastTimestampValidationDataTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/ExtendXAdESBWithoutSignedDataObjectPropertiesToTTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/ImpossibleExtensionTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionAllSelfSignedCertsTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionBToLTATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionBToTWithError500TimestampTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionBToTWithFailTimestampTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionDetachedWithContentTimestampTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionLTToLTAWithError500TimestampTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionLTToLTAWithFailTimestampTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionNoDetachedFileBToATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionNoDetachedFileBToLTATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionRevocationFreshnessTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/XAdESExtensionWithContentTimestampTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/prettyprint/XAdESExtensionFromLTToLTAWithIndentsTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/requirements/XAdESBaselineBTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/requirements/XAdESBaselineLTATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/requirements/XAdESBaselineLTTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/requirements/XAdESBaselineTTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/DSS1334SignatureTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/DSS1811Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/DSS798Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/DSS920Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/DSS920WithWrongDigestTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/EmbeddedNotXmlSignatureExceptionTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESAllSelfSignedCertsTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESCrossCertificationDoubleLTATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESDoubleLTATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESDoubleSignatureTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESIndividualDataTimestampTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBBase64TransformTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBDetachedDigestDocumentTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBDetachedTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBDetachedTransformsTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopedDuplicateSignatureTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopedTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopedWithReferenceTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopingTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopingWithRefsTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBWith2ReferencesTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBXPathFilter2TransformTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBXPathTransformTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBXSLTTransformTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelLTAEnvelopingTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelXLTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESNoDetachedFileProvidedTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESServiceTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESXPath2FilterDoubleSignatureTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/prettyprint/DoubleSignaturePrettyPrintTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/prettyprint/SignSignatureWithTimestampTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/timestamp/UnsupportedOperationTimestampXAdESTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/CounterSignatureValidationTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS1135Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS1334Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS1338Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS1524Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS1562Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS1636Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS1647Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS1661Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS1688Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS1770Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS1788Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS817Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS874Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS920ValidationWithDigestTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DTDInjectionTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/EccBrainpoolTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/GetOriginalDocumentTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/LevelBWithCertificateValueTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/RefsOnlyTimestampTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/SignedPropertiesNotCheckedTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdES111ValidationTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESAttrAuthoritiesTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESAttrAuthoritiesValuesTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESBExtendToLTACheckTimeStampIDTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESCertRefToOCSPRespEmbeddedCertTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESCertSourcesTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESDoubleManifestTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESDoubleSignedDifferentOCSPTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESLTACheckTimeStampIDTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESLTACheckTimeStampedTimestampIDTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESLTACorruptedCertTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESLTAKeyInfoCertTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESLTATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESLTAWithTrustServiceTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESLevelXValidationTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESManifestSignatureScopeTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESMultipeCertSourcesTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESNoReferenceTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESNoSignedPropertiesTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESOCSPSourceTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESSignatureIdentifierTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESSignatureScopeTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESSignedPropertiesTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESValidationDataRefsTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESValidationTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESWithOcspNoEmbeddedCertsTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESWithPolicyNewLinesAndWhitespaceTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XAdESWithPolicyValidationTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XMLCertificateWrappingTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XMLDSigOnlyValidationTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XMLRevocationWrappingTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XMLSignatureWrappingTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/XPointerValidationTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/dkcert/DKExpectedSigCertTest.java']"
esig/dss,https://github.com/esig/dss,4c63587b910966c23d95ddde4039de762123333a,9d9dcf7ed3097a8ad130c1fcee93bc8e9f9acdc1,https://github.com/esig/dss/commit/4c63587b910966c23d95ddde4039de762123333a,DSS-2018 : Log a warning on non-supported MimeTypes + small refactoring + added unit tests,2020-03-31 16:19:49,Aleksandr Beliakov,"['dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/ASiCEWithNewLineMimeTypeTest.java', 'dss-model/src/test/java/eu/europa/esig/dss/model/MimeTypeTest.java']"
esig/dss,https://github.com/esig/dss,aa097b66b77c066db2ba757833d0fcb43578f4a0,e8dc97428f6484429ce78990ec03847a41330325,https://github.com/esig/dss/commit/aa097b66b77c066db2ba757833d0fcb43578f4a0,DSS-2009 TimestampType + TimestampCoherenceOrderCheck refactoring + unit test added,2020-03-12 15:07:51,Aleksandr Beliakov,"['validation-policy/src/test/java/eu/europa/esig/dss/validation/process/vpfltvd/TimestampCoherenceOrderCheckTest.java', 'validation-policy/src/test/java/eu/europa/esig/dss/validation/process/vpfswatsp/POEComparatorTest.java']"
esig/dss,https://github.com/esig/dss,c9483a5cd2fb072ba9fb802facc9c1d74378704d,998310340c8318bbd7fe036575233aca8280204d,https://github.com/esig/dss/commit/c9483a5cd2fb072ba9fb802facc9c1d74378704d,DSS-1974 signature creation refactoring + added unit tests,2020-02-20 16:08:03,Aleksandr Beliakov,"['dss-jades/src/test/java/eu/europa/esig/dss/jades/signature/JAdESLevelBEnvelopingRSATest.java', 'dss-jades/src/test/java/eu/europa/esig/dss/jades/signature/JAdESLevelBEnvelopingRSAandMGF1Test.java', 'dss-jades/src/test/java/eu/europa/esig/dss/jades/signature/JAdESLevelBTest.java', 'dss-jades/src/test/java/eu/europa/esig/dss/jades/signature/JAdESLevelBWithAECDSATest.java', 'dss-jades/src/test/java/eu/europa/esig/dss/jades/signature/JAdESLevelBWithContentTimestampTest.java', 'dss-jades/src/test/java/eu/europa/esig/dss/jades/signature/JAdESLevelBWithSignerRolesTest.java']"
esig/dss,https://github.com/esig/dss,bad1c1acc2c47f4a23e8aca099c339e17cc5c9d7,f055c80cbcaed096ca20c21f88e1ab7b1667adc1,https://github.com/esig/dss/commit/bad1c1acc2c47f4a23e8aca099c339e17cc5c9d7,"revocation range check changed to inclusive, added unit tests, minor refactoring",2020-01-22 09:17:13,Aleksandr Beliakov,['validation-policy/src/test/java/eu/europa/esig/dss/validation/executor/CustomProcessExecutorTest.java']
esig/dss,https://github.com/esig/dss,b2da9cda9a85e3ae86624e514c093e294fa1329f,1260d10de094766021f5e10136d1cd9355479cb7,https://github.com/esig/dss/commit/b2da9cda9a85e3ae86624e514c093e294fa1329f,"fixed isConsistant() method in VTS, added unit test + minor DiagnosticData refactoring",2019-12-10 08:37:48,Aleksandr Beliakov,['validation-policy/src/test/java/eu/europa/esig/dss/validation/executor/CustomProcessExecutorTest.java']
esig/dss,https://github.com/esig/dss,9eb0d79d5aacaf0e857956b226f3949e46acc657,5b7bdb1e40a9a42f8b7a71719546fb0785fbcbaa,https://github.com/esig/dss/commit/9eb0d79d5aacaf0e857956b226f3949e46acc657,"DSS-1808 cross format signature/extension tests added, file name refactoring",2019-11-04 10:59:18,Aleksandr Beliakov,"['dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asice/ASiCeCAdESExtensionASiCXAdESTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/extension/asics/ASiCsCAdESExtensionOpenDocumentTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESSignOpenDocumentTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESWithSHA3Test.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCeWithCAdESAllSelfSignedCertsTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESLevelBMultiFilesWithoutNameTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESSignASiCXAdESTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/asics/ASiCsXAdESExtensionASiCCAdESTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/extension/opendocument/OpenDocumentExtensionBToTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESSignASiCCAdESTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCeWithXAdESAllSelfSignedCertsTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/AsiCEXAdESLevelLTAWithKeyInfoTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCsWithXAdESAllSelfSignedCertsTest.java']"
esig/dss,https://github.com/esig/dss,d7f6c4d2fa8ceff8a240ffc93353ea58eeaa873f,12191c71ecde664811450e581a632b2dba27857e,https://github.com/esig/dss/commit/d7f6c4d2fa8ceff8a240ffc93353ea58eeaa873f,"added openDocument test, method renaming, minor refactoring",2019-10-07 08:17:59,Aleksandr Beliakov,"['dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESDoubleLTAExtensionTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESLevelBMultiArchivesTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESLevelBMultiFilesParallelTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESLevelBMultiFilesTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESLevelBTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESMultipleArchiveTimestampsTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESMultipleTimestampsTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESSignLTALevelTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESLevelBMultiFilesParallelTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESLevelBTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESLevelBWithODTFileTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESLevelBWithSignatureNameTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESLevelBWithZipCommentTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESMultipleTimestampsTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESSignLTALevelTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/validation/DSS1792Test.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/ZipExtractorTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESLevelBMultiArchivesParallelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESLevelBMultiFilesParallelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESLevelBTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESMultiFilesLevelBTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESMultiFilesLevelLTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESMultiFilesLevelLTWithKeyInfoTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESMultipleTimestampsTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESSignLTALevelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESLevelBMultiFilesParallelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESLevelBTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESMultiFilesLevelBTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESMultipleTimestampsTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESSignLTALevelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentLevelBMultipleSignaturesTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentMultipleArchivesLevelBTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentMultipleArchivesLevelLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentMultipleArchivesLevelLTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentMultipleArchivesLevelTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentMultipleTimestampsTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/opendocument/OpenDocumentSignLTALevelTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/encoding/EncodingXMLTest.java']"
esig/dss,https://github.com/esig/dss,12191c71ecde664811450e581a632b2dba27857e,436d3d1688141241025045721f4407ee15102def,https://github.com/esig/dss/commit/12191c71ecde664811450e581a632b2dba27857e,"added LTA double signature tests for all formats, fixed ASiC container extractor output, asics-xades signature issue, minor refactoring",2019-10-04 09:50:39,Aleksandr Beliakov,"['dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asice/ASiCECAdESSignLTALevelTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/cades/signature/asics/ASiCSCAdESSignLTALevelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/ZipExtractorTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asice/ASiCEXAdESSignLTALevelTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/xades/signature/asics/ASiCSXAdESSignLTALevelTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESDoubleSignatureTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESDoubleSignatureTest.java']"
esig/dss,https://github.com/esig/dss,ead4ad15ae5c65d28f2b85b81b967ef7f4401d81,ea858b4b5cac8ae970f82a760a2d3f14df0ff76b,https://github.com/esig/dss/commit/ead4ad15ae5c65d28f2b85b81b967ef7f4401d81,Refactor +enforce tests,2019-07-09 08:19:04,Pierrick Vandenbroucke,"['dss-cades/src/test/java/plugtests/ETSISamplesValidationTest.java', 'specs-trusted-list/src/test/java/eu/europa/esig/jaxb/trustedlist/TrustedListFacadeTest.java', 'specs-trusted-list/src/test/java/eu/europa/esig/jaxb/trustedlist/TrustedListUtilsTest.java', 'specs-validation-report/src/test/java/eu/europa/esig/jaxb/validationreport/ValidationReportFacadeTest.java', 'validation-policy/src/test/java/eu/europa/esig/dss/validation/executor/CustomProcessExecutorTest.java']"
esig/dss,https://github.com/esig/dss,3ea7c1555df6b31d26a28a627d206e726f94fc02,68bb0088d379f999beda7cca76fa039fd2c4928c,https://github.com/esig/dss/commit/3ea7c1555df6b31d26a28a627d206e726f94fc02,"- minor code refactoring;
- updated unit test.",2019-04-23 10:13:45,Aleksandr Beliakov,['dss-xades/src/test/java/eu/europa/esig/dss/xades/extension/prettyprint/XAdESExtensionFromLTToLTAWithIndentsTest.java']
esig/dss,https://github.com/esig/dss,506f38388d9dbdae2e61a3714806b2a0d42c7680,40dd6750b29903e543fbb7450d464c9c43616bef,https://github.com/esig/dss/commit/506f38388d9dbdae2e61a3714806b2a0d42c7680,Refactor unit tests + fix XAdES getOriginalDocuments,2018-03-09 15:06:17,pvandenbroucke,"['dss-cades/src/test/java/eu/europa/esig/dss/cades/validation/GetOriginalDocumentTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/TrustedListSigningTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBDetachedInclusiveCanonicalizationTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBDetachedNoFilenameTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBDetachedSpecialCharTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBDetachedTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopedHtmlISO88951Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopedHtmlUTF8Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopedInclusiveCanonicalizationTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopedInclusiveCanonicalizationWithXPathTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopedNoHeaderTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopedNoXmlTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopedRSATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopedRSAandMGF1Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopedWithReferenceTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopedWithReferencesWithoutTransformationsTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopedWithXPathTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBEnvelopingWithReferencesWithoutTransformationsTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBExternalSignatureTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBInclusiveCanonicalizationTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBIndividualDataObjectTimeStampTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBPreEN319132Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBRIPEMD160Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBSpecialCharTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBWithDSATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBWithECDSATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBWithPolicyTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelBWithSignaturePolicyImpliedTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelCTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelLTAAlternatePkiForTsaTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelLTACrossCertificationTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelLTANoCertChainTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelLTAPreEN319132Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelLTASelfSignedTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelLTATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelLTCrossCertififcationTSATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelLTPreEN319132Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelLTRevokedTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelLTTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelLTWrongAIATest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelTPreEN319132Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelTTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelXLTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESLevelXTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/signature/XAdESManifestLevelBTest.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/DSS1338Test.java', 'dss-xades/src/test/java/eu/europa/esig/dss/xades/validation/GetOriginalDocumentTest.java']"
esig/dss,https://github.com/esig/dss,f8bb8faa4181fdf4e4b7df656b2592848d0d6595,e9cefd69af5830fa93355b93e3a146f8355c843b,https://github.com/esig/dss/commit/f8bb8faa4181fdf4e4b7df656b2592848d0d6595,Start refactoring unit tests + generalization of getOriginalDocument unit test,2018-03-08 16:27:30,pvandenbroucke,"['dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asice/ASiCECAdESLevelBSHA512Test.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asice/ASiCECAdESLevelBSpecialCharInFilenameTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asice/ASiCECAdESLevelBTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asice/ASiCECAdESLevelLTATest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asice/ASiCECAdESLevelLTTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asice/ASiCECAdESLevelTTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSCAdESLevelBSHA512Test.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSCAdESLevelBSpecialCharInFilenameTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSCAdESLevelBTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSCAdESLevelBWithMimeTypeTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSCAdESLevelBWithODTFileTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSCAdESLevelBWithSignatureNameTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSCAdESLevelBWithZipCommentTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSCAdESLevelLTATest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSCAdESLevelLTTest.java', 'dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSCAdESLevelTTest.java', 'dss-asic-cades/src/test/java/known/issues/ASiCECAdESMultipleArchiveTimestampsTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asice/ASiCEXAdESLevelBInclusiveCanonicalizationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asice/ASiCEXAdESLevelBPolicyIdTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asice/ASiCEXAdESLevelBSHA512Test.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asice/ASiCEXAdESLevelBSpecialCharInFilenameTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asice/ASiCEXAdESLevelBTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asice/ASiCEXAdESLevelLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asice/ASiCEXAdESLevelLTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asice/ASiCEXAdESLevelTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSXAdESLevelBInclusiveCanonicalizationTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSXAdESLevelBSHA512Test.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSXAdESLevelBSpecialCharInFilenameTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSXAdESLevelBTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSXAdESLevelBWithODTFileTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSXAdESLevelLTATest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSXAdESLevelLTTest.java', 'dss-asic-xades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSXAdESLevelTTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBDetachedTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBDetachedWithContentTimestampTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBExternalSignatureTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBRSATest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBWithContentTimestampTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBWithDSATest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBWithECDSATest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBWithExpiredCertificateTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBWithMGF1Test.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBWithPolicyTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBWithSHA512andMGF1Test.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelBWithTwoContentTimestampsTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelLTATest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelLTTest.java', 'dss-cades/src/test/java/eu/europa/esig/dss/cades/signature/CAdESLevelTTest.java', 'dss-cades/src/test/java/known/issues/CAdESLevelBwithSHA3PkiDetachedTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/PAdESFieldLevelBTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/PAdESLevelBExternalSignatureTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/PAdESLevelBTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/PAdESLevelBWithContentTimestampTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/PAdESLevelBWithDSATest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/PAdESLevelBWithECDSATest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/PAdESLevelBWithSHA256andMGF1Test.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/PAdESLevelLTATest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/PAdESLevelLTTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/PAdESLevelTTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/PAdESWithSignatureAndTimestampVisibleTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/PAdESWithSignatureInvisibleAndTimestampVisibleTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/PAdESWithSignatureVisibleAndTimestampInvisibleTest.java', 'dss-pades/src/test/java/eu/europa/esig/dss/pades/signature/PDFAPAdESLevelBTest.java']"
esig/dss,https://github.com/esig/dss,17beff3471bcbe62c5d728031b49b6e32cb78602,023195963b8d84c416ace4cefaac83b2b81fac45,https://github.com/esig/dss/commit/17beff3471bcbe62c5d728031b49b6e32cb78602,"Refactor NativeHTTPDataLoader:
- extracting MaxSizeInputStream to its own file
- adding timeout configuration (default value is disabled)
- adding tests of maxSize, timeout and different protocols (file and http)

Refactor of FileCacheDataLoader to ease the use and enable composition with other DataLoader impl
- CommonsDataLoader is the default implementation",2017-06-14 18:00:30,Davyd Santos,['dss-spi/src/test/java/eu/europa/esig/dss/client/http/NativeHTTPDataLoaderTest.java']
esig/dss,https://github.com/esig/dss,53619a2397168e827a567ff49a0518ede13a3b09,e701690565ec9250d83188aa6f9462ae4bf4a3f0,https://github.com/esig/dss/commit/53619a2397168e827a567ff49a0518ede13a3b09,Art32 : add unit tests  + refactor,2017-01-12 11:00:01,pvandenbroucke,['validation-policy/src/test/java/eu/europa/esig/dss/validation/process/art32/qualification/checks/sscd/SSCDTest.java']
esig/dss,https://github.com/esig/dss,4cfb59696edadea15e5bf4fb7b61ddad8be621f4,b4a4c0768603600a49fa7319360576a7735d07b8,https://github.com/esig/dss/commit/4cfb59696edadea15e5bf4fb7b61ddad8be621f4,refactor get data to sign ASiC with CAdES + fix unit tests,2016-12-07 22:27:46,Pierrick Vandenbroucke,['dss-asic-cades/src/test/java/eu/europa/esig/dss/asic/signature/asics/ASiCSCAdESLevelBSHA512Test.java']
esig/dss,https://github.com/esig/dss,40e35389807ddaefee3635641ec802969d1e9a74,08dd8e3075f1b4bc6210ee03f2eebc87975ac2b1,https://github.com/esig/dss/commit/40e35389807ddaefee3635641ec802969d1e9a74,"Refactoring, code cleaning, dependencies cleaning, add unit test",2015-07-20 13:11:50,pvandenbroucke,['dss-spi/src/test/java/eu/europa/esig/dss/x509/CertificateTokenTest.java']
